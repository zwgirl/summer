/*
* generated by Xtext
*/
grammar InternalSs;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.summer.ss.core.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.summer.ss.core.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.summer.ss.core.services.SsGrammarAccess;

}

@parser::members {

 	private SsGrammarAccess grammarAccess;
 	
    public InternalSsParser(TokenStream input, SsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "JvmModule";	
   	}
   	
   	@Override
   	protected SsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleJvmModule
entryRuleJvmModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmModuleRule()); }
	 iv_ruleJvmModule=ruleJvmModule 
	 { $current=$iv_ruleJvmModule.current; } 
	 EOF 
;

// Rule JvmModule
ruleJvmModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmModuleAccess().getPackageKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getPackageNameQualifiedNameParserRuleCall_0_1_0()); 
	    }
		lv_packageName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		set(
       			$current, 
       			"packageName",
        		lv_packageName_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_2='module' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJvmModuleAccess().getModuleKeyword_1());
    }
(
(
		lv_simpleName_3_0=RULE_ID
		{
			newLeafNode(lv_simpleName_3_0, grammarAccess.getJvmModuleAccess().getSimpleNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_3_0, 
        		"ID");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJvmModuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getImportSectionXImportSectionParserRuleCall_4_0()); 
	    }
		lv_importSection_5_0=ruleXImportSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		set(
       			$current, 
       			"importSection",
        		lv_importSection_5_0, 
        		"XImportSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getRootXObjectElementParserRuleCall_5_0()); 
	    }
		lv_root_6_0=ruleXObjectElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		set(
       			$current, 
       			"root",
        		lv_root_6_0, 
        		"XObjectElement");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getContentsTypeParserRuleCall_6_0_0_0()); 
	    }
		lv_contents_7_1=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_7_1, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getContentsDelegateTypeParserRuleCall_6_0_0_1()); 
	    }
		lv_contents_7_2=ruleDelegateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_7_2, 
        		"DelegateType");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getContentsXStatmentParserRuleCall_6_1_0()); 
	    }
		lv_contents_8_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_8_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmModuleAccess().getExportSectionXExportSectionParserRuleCall_7_0()); 
	    }
		lv_exportSection_9_0=ruleXExportSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmModuleRule());
	        }
       		set(
       			$current, 
       			"exportSection",
        		lv_exportSection_9_0, 
        		"XExportSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getJvmModuleAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleXImportSection
entryRuleXImportSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXImportSectionRule()); }
	 iv_ruleXImportSection=ruleXImportSection 
	 { $current=$iv_ruleXImportSection.current; } 
	 EOF 
;

// Rule XImportSection
ruleXImportSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0_0()); 
	    }
		lv_importDeclarations_0_0=ruleXImportDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportSectionRule());
	        }
       		add(
       			$current, 
       			"importDeclarations",
        		lv_importDeclarations_0_0, 
        		"XImportDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXImportSectionAccess().getSemicolonKeyword_1());
    }
)?)+
;





// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXImportDeclarationRule()); }
	 iv_ruleXImportDeclaration=ruleXImportDeclaration 
	 { $current=$iv_ruleXImportDeclaration.current; } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXImportDeclarationAccess().getXImportDeclarationAction_0(),
            $current);
    }
)	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXImportDeclarationAccess().getImportKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXImportDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportItemsXImportItemParserRuleCall_3_0_0_0()); 
	    }
		lv_importItems_3_0=ruleXImportItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		add(
       			$current, 
       			"importItems",
        		lv_importItems_3_0, 
        		"XImportItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXImportDeclarationAccess().getCommaKeyword_3_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportItemsXImportItemParserRuleCall_3_0_1_1_0()); 
	    }
		lv_importItems_5_0=ruleXImportItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		add(
       			$current, 
       			"importItems",
        		lv_importItems_5_0, 
        		"XImportItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
(
		lv_wildcard_6_0=	'*' 
    {
        newLeafNode(lv_wildcard_6_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "wildcard", true, "*");
	    }

)
))	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXImportDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
	otherlv_8='from' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getFromKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameParserRuleCall_6_0()); 
	    }
		lv_importedNamespace_9_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_9_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='as' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXImportDeclarationAccess().getAsKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getAliasValidIDParserRuleCall_8_0()); 
	    }
		lv_alias_11_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_11_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXImportItem
entryRuleXImportItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXImportItemRule()); }
	 iv_ruleXImportItem=ruleXImportItem 
	 { $current=$iv_ruleXImportItem.current; } 
	 EOF 
;

// Rule XImportItem
ruleXImportItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXImportItemAccess().getXImportItemAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportItemRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getXImportItemAccess().getImportedIdJvmIdentifiableElementCrossReference_1_0()); 
	}

)
)(	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXImportItemAccess().getAsKeyword_2_0());
    }
(
(
		lv_alias_3_0=RULE_ID
		{
			newLeafNode(lv_alias_3_0, grammarAccess.getXImportItemAccess().getAliasIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_3_0, 
        		"ID");
	    }

)
))?)
;





// Entry rule entryRuleXExportSection
entryRuleXExportSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExportSectionRule()); }
	 iv_ruleXExportSection=ruleXExportSection 
	 { $current=$iv_ruleXExportSection.current; } 
	 EOF 
;

// Rule XExportSection
ruleXExportSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXExportSectionAccess().getExportDeclarationsXExportDeclarationParserRuleCall_0_0()); 
	    }
		lv_exportDeclarations_0_0=ruleXExportDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExportSectionRule());
	        }
       		add(
       			$current, 
       			"exportDeclarations",
        		lv_exportDeclarations_0_0, 
        		"XExportDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXExportSectionAccess().getSemicolonKeyword_1());
    }
)?)+
;





// Entry rule entryRuleXExportDeclaration
entryRuleXExportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExportDeclarationRule()); }
	 iv_ruleXExportDeclaration=ruleXExportDeclaration 
	 { $current=$iv_ruleXExportDeclaration.current; } 
	 EOF 
;

// Rule XExportDeclaration
ruleXExportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='export' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXExportDeclarationAccess().getExportKeyword_0());
    }
((	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXExportDeclarationAccess().getLeftCurlyBracketKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXExportDeclarationAccess().getExportItemsXExportItemParserRuleCall_1_0_1_0()); 
	    }
		lv_exportItems_2_0=ruleXExportItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExportDeclarationRule());
	        }
       		add(
       			$current, 
       			"exportItems",
        		lv_exportItems_2_0, 
        		"XExportItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXExportDeclarationAccess().getCommaKeyword_1_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXExportDeclarationAccess().getExportItemsXExportItemParserRuleCall_1_0_2_1_0()); 
	    }
		lv_exportItems_4_0=ruleXExportItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExportDeclarationRule());
	        }
       		add(
       			$current, 
       			"exportItems",
        		lv_exportItems_4_0, 
        		"XExportItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXExportDeclarationAccess().getRightCurlyBracketKeyword_1_0_3());
    }
(	otherlv_6='from' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXExportDeclarationAccess().getFromKeyword_1_0_4_0());
    }
(
(
		lv_importURI_7_0=RULE_STRING
		{
			newLeafNode(lv_importURI_7_0, grammarAccess.getXExportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXExportDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_7_0, 
        		"STRING");
	    }

)
))?)
    |(	otherlv_8='from' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXExportDeclarationAccess().getFromKeyword_1_1_0());
    }
(
(
		lv_importURI_9_0=RULE_STRING
		{
			newLeafNode(lv_importURI_9_0, grammarAccess.getXExportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXExportDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_9_0, 
        		"STRING");
	    }

)
)	otherlv_10='as' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXExportDeclarationAccess().getAsKeyword_1_1_2());
    }
(
(
		lv_alias_11_0=RULE_ID
		{
			newLeafNode(lv_alias_11_0, grammarAccess.getXExportDeclarationAccess().getAliasIDTerminalRuleCall_1_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXExportDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_11_0, 
        		"ID");
	    }

)
))))
;





// Entry rule entryRuleXExportItem
entryRuleXExportItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExportItemRule()); }
	 iv_ruleXExportItem=ruleXExportItem 
	 { $current=$iv_ruleXExportItem.current; } 
	 EOF 
;

// Rule XExportItem
ruleXExportItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXExportItemRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getXExportItemAccess().getExportedIdJvmIdentifiableElementCrossReference_0_0()); 
	}

)
)(	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXExportItemAccess().getAsKeyword_1_0());
    }
(
(
		lv_alias_2_0=RULE_ID
		{
			newLeafNode(lv_alias_2_0, grammarAccess.getXExportItemAccess().getAliasIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXExportItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_2_0, 
        		"ID");
	    }

)
))?)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getJvmDeclaredTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getAnnotationsJvmAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotations_1_0=ruleJvmAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_1_0, 
        		"JvmAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmGenericTypeAnnotationInfoAction_2_0_0(),
            $current);
    }
)(
(
		lv_exported_3_0=	'export' 
    {
        newLeafNode(lv_exported_3_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getModifiersClassModofierParserRuleCall_2_0_2_0()); 
	    }
		lv_modifiers_4_0=ruleClassModofier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_4_0, 
        		"ClassModofier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='class' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getClassKeyword_2_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_0_4_0()); 
	    }
		lv_simpleName_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='<' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_0_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_0_5_1_0()); 
	    }
		lv_typeParameters_8_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_8_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTypeAccess().getCommaKeyword_2_0_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_0_5_2_1_0()); 
	    }
		lv_typeParameters_10_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_10_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='>' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_0_5_3());
    }
)?(	otherlv_12='extends' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTypeAccess().getExtendsKeyword_2_0_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_6_1_0()); 
	    }
		lv_extends_13_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"extends",
        		lv_extends_13_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='implements' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTypeAccess().getImplementsKeyword_2_0_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_1_0()); 
	    }
		lv_implements_15_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_15_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTypeAccess().getCommaKeyword_2_0_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_2_1_0()); 
	    }
		lv_implements_17_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_17_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_0_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getRootXObjectElementParserRuleCall_2_0_9_0()); 
	    }
		lv_root_19_0=ruleXObjectElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"root",
        		lv_root_19_0, 
        		"XObjectElement");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_0_10_0()); 
	    }
		lv_members_20_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_20_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_0_11());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmInterfaceTypeAnnotationInfoAction_2_1_0(),
            $current);
    }
)(
(
		lv_exported_23_0=	'export' 
    {
        newLeafNode(lv_exported_23_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_24='interface' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getTypeAccess().getInterfaceKeyword_2_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_1_3_0()); 
	    }
		lv_simpleName_25_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_25_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26='<' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0()); 
	    }
		lv_typeParameters_27_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_27_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_28=',' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getTypeAccess().getCommaKeyword_2_1_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0()); 
	    }
		lv_typeParameters_29_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_29_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_30='>' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_1_4_3());
    }
)?(	otherlv_31='extends' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getTypeAccess().getExtendsKeyword_2_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0()); 
	    }
		lv_implements_32_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_32_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_33=',' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getTypeAccess().getCommaKeyword_2_1_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_2_1_0()); 
	    }
		lv_implements_34_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_34_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_35='{' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_1_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_1_7_0()); 
	    }
		lv_members_36_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_36_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_37='}' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_1_8());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmRemoteTypeAnnotationInfoAction_2_2_0(),
            $current);
    }
)(
(
		lv_exported_39_0=	'export' 
    {
        newLeafNode(lv_exported_39_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_40='remote' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getTypeAccess().getRemoteKeyword_2_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_2_3_0()); 
	    }
		lv_simpleName_41_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_41_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_42='<' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_2_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0()); 
	    }
		lv_typeParameters_43_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_43_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_44=',' 
    {
    	newLeafNode(otherlv_44, grammarAccess.getTypeAccess().getCommaKeyword_2_2_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0()); 
	    }
		lv_typeParameters_45_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_45_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_46='>' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_2_4_3());
    }
)?(	otherlv_47='extends' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getTypeAccess().getExtendsKeyword_2_2_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0()); 
	    }
		lv_implements_48_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_48_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_49=',' 
    {
    	newLeafNode(otherlv_49, grammarAccess.getTypeAccess().getCommaKeyword_2_2_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0()); 
	    }
		lv_implements_50_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_50_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_51='{' 
    {
    	newLeafNode(otherlv_51, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_2_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_2_7_0()); 
	    }
		lv_members_52_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_52_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_53='}' 
    {
    	newLeafNode(otherlv_53, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_2_8());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmBeanTypeAnnotationInfoAction_2_3_0(),
            $current);
    }
)(
(
		lv_exported_55_0=	'export' 
    {
        newLeafNode(lv_exported_55_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_56='bean' 
    {
    	newLeafNode(otherlv_56, grammarAccess.getTypeAccess().getBeanKeyword_2_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_3_3_0()); 
	    }
		lv_simpleName_57_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_57_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_58='<' 
    {
    	newLeafNode(otherlv_58, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_3_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0()); 
	    }
		lv_typeParameters_59_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_59_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_60=',' 
    {
    	newLeafNode(otherlv_60, grammarAccess.getTypeAccess().getCommaKeyword_2_3_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0()); 
	    }
		lv_typeParameters_61_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_61_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_62='>' 
    {
    	newLeafNode(otherlv_62, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_3_4_3());
    }
)?(	otherlv_63='extends' 
    {
    	newLeafNode(otherlv_63, grammarAccess.getTypeAccess().getExtendsKeyword_2_3_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_0()); 
	    }
		lv_implements_64_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_64_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_65=',' 
    {
    	newLeafNode(otherlv_65, grammarAccess.getTypeAccess().getCommaKeyword_2_3_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_2_1_0()); 
	    }
		lv_implements_66_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_66_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_67='{' 
    {
    	newLeafNode(otherlv_67, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_3_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_3_7_0()); 
	    }
		lv_members_68_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_68_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_69='}' 
    {
    	newLeafNode(otherlv_69, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_3_8());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmStructTypeAnnotationInfoAction_2_4_0(),
            $current);
    }
)(
(
		lv_exported_71_0=	'export' 
    {
        newLeafNode(lv_exported_71_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_4_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_72='struct' 
    {
    	newLeafNode(otherlv_72, grammarAccess.getTypeAccess().getStructKeyword_2_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_4_3_0()); 
	    }
		lv_simpleName_73_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_73_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_74='<' 
    {
    	newLeafNode(otherlv_74, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_4_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0()); 
	    }
		lv_typeParameters_75_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_75_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_76=',' 
    {
    	newLeafNode(otherlv_76, grammarAccess.getTypeAccess().getCommaKeyword_2_4_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0()); 
	    }
		lv_typeParameters_77_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_77_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_78='>' 
    {
    	newLeafNode(otherlv_78, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_4_4_3());
    }
)?(	otherlv_79='implements' 
    {
    	newLeafNode(otherlv_79, grammarAccess.getTypeAccess().getImplementsKeyword_2_4_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0()); 
	    }
		lv_implements_80_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_80_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_81=',' 
    {
    	newLeafNode(otherlv_81, grammarAccess.getTypeAccess().getCommaKeyword_2_4_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0()); 
	    }
		lv_implements_82_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"implements",
        		lv_implements_82_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_83='{' 
    {
    	newLeafNode(otherlv_83, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_4_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_4_7_0()); 
	    }
		lv_members_84_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_84_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_85='}' 
    {
    	newLeafNode(otherlv_85, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_4_8());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmEnumerationTypeAnnotationInfoAction_2_5_0(),
            $current);
    }
)(
(
		lv_exported_87_0=	'export' 
    {
        newLeafNode(lv_exported_87_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_88='enum' 
    {
    	newLeafNode(otherlv_88, grammarAccess.getTypeAccess().getEnumKeyword_2_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_5_3_0()); 
	    }
		lv_simpleName_89_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_89_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_90='{' 
    {
    	newLeafNode(otherlv_90, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_5_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersJvmEnumerationLiteralParserRuleCall_2_5_5_0_0()); 
	    }
		lv_members_91_0=ruleJvmEnumerationLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_91_0, 
        		"JvmEnumerationLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_92=',' 
    {
    	newLeafNode(otherlv_92, grammarAccess.getTypeAccess().getCommaKeyword_2_5_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersJvmEnumerationLiteralParserRuleCall_2_5_5_1_1_0()); 
	    }
		lv_members_93_0=ruleJvmEnumerationLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_93_0, 
        		"JvmEnumerationLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_94='}' 
    {
    	newLeafNode(otherlv_94, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_5_6());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getJvmAnnotationTypeAnnotationInfoAction_2_6_0(),
            $current);
    }
)(
(
		lv_exported_96_0=	'export' 
    {
        newLeafNode(lv_exported_96_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_6_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_97='annotation' 
    {
    	newLeafNode(otherlv_97, grammarAccess.getTypeAccess().getAnnotationKeyword_2_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_6_3_0()); 
	    }
		lv_simpleName_98_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_98_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_99='{' 
    {
    	newLeafNode(otherlv_99, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_6_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getMembersAnnotationFieldParserRuleCall_2_6_5_0()); 
	    }
		lv_members_100_0=ruleAnnotationField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_100_0, 
        		"AnnotationField");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_101='}' 
    {
    	newLeafNode(otherlv_101, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_6_6());
    }
)))
;





// Entry rule entryRuleDelegateType
entryRuleDelegateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDelegateTypeRule()); }
	 iv_ruleDelegateType=ruleDelegateType 
	 { $current=$iv_ruleDelegateType.current; } 
	 EOF 
;

// Rule DelegateType
ruleDelegateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_exported_0_0=	'export' 
    {
        newLeafNode(lv_exported_0_0, grammarAccess.getDelegateTypeAccess().getExportedExportKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegateTypeRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_1='delegate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDelegateTypeAccess().getDelegateKeyword_1());
    }
(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDelegateTypeAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_0()); 
	    }
		lv_typeParameters_3_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_3_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDelegateTypeAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_1_0()); 
	    }
		lv_typeParameters_5_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateTypeRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_5_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDelegateTypeAccess().getGreaterThanSignKeyword_2_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateTypeAccess().getReturnTypeJvmTypeReferenceParserRuleCall_3_0()); 
	    }
		lv_returnType_7_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateTypeRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_7_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateTypeAccess().getSimpleNameValidIDParserRuleCall_4_0()); 
	    }
		lv_simpleName_8_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateTypeRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_8_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDelegateTypeAccess().getLeftParenthesisKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateTypeAccess().getParametersJvmFormalParameterParserRuleCall_6_0_0()); 
	    }
		lv_parameters_10_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateTypeRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_10_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDelegateTypeAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegateTypeAccess().getParametersJvmFormalParameterParserRuleCall_6_1_1_0()); 
	    }
		lv_parameters_12_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegateTypeRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_12_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDelegateTypeAccess().getRightParenthesisKeyword_7());
    }
	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDelegateTypeAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleAnnotationField
entryRuleAnnotationField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationFieldRule()); }
	 iv_ruleAnnotationField=ruleAnnotationField 
	 { $current=$iv_ruleAnnotationField.current; } 
	 EOF 
;

// Rule AnnotationField
ruleAnnotationField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getAnnotationsJvmAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleJvmAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"JvmAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_0()); 
	    }
		lv_type_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getSimpleNameValidIDParserRuleCall_1_1_0()); 
	    }
		lv_simpleName_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationFieldAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getDefaultValueXLiteralParserRuleCall_2_1_0()); 
	    }
		lv_defaultValue_4_0=ruleXLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_4_0, 
        		"XLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAnnotationFieldAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMemberAccess().getJvmMemberAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getAnnotationsJvmAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotations_1_0=ruleJvmAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_1_0, 
        		"JvmAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMemberAccess().getJvmFieldAnnotationInfoAction_2_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_0_1_0()); 
	    }
		lv_modifiers_3_0=ruleFieldModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_3_0, 
        		"FieldModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_2_0_0()); 
	    }
		lv_type_4_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getSimpleNameFeatureCallIDParserRuleCall_2_0_2_1_0_0()); 
	    }
		lv_simpleName_5_0=ruleFeatureCallID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_5_0, 
        		"FeatureCallID");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_indexer_6_0=	'this' 
    {
        newLeafNode(lv_indexer_6_0, grammarAccess.getMemberAccess().getIndexerThisKeyword_2_0_2_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberRule());
	        }
       		setWithLastConsumed($current, "indexer", true, "this");
	    }

)
)	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMemberAccess().getLeftSquareBracketKeyword_2_0_2_1_1_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getParametersJvmFormalParameterParserRuleCall_2_0_2_1_1_2_0_0()); 
	    }
		lv_parameters_8_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_8_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMemberAccess().getCommaKeyword_2_0_2_1_1_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getParametersJvmFormalParameterParserRuleCall_2_0_2_1_1_2_1_1_0()); 
	    }
		lv_parameters_10_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_10_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMemberAccess().getRightSquareBracketKeyword_2_0_2_1_1_3());
    }
)))(((	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMemberAccess().getEqualsSignKeyword_2_0_3_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getDefaultValueXExpressionParserRuleCall_2_0_3_0_0_1_0()); 
	    }
		lv_defaultValue_13_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_13_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMemberAccess().getSemicolonKeyword_2_0_3_0_1());
    }
)
    |((
(
		lv_property_15_0=	'{' 
    {
        newLeafNode(lv_property_15_0, grammarAccess.getMemberAccess().getPropertyLeftCurlyBracketKeyword_2_0_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberRule());
	        }
       		setWithLastConsumed($current, "property", true, "{");
	    }

)
)	otherlv_16='get' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMemberAccess().getGetKeyword_2_0_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getGetXBlockStatmentParserRuleCall_2_0_3_1_2_0()); 
	    }
		lv_get_17_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"get",
        		lv_get_17_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_18='set' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMemberAccess().getSetKeyword_2_0_3_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getSetXBlockStatmentParserRuleCall_2_0_3_1_3_1_0()); 
	    }
		lv_set_19_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"set",
        		lv_set_19_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_0_3_1_4());
    }
)))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMemberAccess().getJvmOperationAnnotationInfoAction_2_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersMethodModifierParserRuleCall_2_1_1_0()); 
	    }
		lv_modifiers_22_0=ruleMethodModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_22_0, 
        		"MethodModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_23='function' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getMemberAccess().getFunctionKeyword_2_1_2());
    }
(	otherlv_24='<' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0()); 
	    }
		lv_typeParameters_25_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_25_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getMemberAccess().getCommaKeyword_2_1_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0()); 
	    }
		lv_typeParameters_27_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_27_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_28='>' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_1_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_1_4_0()); 
	    }
		lv_returnType_29_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_29_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getSimpleNameFeatureCallIDParserRuleCall_2_1_5_0_0()); 
	    }
		lv_simpleName_30_0=ruleFeatureCallID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_30_0, 
        		"FeatureCallID");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_operator_31_0=	'operator' 
    {
        newLeafNode(lv_operator_31_0, grammarAccess.getMemberAccess().getOperatorOperatorKeyword_2_1_5_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberRule());
	        }
       		setWithLastConsumed($current, "operator", true, "operator");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getSimpleNameOperatorsParserRuleCall_2_1_5_1_1_0()); 
	    }
		lv_simpleName_32_0=ruleOperators		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_32_0, 
        		"Operators");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_33='(' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_1_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getParametersJvmFormalParameterParserRuleCall_2_1_7_0_0()); 
	    }
		lv_parameters_34_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_34_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_35=',' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getMemberAccess().getCommaKeyword_2_1_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getParametersJvmFormalParameterParserRuleCall_2_1_7_1_1_0()); 
	    }
		lv_parameters_36_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_36_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_37=')' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getMemberAccess().getRightParenthesisKeyword_2_1_8());
    }
(	otherlv_38='throws' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getMemberAccess().getThrowsKeyword_2_1_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_1_9_1_0()); 
	    }
		lv_exceptions_39_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"exceptions",
        		lv_exceptions_39_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_40=',' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getMemberAccess().getCommaKeyword_2_1_9_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_1_9_2_1_0()); 
	    }
		lv_exceptions_41_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"exceptions",
        		lv_exceptions_41_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getBodyXBlockStatmentParserRuleCall_2_1_10_0_0()); 
	    }
		lv_body_42_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_42_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_43=';' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getMemberAccess().getSemicolonKeyword_2_1_10_1());
    }
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMemberAccess().getJvmConstructorAnnotationInfoAction_2_2_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersConstructorModofierParserRuleCall_2_2_1_0()); 
	    }
		lv_modifiers_45_0=ruleConstructorModofier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_45_0, 
        		"ConstructorModofier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_46='constructor' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getMemberAccess().getConstructorKeyword_2_2_2());
    }
(	otherlv_47='<' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_3_1_0()); 
	    }
		lv_typeParameters_48_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_48_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_49=',' 
    {
    	newLeafNode(otherlv_49, grammarAccess.getMemberAccess().getCommaKeyword_2_2_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_3_2_1_0()); 
	    }
		lv_typeParameters_50_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_50_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_51='>' 
    {
    	newLeafNode(otherlv_51, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_2_3_3());
    }
)?	otherlv_52='(' 
    {
    	newLeafNode(otherlv_52, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_2_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getParametersJvmFormalParameterParserRuleCall_2_2_5_0_0()); 
	    }
		lv_parameters_53_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_53_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_54=',' 
    {
    	newLeafNode(otherlv_54, grammarAccess.getMemberAccess().getCommaKeyword_2_2_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getParametersJvmFormalParameterParserRuleCall_2_2_5_1_1_0()); 
	    }
		lv_parameters_55_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_55_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_56=')' 
    {
    	newLeafNode(otherlv_56, grammarAccess.getMemberAccess().getRightParenthesisKeyword_2_2_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getBodyXBlockStatmentParserRuleCall_2_2_7_0()); 
	    }
		lv_body_57_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_57_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMemberAccess().getJvmEventAnnotationInfoAction_2_3_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_3_1_0()); 
	    }
		lv_modifiers_59_0=ruleFieldModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_59_0, 
        		"FieldModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_60='event' 
    {
    	newLeafNode(otherlv_60, grammarAccess.getMemberAccess().getEventKeyword_2_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_3_3_0()); 
	    }
		lv_type_61_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_61_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getSimpleNameValidIDParserRuleCall_2_3_4_0()); 
	    }
		lv_simpleName_62_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_62_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_63='{' 
    {
    	newLeafNode(otherlv_63, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_3_5_0());
    }
	otherlv_64='add' 
    {
    	newLeafNode(otherlv_64, grammarAccess.getMemberAccess().getAddKeyword_2_3_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getAddXBlockStatmentParserRuleCall_2_3_5_2_0()); 
	    }
		lv_add_65_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"add",
        		lv_add_65_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_66='remove' 
    {
    	newLeafNode(otherlv_66, grammarAccess.getMemberAccess().getRemoveKeyword_2_3_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getRemoveXBlockStatmentParserRuleCall_2_3_5_3_1_0()); 
	    }
		lv_remove_67_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"remove",
        		lv_remove_67_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_68='}' 
    {
    	newLeafNode(otherlv_68, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_3_5_4());
    }
)?)))
;





// Entry rule entryRuleOperators
entryRuleOperators returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorsRule()); } 
	 iv_ruleOperators=ruleOperators 
	 { $current=$iv_ruleOperators.current.getText(); }  
	 EOF 
;

// Rule Operators
ruleOperators returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpMultiAssignParserRuleCall_0()); 
    }
    this_OpMultiAssign_0=ruleOpMultiAssign    {
		$current.merge(this_OpMultiAssign_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpOrParserRuleCall_1()); 
    }
    this_OpOr_1=ruleOpOr    {
		$current.merge(this_OpOr_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpAndParserRuleCall_2()); 
    }
    this_OpAnd_2=ruleOpAnd    {
		$current.merge(this_OpAnd_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpEqualityParserRuleCall_3()); 
    }
    this_OpEquality_3=ruleOpEquality    {
		$current.merge(this_OpEquality_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpCompareParserRuleCall_4()); 
    }
    this_OpCompare_4=ruleOpCompare    {
		$current.merge(this_OpCompare_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getShiftOpParserRuleCall_5()); 
    }
    this_ShiftOp_5=ruleShiftOp    {
		$current.merge(this_ShiftOp_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getBinaryBitwiseOpParserRuleCall_6()); 
    }
    this_BinaryBitwiseOp_6=ruleBinaryBitwiseOp    {
		$current.merge(this_BinaryBitwiseOp_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpMultiParserRuleCall_7()); 
    }
    this_OpMulti_7=ruleOpMulti    {
		$current.merge(this_OpMulti_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorsAccess().getOpUnaryParserRuleCall_8()); 
    }
    this_OpUnary_8=ruleOpUnary    {
		$current.merge(this_OpUnary_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleJvmEnumerationLiteral
entryRuleJvmEnumerationLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmEnumerationLiteralRule()); }
	 iv_ruleJvmEnumerationLiteral=ruleJvmEnumerationLiteral 
	 { $current=$iv_ruleJvmEnumerationLiteral.current; } 
	 EOF 
;

// Rule JvmEnumerationLiteral
ruleJvmEnumerationLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmEnumerationLiteralAccess().getSimpleNameValidIDParserRuleCall_0_0()); 
	    }
		lv_simpleName_0_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmEnumerationLiteralRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_0_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmEnumerationLiteralAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmEnumerationLiteralAccess().getDefaultValueXNumberLiteralParserRuleCall_1_1_0()); 
	    }
		lv_defaultValue_2_0=ruleXNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmEnumerationLiteralRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_2_0, 
        		"XNumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleClassModofier
entryRuleClassModofier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassModofierRule()); } 
	 iv_ruleClassModofier=ruleClassModofier 
	 { $current=$iv_ruleClassModofier.current.getText(); }  
	 EOF 
;

// Rule ClassModofier
ruleClassModofier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClassModofierAccess().getAbstractKeyword_0()); 
    }

    |
	kw='native' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClassModofierAccess().getNativeKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleFieldModifier
entryRuleFieldModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldModifierRule()); } 
	 iv_ruleFieldModifier=ruleFieldModifier 
	 { $current=$iv_ruleFieldModifier.current.getText(); }  
	 EOF 
;

// Rule FieldModifier
ruleFieldModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getStaticKeyword_0()); 
    }

    |
	kw='final' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getFinalKeyword_1()); 
    }

    |
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getVirtualKeyword_2()); 
    }

    |
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getOverrideKeyword_3()); 
    }

    |
	kw='transient' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getTransientKeyword_4()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getPublicKeyword_5()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getPrivateKeyword_6()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldModifierAccess().getProtectedKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleConstructorModofier
entryRuleConstructorModofier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorModofierRule()); } 
	 iv_ruleConstructorModofier=ruleConstructorModofier 
	 { $current=$iv_ruleConstructorModofier.current.getText(); }  
	 EOF 
;

// Rule ConstructorModofier
ruleConstructorModofier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModofierAccess().getStaticKeyword_0()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModofierAccess().getPrivateKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModofierAccess().getProtectedKeyword_2()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConstructorModofierAccess().getPublicKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleMethodModifier
entryRuleMethodModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodModifierRule()); } 
	 iv_ruleMethodModifier=ruleMethodModifier 
	 { $current=$iv_ruleMethodModifier.current.getText(); }  
	 EOF 
;

// Rule MethodModifier
ruleMethodModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getOverrideKeyword_0()); 
    }

    |
	kw='virtual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getVirtualKeyword_1()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getStaticKeyword_2()); 
    }

    |
	kw='native' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getNativeKeyword_3()); 
    }

    |
	kw='overload' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getOverloadKeyword_4()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getAbstractKeyword_5()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getPublicKeyword_6()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getPrivateKeyword_7()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodModifierAccess().getProtectedKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureCallIDRule()); } 
	 iv_ruleFeatureCallID=ruleFeatureCallID 
	 { $current=$iv_ruleFeatureCallID.current.getText(); }  
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFeatureCallIDAccess().getIDTerminalRuleCall_0()); 
    }

    |
	kw='set' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getSetKeyword_1()); 
    }

    |
	kw='get' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getGetKeyword_2()); 
    }

    |
	kw='add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getAddKeyword_3()); 
    }

    |
	kw='remove' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getRemoveKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleXElement
entryRuleXElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXElementRule()); }
	 iv_ruleXElement=ruleXElement 
	 { $current=$iv_ruleXElement.current; } 
	 EOF 
;

// Rule XElement
ruleXElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXElementAccess().getXObjectElementParserRuleCall_0()); 
    }
    this_XObjectElement_0=ruleXObjectElement
    { 
        $current = $this_XObjectElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXElementAccess().getXAttributeElementParserRuleCall_1()); 
    }
    this_XAttributeElement_1=ruleXAttributeElement
    { 
        $current = $this_XAttributeElement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXObjectElement
entryRuleXObjectElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXObjectElementRule()); }
	 iv_ruleXObjectElement=ruleXObjectElement 
	 { $current=$iv_ruleXObjectElement.current; } 
	 EOF 
;

// Rule XObjectElement
ruleXObjectElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXObjectElementAccess().getXObjectElementAction_0(),
            $current);
    }
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXObjectElementAccess().getLessThanSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXObjectElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXObjectElementAccess().getTypeJvmTypeCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXObjectElementAccess().getPropertiesXAbstractAttributeParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleXAbstractAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXObjectElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"XAbstractAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*((((	'>' 
(
(
ruleXElement
)
)*	'</' 
(
(
		ruleQualifiedName
)
)	'>' 
)
    |	'/>' 
))=>((	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXObjectElementAccess().getGreaterThanSignKeyword_4_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXObjectElementAccess().getContentsXElementParserRuleCall_4_0_0_1_0()); 
	    }
		lv_contents_5_0=ruleXElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXObjectElementRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_5_0, 
        		"XElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='</' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXObjectElementAccess().getLessThanSignSolidusKeyword_4_0_0_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXObjectElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXObjectElementAccess().getCloseTypeJvmTypeCrossReference_4_0_0_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXObjectElementAccess().getGreaterThanSignKeyword_4_0_0_4());
    }
)
    |	otherlv_9='/>' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXObjectElementAccess().getSolidusGreaterThanSignKeyword_4_0_1());
    }
)))
;





// Entry rule entryRuleXAttributeElement
entryRuleXAttributeElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAttributeElementRule()); }
	 iv_ruleXAttributeElement=ruleXAttributeElement 
	 { $current=$iv_ruleXAttributeElement.current; } 
	 EOF 
;

// Rule XAttributeElement
ruleXAttributeElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAttributeElementAccess().getXAttributeElementAction_0(),
            $current);
    }
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXAttributeElementAccess().getLessThanSignKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXAttributeElementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAttributeElementAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXAttributeElementAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXAttributeElementAccess().getFullStopKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeElementRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getXAttributeElementAccess().getFieldJvmFieldCrossReference_6_0()); 
	}

)
)(((((	'>' 
(
(
ruleXElement
)
)*	'</' 
	'(' 
(
(
		ruleQualifiedName
)
)	')' 
	'.' 
(
(
	RULE_ID

)
))	'>' 
)
    |	'/>' 
))=>(((	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXAttributeElementAccess().getGreaterThanSignKeyword_7_0_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAttributeElementAccess().getContentsXElementParserRuleCall_7_0_0_0_1_0()); 
	    }
		lv_contents_8_0=ruleXElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAttributeElementRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_8_0, 
        		"XElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='</' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXAttributeElementAccess().getLessThanSignSolidusKeyword_7_0_0_0_2());
    }
	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXAttributeElementAccess().getLeftParenthesisKeyword_7_0_0_0_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeElementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAttributeElementAccess().getCloseTypeJvmTypeCrossReference_7_0_0_0_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXAttributeElementAccess().getRightParenthesisKeyword_7_0_0_0_5());
    }
	otherlv_13='.' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXAttributeElementAccess().getFullStopKeyword_7_0_0_0_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttributeElementRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getXAttributeElementAccess().getCloseFieldJvmFieldCrossReference_7_0_0_0_7_0()); 
	}

)
))	otherlv_15='>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXAttributeElementAccess().getGreaterThanSignKeyword_7_0_0_1());
    }
)
    |	otherlv_16='/>' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getXAttributeElementAccess().getSolidusGreaterThanSignKeyword_7_0_1());
    }
)))
;





// Entry rule entryRuleXAbstractAttribute
entryRuleXAbstractAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAbstractAttributeRule()); }
	 iv_ruleXAbstractAttribute=ruleXAbstractAttribute 
	 { $current=$iv_ruleXAbstractAttribute.current; } 
	 EOF 
;

// Rule XAbstractAttribute
ruleXAbstractAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAbstractAttributeAccess().getXGeneralAttributeParserRuleCall_0()); 
    }
    this_XGeneralAttribute_0=ruleXGeneralAttribute
    { 
        $current = $this_XGeneralAttribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXAbstractAttributeAccess().getXAttachAttributeParserRuleCall_1()); 
    }
    this_XAttachAttribute_1=ruleXAttachAttribute
    { 
        $current = $this_XAttachAttribute_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXAttachAttribute
entryRuleXAttachAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAttachAttributeRule()); }
	 iv_ruleXAttachAttribute=ruleXAttachAttribute 
	 { $current=$iv_ruleXAttachAttribute.current; } 
	 EOF 
;

// Rule XAttachAttribute
ruleXAttachAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXAttachAttributeAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttachAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAttachAttributeAccess().getTypeJvmTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXAttachAttributeAccess().getRightParenthesisKeyword_2());
    }
	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXAttachAttributeAccess().getFullStopKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAttachAttributeRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getXAttachAttributeAccess().getFieldJvmFieldCrossReference_4_0()); 
	}

)
)	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXAttachAttributeAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAttachAttributeAccess().getValueXPropertyExpressionParserRuleCall_6_0()); 
	    }
		lv_value_6_0=ruleXPropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAttachAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"XPropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXGeneralAttribute
entryRuleXGeneralAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXGeneralAttributeRule()); }
	 iv_ruleXGeneralAttribute=ruleXGeneralAttribute 
	 { $current=$iv_ruleXGeneralAttribute.current; } 
	 EOF 
;

// Rule XGeneralAttribute
ruleXGeneralAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXGeneralAttributeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getXGeneralAttributeAccess().getFieldJvmFieldCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXGeneralAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXGeneralAttributeAccess().getValueXPropertyExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleXPropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXGeneralAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"XPropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXMarkupExtenson
entryRuleXMarkupExtenson returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMarkupExtensonRule()); }
	 iv_ruleXMarkupExtenson=ruleXMarkupExtenson 
	 { $current=$iv_ruleXMarkupExtenson.current; } 
	 EOF 
;

// Rule XMarkupExtenson
ruleXMarkupExtenson returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXMarkupExtensonAccess().getXMarkupExtensonAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXMarkupExtensonAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMarkupExtensonRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMarkupExtensonAccess().getTypeJvmTypeCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXMarkupExtensonAccess().getPropertiesXAbstractAttributeParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleXAbstractAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMarkupExtensonRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"XAbstractAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXMarkupExtensonAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXPropertyExpression
entryRuleXPropertyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPropertyExpressionRule()); }
	 iv_ruleXPropertyExpression=ruleXPropertyExpression 
	 { $current=$iv_ruleXPropertyExpression.current; } 
	 EOF 
;

// Rule XPropertyExpression
ruleXPropertyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPropertyExpressionAccess().getXStringLiteralParserRuleCall_0()); 
    }
    this_XStringLiteral_0=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPropertyExpressionAccess().getXMarkupExtensonParserRuleCall_1()); 
    }
    this_XMarkupExtenson_1=ruleXMarkupExtenson
    { 
        $current = $this_XMarkupExtenson_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignment1ParserRuleCall()); 
    }
    this_XAssignment1_0=ruleXAssignment1
    { 
        $current = $this_XAssignment1_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment1
entryRuleXAssignment1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignment1Rule()); }
	 iv_ruleXAssignment1=ruleXAssignment1 
	 { $current=$iv_ruleXAssignment1.current; } 
	 EOF 
;

// Rule XAssignment1
ruleXAssignment1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAssignment1Access().getXMultiAssignmentParserRuleCall_0()); 
    }
    this_XMultiAssignment_0=ruleXMultiAssignment
    { 
        $current = $this_XMultiAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignment1Access().getXAssignment1AssignableAction_1_0_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getXAssignment1Access().getOpSingleAssignParserRuleCall_1_0_0_1()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignment1Access().getValueXAssignment1ParserRuleCall_1_1_0()); 
	    }
		lv_value_3_0=ruleXAssignment1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignment1Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment1");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleXMultiAssignment
entryRuleXMultiAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiAssignmentRule()); }
	 iv_ruleXMultiAssignment=ruleXMultiAssignment 
	 { $current=$iv_ruleXMultiAssignment.current; } 
	 EOF 
;

// Rule XMultiAssignment
ruleXMultiAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiAssignmentAccess().getXOrExpressionParserRuleCall_0()); 
    }
    this_XOrExpression_0=ruleXOrExpression
    { 
        $current = $this_XOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiAssignmentAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiAssignmentAccess().getRightOperandXOrExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='===' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='!==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXBitwiseExpressionParserRuleCall_0()); 
    }
    this_XBitwiseExpression_0=ruleXBitwiseExpression
    { 
        $current = $this_XBitwiseExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXBitwiseExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXBitwiseExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XBitwiseExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_0()); 
    }

    |
	kw='/=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_1()); 
    }

    |
	kw='%=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_2()); 
    }

    |
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_3()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_4()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_5_0()); 
    }
((
	'>=' 
)=>
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_5_1()); 
    }
))
    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
    }
(((
	'>' 

	'>=' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1_0_0()); 
    }

	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_1_0_1()); 
    }
)))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_7_0()); 
    }
((
	'<=' 
)=>
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignEqualsSignKeyword_7_1()); 
    }
))
    |
	kw='&=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_8()); 
    }

    |
	kw='^=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_9()); 
    }

    |
	kw='|=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_10()); 
    }
)
    ;





// Entry rule entryRuleShiftOp
entryRuleShiftOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftOpRule()); } 
	 iv_ruleShiftOp=ruleShiftOp 
	 { $current=$iv_ruleShiftOp.current.getText(); }  
	 EOF 
;

// Rule ShiftOp
ruleShiftOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_0_0()); 
    }
(((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_0_1_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_0_1_0_1()); 
    }
)))
    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_1_0()); 
    }
((
	'>' 
)=>
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getLessThanSignKeyword_2_0()); 
    }
((
	'<' 
)=>
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOpAccess().getLessThanSignKeyword_2_1()); 
    }
)))
    ;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXBitwiseExpression
entryRuleXBitwiseExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBitwiseExpressionRule()); }
	 iv_ruleXBitwiseExpression=ruleXBitwiseExpression 
	 { $current=$iv_ruleXBitwiseExpression.current; } 
	 EOF 
;

// Rule XBitwiseExpression
ruleXBitwiseExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXBitwiseExpressionAccess().getXShiftExpressionParserRuleCall_0()); 
    }
    this_XShiftExpression_0=ruleXShiftExpression
    { 
        $current = $this_XShiftExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleBinaryBitwiseOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXBitwiseExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBitwiseExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXBitwiseExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleBinaryBitwiseOp		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXBitwiseExpressionAccess().getRightOperandXShiftExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXShiftExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBitwiseExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XShiftExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleBinaryBitwiseOp
entryRuleBinaryBitwiseOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinaryBitwiseOpRule()); } 
	 iv_ruleBinaryBitwiseOp=ruleBinaryBitwiseOp 
	 { $current=$iv_ruleBinaryBitwiseOp.current.getText(); }  
	 EOF 
;

// Rule BinaryBitwiseOp
ruleBinaryBitwiseOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryBitwiseOpAccess().getAmpersandKeyword_0()); 
    }

    |
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryBitwiseOpAccess().getVerticalLineKeyword_1()); 
    }

    |
	kw='^' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryBitwiseOpAccess().getCircumflexAccentKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXShiftExpression
entryRuleXShiftExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShiftExpressionRule()); }
	 iv_ruleXShiftExpression=ruleXShiftExpression 
	 { $current=$iv_ruleXShiftExpression.current; } 
	 EOF 
;

// Rule XShiftExpression
ruleXShiftExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXShiftExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleShiftOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXShiftExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShiftExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXShiftExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleShiftOp		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShiftExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShiftExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXTernaryOperationParserRuleCall_0()); 
    }
    this_XTernaryOperation_0=ruleXTernaryOperation
    { 
        $current = $this_XTernaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXTernaryOperation
entryRuleXTernaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTernaryOperationRule()); }
	 iv_ruleXTernaryOperation=ruleXTernaryOperation 
	 { $current=$iv_ruleXTernaryOperation.current; } 
	 EOF 
;

// Rule XTernaryOperation
ruleXTernaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXTernaryOperationAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'?' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXTernaryOperationAccess().getXTernaryOperationConditionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTernaryOperationAccess().getQuestionMarkKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXTernaryOperationAccess().getTrueOperandXExpressionParserRuleCall_1_1_0()); 
	    }
		lv_trueOperand_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTernaryOperationRule());
	        }
       		set(
       			$current, 
       			"trueOperand",
        		lv_trueOperand_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTernaryOperationAccess().getColonKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTernaryOperationAccess().getFalseOperandXExpressionParserRuleCall_1_3_0()); 
	    }
		lv_falseOperand_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTernaryOperationRule());
	        }
       		set(
       			$current, 
       			"falseOperand",
        		lv_falseOperand_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
    }
    this_XPostfixOperation_0=ruleXPostfixOperation
    { 
        $current = $this_XPostfixOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXPostfixOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXPostfixOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XPostfixOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXPostfixOperation
entryRuleXPostfixOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPostfixOperationRule()); }
	 iv_ruleXPostfixOperation=ruleXPostfixOperation 
	 { $current=$iv_ruleXPostfixOperation.current; } 
	 EOF 
;

// Rule XPostfixOperation
ruleXPostfixOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)(
(
		rulePrefixOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXPostfixOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
	    }
		rulePrefixOp		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRulePrefixOp
entryRulePrefixOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixOpRule()); } 
	 iv_rulePrefixOp=rulePrefixOp 
	 { $current=$iv_rulePrefixOp.current.getText(); }  
	 EOF 
;

// Rule PrefixOp
rulePrefixOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrefixOpAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrefixOpAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
    }
    this_XCastedExpression_3=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getTildeKeyword_3()); 
    }

    |
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignPlusSignKeyword_4()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusHyphenMinusKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'(' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXCallerExecutableAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getLeftParenthesisKeyword_1_0_0_0_1());
    }
))((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArgumentsXExpressionParserRuleCall_1_0_1_0_0()); 
	    }
		lv_arguments_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArgumentsXExpressionParserRuleCall_1_0_1_1_1_0()); 
	    }
		lv_arguments_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_0_2());
    }
)
    |(((((
)	'[' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXIndexerSourceAction_1_1_0_0_0(),
            $current);
    }
)	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getLeftSquareBracketKeyword_1_1_0_0_1());
    }
))((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArgumentsXExpressionParserRuleCall_1_1_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArgumentsXExpressionParserRuleCall_1_1_1_1_1_0()); 
	    }
		lv_arguments_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXMemberFeatureCallAccess().getRightSquareBracketKeyword_1_1_2());
    }
)
    |(((((
)	'.' 
(
(
		ruleFeatureCallID
)
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_2_0_0_0(),
            $current);
    }
)	otherlv_14='.' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_2_0_0_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_2_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignment1ParserRuleCall_1_2_1_0()); 
	    }
		lv_value_17_0=ruleXAssignment1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_17_0, 
        		"XAssignment1");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
))))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_3_0_0_0(),
            $current);
    }
)(	otherlv_19='.' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_3_0_0_1_0());
    }

    |(
(
		lv_nullSafe_20_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_20_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_3_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
))))(	otherlv_21='<' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_3_1_1_0()); 
	    }
		lv_typeArguments_22_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_22_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_3_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_3_1_2_1_0()); 
	    }
		lv_typeArguments_24_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_24_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25='>' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_3_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_3_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_27_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_27_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_3_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXArgumentParserRuleCall_1_3_3_1_0_0()); 
	    }
		lv_memberCallArguments_28_0=ruleXArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_28_0, 
        		"XArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_29=',' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_3_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXArgumentParserRuleCall_1_3_3_1_1_1_0()); 
	    }
		lv_memberCallArguments_30_0=ruleXArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_30_0, 
        		"XArgument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_31=')' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_3_3_2());
    }
)?))*)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_1()); 
    }
    this_XFeatureCall_1=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_2()); 
    }
    this_XLiteral_2=ruleXLiteral
    { 
        $current = $this_XLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_3()); 
    }
    this_XParenthesizedExpression_3=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXObjectLiteralParserRuleCall_0()); 
    }
    this_XObjectLiteral_0=ruleXObjectLiteral
    { 
        $current = $this_XObjectLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStructLiteralParserRuleCall_1()); 
    }
    this_XStructLiteral_1=ruleXStructLiteral
    { 
        $current = $this_XStructLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXArrayLiteralParserRuleCall_2()); 
    }
    this_XArrayLiteral_2=ruleXArrayLiteral
    { 
        $current = $this_XArrayLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_3()); 
    }
    this_XClosure_3=ruleXClosure
    { 
        $current = $this_XClosure_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_4()); 
    }
    this_XBooleanLiteral_4=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_5()); 
    }
    this_XNumberLiteral_5=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_6()); 
    }
    this_XNullLiteral_6=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_7()); 
    }
    this_XStringLiteral_7=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_8()); 
    }
    this_XTypeLiteral_8=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTemplateLiteralParserRuleCall_9()); 
    }
    this_XTemplateLiteral_9=ruleXTemplateLiteral
    { 
        $current = $this_XTemplateLiteral_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXStatment
entryRuleXStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStatmentRule()); }
	 iv_ruleXStatment=ruleXStatment 
	 { $current=$iv_ruleXStatment.current; } 
	 EOF 
;

// Rule XStatment
ruleXStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXBlockStatmentParserRuleCall_0()); 
    }
    this_XBlockStatment_0=ruleXBlockStatment
    { 
        $current = $this_XBlockStatment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXSwitchStatmentParserRuleCall_1()); 
    }
    this_XSwitchStatment_1=ruleXSwitchStatment
    { 
        $current = $this_XSwitchStatment_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXIfStatmentParserRuleCall_2()); 
    }
    this_XIfStatment_2=ruleXIfStatment
    { 
        $current = $this_XIfStatment_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXForLoopStatmentParserRuleCall_3()); 
    }
    this_XForLoopStatment_3=ruleXForLoopStatment
    { 
        $current = $this_XForLoopStatment_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXForEachStatmentParserRuleCall_4()); 
    }
    this_XForEachStatment_4=ruleXForEachStatment
    { 
        $current = $this_XForEachStatment_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXWhileStatmentParserRuleCall_5()); 
    }
    this_XWhileStatment_5=ruleXWhileStatment
    { 
        $current = $this_XWhileStatment_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXDoWhileStatmentParserRuleCall_6()); 
    }
    this_XDoWhileStatment_6=ruleXDoWhileStatment
    { 
        $current = $this_XDoWhileStatment_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXThrowStatmentParserRuleCall_7()); 
    }
    this_XThrowStatment_7=ruleXThrowStatment
    { 
        $current = $this_XThrowStatment_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXReturnStatmentParserRuleCall_8()); 
    }
    this_XReturnStatment_8=ruleXReturnStatment
    { 
        $current = $this_XReturnStatment_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXTryCatchFinallyStatmentParserRuleCall_9()); 
    }
    this_XTryCatchFinallyStatment_9=ruleXTryCatchFinallyStatment
    { 
        $current = $this_XTryCatchFinallyStatment_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXBreakStatmentParserRuleCall_10()); 
    }
    this_XBreakStatment_10=ruleXBreakStatment
    { 
        $current = $this_XBreakStatment_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXContinueStatmentParserRuleCall_11()); 
    }
    this_XContinueStatment_11=ruleXContinueStatment
    { 
        $current = $this_XContinueStatment_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXFunctionDeclarationParserRuleCall_12()); 
    }
    this_XFunctionDeclaration_12=ruleXFunctionDeclaration
    { 
        $current = $this_XFunctionDeclaration_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXExpressionStatmentParserRuleCall_13()); 
    }
    this_XExpressionStatment_13=ruleXExpressionStatment
    { 
        $current = $this_XExpressionStatment_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXStatmentAccess().getXVariableDeclarationListParserRuleCall_14()); 
    }
    this_XVariableDeclarationList_14=ruleXVariableDeclarationList
    { 
        $current = $this_XVariableDeclarationList_14.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXExpressionStatment
entryRuleXExpressionStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionStatmentRule()); }
	 iv_ruleXExpressionStatment=ruleXExpressionStatment 
	 { $current=$iv_ruleXExpressionStatment.current; } 
	 EOF 
;

// Rule XExpressionStatment
ruleXExpressionStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionStatmentAccess().getExpressionXExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionStatmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXExpressionStatmentAccess().getSemicolonKeyword_1());
    }
)?)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0(),
            $current);
    }
)	otherlv_1='function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getFunctionKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXClosureAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_3_0_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXClosureAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_declaredFormalParameters_5_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_5_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXClosureAccess().getRightParenthesisKeyword_4());
    }
((
(
		lv_explicitReturn_7_0=	'=>' 
    {
        newLeafNode(lv_explicitReturn_7_0, grammarAccess.getXClosureAccess().getExplicitReturnEqualsSignGreaterThanSignKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitReturn", true, "=>");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getReturnTypeJvmTypeReferenceParserRuleCall_5_1_0()); 
	    }
		lv_returnType_8_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_8_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getStatmentXBlockStatmentParserRuleCall_6_0()); 
	    }
		lv_statment_9_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"statment",
        		lv_statment_9_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFunctionDeclaration
entryRuleXFunctionDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionDeclarationRule()); }
	 iv_ruleXFunctionDeclaration=ruleXFunctionDeclaration 
	 { $current=$iv_ruleXFunctionDeclaration.current; } 
	 EOF 
;

// Rule XFunctionDeclaration
ruleXFunctionDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFunctionDeclarationAccess().getXFunctionDeclarationAction_0(),
            $current);
    }
)(
(
		lv_exported_1_0=	'export' 
    {
        newLeafNode(lv_exported_1_0, grammarAccess.getXFunctionDeclarationAccess().getExportedExportKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFunctionDeclarationRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?	otherlv_2='function' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionDeclarationAccess().getFunctionKeyword_2());
    }
(((	'<' 
(
(
ruleJvmTypeParameter
)
)(	',' 
(
(
ruleJvmTypeParameter
)
))*	'>' 
))=>(	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXFunctionDeclarationAccess().getLessThanSignKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getTypeParametersJvmTypeParameterParserRuleCall_3_0_1_0()); 
	    }
		lv_typeParameters_4_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_4_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionDeclarationAccess().getCommaKeyword_3_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getTypeParametersJvmTypeParameterParserRuleCall_3_0_2_1_0()); 
	    }
		lv_typeParameters_6_0=ruleJvmTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_6_0, 
        		"JvmTypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXFunctionDeclarationAccess().getGreaterThanSignKeyword_3_0_3());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getReturnTypeJvmTypeReferenceParserRuleCall_4_0()); 
	    }
		lv_returnType_8_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_8_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getSimpleNameValidIDParserRuleCall_5_0()); 
	    }
		lv_simpleName_9_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_9_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXFunctionDeclarationAccess().getLeftParenthesisKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_7_0_0()); 
	    }
		lv_declaredFormalParameters_11_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_11_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXFunctionDeclarationAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_7_1_1_0()); 
	    }
		lv_declaredFormalParameters_13_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_13_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getXFunctionDeclarationAccess().getRightParenthesisKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionDeclarationAccess().getBodyXBlockStatmentParserRuleCall_9_0()); 
	    }
		lv_body_15_0=ruleXBlockStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_15_0, 
        		"XBlockStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXParenthesizedExpressionAccess().getXParenthesizedExpressionAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXParenthesizedExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleXIfStatment
entryRuleXIfStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfStatmentRule()); }
	 iv_ruleXIfStatment=ruleXIfStatment 
	 { $current=$iv_ruleXIfStatment.current; } 
	 EOF 
;

// Rule XIfStatment
ruleXIfStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfStatmentAccess().getXIfStatmentAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfStatmentAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfStatmentAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfStatmentAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfStatmentRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfStatmentAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfStatmentAccess().getThenXStatmentParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfStatmentRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfStatmentAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfStatmentAccess().getElseXStatmentParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfStatmentRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchStatment
entryRuleXSwitchStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchStatmentRule()); }
	 iv_ruleXSwitchStatment=ruleXSwitchStatment 
	 { $current=$iv_ruleXSwitchStatment.current; } 
	 EOF 
;

// Rule XSwitchStatment
ruleXSwitchStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchStatmentAccess().getXSwitchStatmentAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchStatmentAccess().getSwitchKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXSwitchStatmentAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchStatmentAccess().getSwitchXExpressionParserRuleCall_3_0()); 
	    }
		lv_switch_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchStatmentRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXSwitchStatmentAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXSwitchStatmentAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchStatmentAccess().getCasesXCasePartParserRuleCall_6_0()); 
	    }
		lv_cases_6_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchStatmentRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_6_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXSwitchStatmentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
            $current);
    }
)((	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_case_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_1_0_2());
    }
)
    |((
(
		lv_default_4_0=	'default' 
    {
        newLeafNode(lv_default_4_0, grammarAccess.getXCasePartAccess().getDefaultDefaultKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXCasePartRule());
	        }
       		setWithLastConsumed($current, "default", true, "default");
	    }

)
)	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXCasePartAccess().getColonKeyword_1_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getStatmentsXStatmentParserRuleCall_2_0()); 
	    }
		lv_statments_6_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		add(
       			$current, 
       			"statments",
        		lv_statments_6_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleXForLoopStatment
entryRuleXForLoopStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopStatmentRule()); }
	 iv_ruleXForLoopStatment=ruleXForLoopStatment 
	 { $current=$iv_ruleXForLoopStatment.current; } 
	 EOF 
;

// Rule XForLoopStatment
ruleXForLoopStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopStatmentAccess().getXForLoopStatmentAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopStatmentAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopStatmentAccess().getLeftParenthesisKeyword_2());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopStatmentAccess().getInitialXExpressionParserRuleCall_3_0_0_0()); 
	    }
		lv_initial_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopStatmentRule());
	        }
       		set(
       			$current, 
       			"initial",
        		lv_initial_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    |(	otherlv_4='var' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopStatmentAccess().getVarKeyword_3_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopStatmentAccess().getVariableDeclarationsXVariableDeclarationParserRuleCall_3_0_1_1_0()); 
	    }
		lv_variableDeclarations_5_0=ruleXVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopStatmentRule());
	        }
       		add(
       			$current, 
       			"variableDeclarations",
        		lv_variableDeclarations_5_0, 
        		"XVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopStatmentAccess().getCommaKeyword_3_0_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopStatmentAccess().getVariableDeclarationsXVariableDeclarationParserRuleCall_3_0_1_2_1_0()); 
	    }
		lv_variableDeclarations_7_0=ruleXVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopStatmentRule());
	        }
       		add(
       			$current, 
       			"variableDeclarations",
        		lv_variableDeclarations_7_0, 
        		"XVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*))	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXForLoopStatmentAccess().getSemicolonKeyword_3_1());
    }
)((((
(
ruleXExpression
)
))=>(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopStatmentAccess().getConditionXExpressionParserRuleCall_4_0_0_0()); 
	    }
		lv_condition_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopStatmentRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXForLoopStatmentAccess().getSemicolonKeyword_4_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopStatmentAccess().getIncrementXExpressionParserRuleCall_5_0()); 
	    }
		lv_increment_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopStatmentRule());
	        }
       		set(
       			$current, 
       			"increment",
        		lv_increment_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXForLoopStatmentAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopStatmentAccess().getStatmentXStatmentParserRuleCall_7_0()); 
	    }
		lv_statment_13_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopStatmentRule());
	        }
       		set(
       			$current, 
       			"statment",
        		lv_statment_13_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXForEachStatment
entryRuleXForEachStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForEachStatmentRule()); }
	 iv_ruleXForEachStatment=ruleXForEachStatment 
	 { $current=$iv_ruleXForEachStatment.current; } 
	 EOF 
;

// Rule XForEachStatment
ruleXForEachStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForEachStatmentAccess().getXForEachStatmentAction_0(),
            $current);
    }
)	otherlv_1='foreach' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForEachStatmentAccess().getForeachKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForEachStatmentAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForEachStatmentAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForEachStatmentRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='of' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForEachStatmentAccess().getOfKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForEachStatmentAccess().getExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForEachStatmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForEachStatmentAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForEachStatmentAccess().getStatmentXStatmentParserRuleCall_7_0()); 
	    }
		lv_statment_7_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForEachStatmentRule());
	        }
       		set(
       			$current, 
       			"statment",
        		lv_statment_7_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileStatment
entryRuleXWhileStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileStatmentRule()); }
	 iv_ruleXWhileStatment=ruleXWhileStatment 
	 { $current=$iv_ruleXWhileStatment.current; } 
	 EOF 
;

// Rule XWhileStatment
ruleXWhileStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileStatmentAccess().getXWhileStatmentAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileStatmentAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileStatmentAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileStatmentAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileStatmentRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileStatmentAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileStatmentAccess().getBodyXStatmentParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileStatmentRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileStatment
entryRuleXDoWhileStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileStatmentRule()); }
	 iv_ruleXDoWhileStatment=ruleXDoWhileStatment 
	 { $current=$iv_ruleXDoWhileStatment.current; } 
	 EOF 
;

// Rule XDoWhileStatment
ruleXDoWhileStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileStatmentAccess().getXDoWhileStatmentAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileStatmentAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileStatmentAccess().getBodyXStatmentParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileStatmentRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileStatmentAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileStatmentAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileStatmentAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileStatmentRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileStatmentAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockStatment
entryRuleXBlockStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockStatmentRule()); }
	 iv_ruleXBlockStatment=ruleXBlockStatment 
	 { $current=$iv_ruleXBlockStatment.current; } 
	 EOF 
;

// Rule XBlockStatment
ruleXBlockStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockStatmentAccess().getXBlockStatmentAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockStatmentAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockStatmentAccess().getStatmentsXStatmentParserRuleCall_2_0()); 
	    }
		lv_statments_2_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockStatmentRule());
	        }
       		add(
       			$current, 
       			"statments",
        		lv_statments_2_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockStatmentAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXVariableDeclarationList
entryRuleXVariableDeclarationList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationListRule()); }
	 iv_ruleXVariableDeclarationList=ruleXVariableDeclarationList 
	 { $current=$iv_ruleXVariableDeclarationList.current; } 
	 EOF 
;

// Rule XVariableDeclarationList
ruleXVariableDeclarationList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationListAccess().getXVariableDeclarationListAction_0(),
            $current);
    }
)(
(
		lv_exported_1_0=	'export' 
    {
        newLeafNode(lv_exported_1_0, grammarAccess.getXVariableDeclarationListAccess().getExportedExportKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationListRule());
	        }
       		setWithLastConsumed($current, "exported", true, "export");
	    }

)
)?(	otherlv_2='var' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationListAccess().getVarKeyword_2_0());
    }

    |(
(
		lv_readonly_3_0=	'const' 
    {
        newLeafNode(lv_readonly_3_0, grammarAccess.getXVariableDeclarationListAccess().getReadonlyConstKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationListRule());
	        }
       		setWithLastConsumed($current, "readonly", true, "const");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationListAccess().getDeclarationsXVariableDeclarationParserRuleCall_3_0()); 
	    }
		lv_declarations_4_0=ruleXVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationListRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_4_0, 
        		"XVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXVariableDeclarationListAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationListAccess().getDeclarationsXVariableDeclarationParserRuleCall_4_1_0()); 
	    }
		lv_declarations_6_0=ruleXVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationListRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_6_0, 
        		"XVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXVariableDeclarationListAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleVarID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_0_0_0()); 
	    }
		lv_type_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getSimpleNameVarIDParserRuleCall_1_0_0_1_0()); 
	    }
		lv_simpleName_2_0=ruleVarID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"VarID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getSimpleNameVarIDParserRuleCall_1_1_0()); 
	    }
		lv_simpleName_3_0=ruleVarID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_3_0, 
        		"VarID");
	        afterParserOrEnumRuleCall();
	    }

)
))(((	'=' 
(
(
ruleXExpression
)
)))=>(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_right_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleVarID
entryRuleVarID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarIDRule()); } 
	 iv_ruleVarID=ruleVarID 
	 { $current=$iv_ruleVarID.current.getText(); }  
	 EOF 
;

// Rule VarID
ruleVarID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVarIDAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarIDAccess().getAddKeyword_1()); 
    }

    |
	kw='remove' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarIDAccess().getRemoveKeyword_2()); 
    }

    |
	kw='get' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarIDAccess().getGetKeyword_3()); 
    }

    |
	kw='set' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarIDAccess().getSetKeyword_4()); 
    }

    |
	kw='ref' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarIDAccess().getRefKeyword_5()); 
    }

    |
	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarIDAccess().getOutKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getAnnotationsJvmAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleJvmAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"JvmAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		lv_ref_1_0=	'ref' 
    {
        newLeafNode(lv_ref_1_0, grammarAccess.getJvmFormalParameterAccess().getRefRefKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmFormalParameterRule());
	        }
       		setWithLastConsumed($current, "ref", true, "ref");
	    }

)
)
    |(
(
		lv_out_2_0=	'out' 
    {
        newLeafNode(lv_out_2_0, grammarAccess.getJvmFormalParameterAccess().getOutOutKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmFormalParameterRule());
	        }
       		setWithLastConsumed($current, "out", true, "out");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_parameterType_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_varArg_4_0=	'...' 
    {
        newLeafNode(lv_varArg_4_0, grammarAccess.getJvmFormalParameterAccess().getVarArgFullStopFullStopFullStopKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmFormalParameterRule());
	        }
       		setWithLastConsumed($current, "varArg", true, "...");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getSimpleNameParameterIDParserRuleCall_4_0()); 
	    }
		lv_simpleName_5_0=ruleParameterID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_5_0, 
        		"ParameterID");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'=' 
)=>	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getJvmFormalParameterAccess().getEqualsSignKeyword_5_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getDefaultValueXExpressionParserRuleCall_5_1_0()); 
	    }
		lv_defaultValue_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleParameterID
entryRuleParameterID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterIDRule()); } 
	 iv_ruleParameterID=ruleParameterID 
	 { $current=$iv_ruleParameterID.current.getText(); }  
	 EOF 
;

// Rule ParameterID
ruleParameterID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getParameterIDAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterIDAccess().getAddKeyword_1()); 
    }

    |
	kw='remove' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterIDAccess().getRemoveKeyword_2()); 
    }

    |
	kw='get' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterIDAccess().getGetKeyword_3()); 
    }

    |
	kw='set' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterIDAccess().getSetKeyword_4()); 
    }

    |
	kw='ref' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterIDAccess().getRefKeyword_5()); 
    }

    |
	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterIDAccess().getOutKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_typeArguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_7_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXArgumentParserRuleCall_3_1_0_0()); 
	    }
		lv_featureCallArguments_8_0=ruleXArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_8_0, 
        		"XArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXArgumentParserRuleCall_3_1_1_1_0()); 
	    }
		lv_featureCallArguments_10_0=ruleXArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_10_0, 
        		"XArgument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleXArgument
entryRuleXArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXArgumentRule()); }
	 iv_ruleXArgument=ruleXArgument 
	 { $current=$iv_ruleXArgument.current; } 
	 EOF 
;

// Rule XArgument
ruleXArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXArgumentAccess().getXArgumentAction_0(),
            $current);
    }
)((
(
		lv_ref_1_0=	'ref' 
    {
        newLeafNode(lv_ref_1_0, grammarAccess.getXArgumentAccess().getRefRefKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArgumentRule());
	        }
       		setWithLastConsumed($current, "ref", true, "ref");
	    }

)
)
    |(
(
		lv_out_2_0=	'out' 
    {
        newLeafNode(lv_out_2_0, grammarAccess.getXArgumentAccess().getOutOutKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXArgumentRule());
	        }
       		setWithLastConsumed($current, "out", true, "out");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXArgumentAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXArgumentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
    }
    this_FeatureCallID_0=ruleFeatureCallID    {
		$current.merge(this_FeatureCallID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }

    |
	kw='this' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getThisKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXObjectLiteral
entryRuleXObjectLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXObjectLiteralRule()); }
	 iv_ruleXObjectLiteral=ruleXObjectLiteral 
	 { $current=$iv_ruleXObjectLiteral.current; } 
	 EOF 
;

// Rule XObjectLiteral
ruleXObjectLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXObjectLiteralAccess().getXObjectLiteralAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXObjectLiteralAccess().getNewKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXObjectLiteralAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXObjectLiteralAccess().getMembersXObjectLiteralPartParserRuleCall_3_0()); 
	    }
		lv_members_3_0=ruleXObjectLiteralPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXObjectLiteralRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_3_0, 
        		"XObjectLiteralPart");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXObjectLiteralAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXObjectLiteralAccess().getMembersXObjectLiteralPartParserRuleCall_4_1_0()); 
	    }
		lv_members_5_0=ruleXObjectLiteralPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXObjectLiteralRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"XObjectLiteralPart");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXObjectLiteralAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleXObjectLiteralPart
entryRuleXObjectLiteralPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXObjectLiteralPartRule()); }
	 iv_ruleXObjectLiteralPart=ruleXObjectLiteralPart 
	 { $current=$iv_ruleXObjectLiteralPart.current; } 
	 EOF 
;

// Rule XObjectLiteralPart
ruleXObjectLiteralPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXObjectLiteralPartAccess().getXObjectLiteralPartAction_0(),
            $current);
    }
)(
(
		lv_simpleName_1_0=RULE_ID
		{
			newLeafNode(lv_simpleName_1_0, grammarAccess.getXObjectLiteralPartAccess().getSimpleNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXObjectLiteralPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXObjectLiteralPartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXObjectLiteralPartAccess().getDefaultValueXExpressionParserRuleCall_3_0()); 
	    }
		lv_defaultValue_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXObjectLiteralPartRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_0()); 
	    }
		lv_arguments_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleXStructLiteral
entryRuleXStructLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStructLiteralRule()); }
	 iv_ruleXStructLiteral=ruleXStructLiteral 
	 { $current=$iv_ruleXStructLiteral.current; } 
	 EOF 
;

// Rule XStructLiteral
ruleXStructLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStructLiteralAccess().getXStructLiteralAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXStructLiteralAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStructLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXStructLiteralAccess().getTypeJvmStructTypeCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXStructLiteralAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXStructLiteralAccess().getPropertiesXFieldLiteralPartParserRuleCall_4_0()); 
	    }
		lv_properties_4_0=ruleXFieldLiteralPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXStructLiteralRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_4_0, 
        		"XFieldLiteralPart");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXStructLiteralAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXStructLiteralAccess().getPropertiesXFieldLiteralPartParserRuleCall_5_1_0()); 
	    }
		lv_properties_6_0=ruleXFieldLiteralPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXStructLiteralRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_6_0, 
        		"XFieldLiteralPart");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXStructLiteralAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXFieldLiteralPart
entryRuleXFieldLiteralPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFieldLiteralPartRule()); }
	 iv_ruleXFieldLiteralPart=ruleXFieldLiteralPart 
	 { $current=$iv_ruleXFieldLiteralPart.current; } 
	 EOF 
;

// Rule XFieldLiteralPart
ruleXFieldLiteralPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFieldLiteralPartAccess().getXFieldLiteralPartAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFieldLiteralPartRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFieldLiteralPartAccess().getFieldJvmFieldCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFieldLiteralPartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFieldLiteralPartAccess().getValueXExpressionParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFieldLiteralPartRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXArrayLiteral
entryRuleXArrayLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXArrayLiteralRule()); }
	 iv_ruleXArrayLiteral=ruleXArrayLiteral 
	 { $current=$iv_ruleXArrayLiteral.current; } 
	 EOF 
;

// Rule XArrayLiteral
ruleXArrayLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXArrayLiteralAccess().getXArrayLiteralAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXArrayLiteralAccess().getNewKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXArrayLiteralAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXArrayLiteralAccess().getElementsXExpressionParserRuleCall_3_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXArrayLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXArrayLiteralAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXArrayLiteralAccess().getElementsXExpressionParserRuleCall_4_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXArrayLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXArrayLiteralAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
	    }
		lv_arrayDimensions_4_0=ruleArrayBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
	        }
       		add(
       			$current, 
       			"arrayDimensions",
        		lv_arrayDimensions_4_0, 
        		"ArrayBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleXThrowStatment
entryRuleXThrowStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowStatmentRule()); }
	 iv_ruleXThrowStatment=ruleXThrowStatment 
	 { $current=$iv_ruleXThrowStatment.current; } 
	 EOF 
;

// Rule XThrowStatment
ruleXThrowStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowStatmentAccess().getXThrowStatmentAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowStatmentAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowStatmentAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowStatmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXThrowStatmentAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleXReturnStatment
entryRuleXReturnStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnStatmentRule()); }
	 iv_ruleXReturnStatment=ruleXReturnStatment 
	 { $current=$iv_ruleXReturnStatment.current; } 
	 EOF 
;

// Rule XReturnStatment
ruleXReturnStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnStatmentAccess().getXReturnStatmentAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnStatmentAccess().getReturnKeyword_1());
    }
((
(
ruleXExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnStatmentAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnStatmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXReturnStatmentAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleXBreakStatment
entryRuleXBreakStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBreakStatmentRule()); }
	 iv_ruleXBreakStatment=ruleXBreakStatment 
	 { $current=$iv_ruleXBreakStatment.current; } 
	 EOF 
;

// Rule XBreakStatment
ruleXBreakStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBreakStatmentAccess().getXBreakStatmentAction_0(),
            $current);
    }
)	otherlv_1='break' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBreakStatmentAccess().getBreakKeyword_1());
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXBreakStatmentAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleXContinueStatment
entryRuleXContinueStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXContinueStatmentRule()); }
	 iv_ruleXContinueStatment=ruleXContinueStatment 
	 { $current=$iv_ruleXContinueStatment.current; } 
	 EOF 
;

// Rule XContinueStatment
ruleXContinueStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXContinueStatmentAccess().getXContinueStatmentAction_0(),
            $current);
    }
)	otherlv_1='continue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXContinueStatmentAccess().getContinueKeyword_1());
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXContinueStatmentAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleXTryCatchFinallyStatment
entryRuleXTryCatchFinallyStatment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyStatmentRule()); }
	 iv_ruleXTryCatchFinallyStatment=ruleXTryCatchFinallyStatment 
	 { $current=$iv_ruleXTryCatchFinallyStatment.current; } 
	 EOF 
;

// Rule XTryCatchFinallyStatment
ruleXTryCatchFinallyStatment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyStatmentAccess().getXTryCatchFinallyStatmentAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyStatmentAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyStatmentAccess().getStatmentXStatmentParserRuleCall_2_0()); 
	    }
		lv_statment_2_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyStatmentRule());
	        }
       		set(
       			$current, 
       			"statment",
        		lv_statment_2_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyStatmentAccess().getCatchClauseXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClause_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyStatmentRule());
	        }
       		set(
       			$current, 
       			"catchClause",
        		lv_catchClause_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyStatmentAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyStatmentAccess().getFinallyStatmentXStatmentParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyStatment_5_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyStatmentRule());
	        }
       		set(
       			$current, 
       			"finallyStatment",
        		lv_finallyStatment_5_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyStatmentAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyStatmentAccess().getFinallyStatmentXStatmentParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyStatment_7_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyStatmentRule());
	        }
       		set(
       			$current, 
       			"finallyStatment",
        		lv_finallyStatment_7_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_identifier_2_0=RULE_ID
		{
			newLeafNode(lv_identifier_2_0, grammarAccess.getXCatchClauseAccess().getIdentifierIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXCatchClauseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_2_0, 
        		"ID");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getStatmentXStatmentParserRuleCall_4_0()); 
	    }
		lv_statment_4_0=ruleXStatment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"statment",
        		lv_statment_4_0, 
        		"XStatment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmAnnotation
entryRuleJvmAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmAnnotationRule()); }
	 iv_ruleJvmAnnotation=ruleJvmAnnotation 
	 { $current=$iv_ruleJvmAnnotation.current; } 
	 EOF 
;

// Rule JvmAnnotation
ruleJvmAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmAnnotationAccess().getJvmAnnotationReferenceAction_0(),
            $current);
    }
)	otherlv_1='@' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmAnnotationAccess().getCommercialAtKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmAnnotationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmAnnotationAccess().getAnnotationJvmAnnotationTypeCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'(' 
)=>	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmAnnotationAccess().getLeftParenthesisKeyword_3_0());
    }
)((((((
(
		ruleValidID
)
)	'=' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getJvmAnnotationAccess().getValuesJvmAnnotationValueParserRuleCall_3_1_0_0_0()); 
	    }
		lv_values_4_0=ruleJvmAnnotationValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmAnnotationRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"JvmAnnotationValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmAnnotationAccess().getCommaKeyword_3_1_0_1_0());
    }
((((
(
		ruleValidID
)
)	'=' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getJvmAnnotationAccess().getValuesJvmAnnotationValueParserRuleCall_3_1_0_1_1_0()); 
	    }
		lv_values_6_0=ruleJvmAnnotationValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmAnnotationRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_6_0, 
        		"JvmAnnotationValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmAnnotationAccess().getValueXLiteralParserRuleCall_3_1_1_0()); 
	    }
		lv_value_7_0=ruleXLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmAnnotationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"XLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getJvmAnnotationAccess().getRightParenthesisKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleJvmAnnotationValue
entryRuleJvmAnnotationValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmAnnotationValueRule()); }
	 iv_ruleJvmAnnotationValue=ruleJvmAnnotationValue 
	 { $current=$iv_ruleJvmAnnotationValue.current; } 
	 EOF 
;

// Rule JvmAnnotationValue
ruleJvmAnnotationValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
(
		ruleValidID
)
)	'=' 
))=>((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmAnnotationValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmAnnotationValueAccess().getFieldJvmFieldCrossReference_0_0_0_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmAnnotationValueAccess().getEqualsSignKeyword_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmAnnotationValueAccess().getValueXLiteralParserRuleCall_1_0()); 
	    }
		lv_value_2_0=ruleXLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmAnnotationValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"XLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleXTemplateLiteral
entryRuleXTemplateLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTemplateLiteralRule()); }
	 iv_ruleXTemplateLiteral=ruleXTemplateLiteral 
	 { $current=$iv_ruleXTemplateLiteral.current; } 
	 EOF 
;

// Rule XTemplateLiteral
ruleXTemplateLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTemplateLiteralAccess().getXTemplateAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXTemplateLiteralAccess().getExpressionsRichStringLiteralParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleRichStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTemplateLiteralRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"RichStringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXTemplateLiteralAccess().getExpressionsRichStringLiteralStartParserRuleCall_1_1_0_0()); 
	    }
		lv_expressions_2_0=ruleRichStringLiteralStart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTemplateLiteralRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"RichStringLiteralStart");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTemplateLiteralAccess().getExpressionsXExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_expressions_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTemplateLiteralRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getXTemplateLiteralAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_2_0_0()); 
	    }
		lv_expressions_4_0=ruleRichStringLiteralInbetween		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTemplateLiteralRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"RichStringLiteralInbetween");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTemplateLiteralAccess().getExpressionsXExpressionParserRuleCall_1_1_2_1_0()); 
	    }
		lv_expressions_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTemplateLiteralRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*(
(
		{ 
	        newCompositeNode(grammarAccess.getXTemplateLiteralAccess().getExpressionsRichStringLiteralEndParserRuleCall_1_1_3_0()); 
	    }
		lv_expressions_6_0=ruleRichStringLiteralEnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTemplateLiteralRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_6_0, 
        		"RichStringLiteralEnd");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleRichStringLiteral
entryRuleRichStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralRule()); }
	 iv_ruleRichStringLiteral=ruleRichStringLiteral 
	 { $current=$iv_ruleRichStringLiteral.current; } 
	 EOF 
;

// Rule RichStringLiteral
ruleRichStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralAccess().getRichStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_RICH_TEXT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralAccess().getValueRICH_TEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT");
	    }

)
))
;





// Entry rule entryRuleRichStringLiteralStart
entryRuleRichStringLiteralStart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralStartRule()); }
	 iv_ruleRichStringLiteralStart=ruleRichStringLiteralStart 
	 { $current=$iv_ruleRichStringLiteralStart.current; } 
	 EOF 
;

// Rule RichStringLiteralStart
ruleRichStringLiteralStart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralStartAccess().getRichStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_RICH_TEXT_START
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralStartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT_START");
	    }

)
))
;





// Entry rule entryRuleRichStringLiteralInbetween
entryRuleRichStringLiteralInbetween returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralInbetweenRule()); }
	 iv_ruleRichStringLiteralInbetween=ruleRichStringLiteralInbetween 
	 { $current=$iv_ruleRichStringLiteralInbetween.current; } 
	 EOF 
;

// Rule RichStringLiteralInbetween
ruleRichStringLiteralInbetween returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralInbetweenAccess().getRichStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_RICH_TEXT_INBETWEEN
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralInbetweenAccess().getValueRICH_TEXT_INBETWEENTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralInbetweenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT_INBETWEEN");
	    }

)
))
;





// Entry rule entryRuleRichStringLiteralEnd
entryRuleRichStringLiteralEnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralEndRule()); }
	 iv_ruleRichStringLiteralEnd=ruleRichStringLiteralEnd 
	 { $current=$iv_ruleRichStringLiteralEnd.current; } 
	 EOF 
;

// Rule RichStringLiteralEnd
ruleRichStringLiteralEnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralEndAccess().getRichStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_RICH_TEXT_END
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralEndRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT_END");
	    }

)
))
;





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	ruleArrayBrackets))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
    }
ruleArrayBrackets
    { 
        afterParserOrEnumRuleCall();
    }
))*)
    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_3=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); } 
	 iv_ruleArrayBrackets=ruleArrayBrackets 
	 { $current=$iv_ruleArrayBrackets.current.getText(); }  
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getCommercialAtKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_2_0_0()); 
	    }
		lv_paramTypes_2_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_2_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_2_1_1_0()); 
	    }
		lv_paramTypes_4_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_4_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_3());
    }
	otherlv_6='=>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_5_0()); 
	    }
		lv_returnType_7_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_7_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmTypeParameter
entryRuleJvmTypeParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeParameterRule()); }
	 iv_ruleJvmTypeParameter=ruleJvmTypeParameter 
	 { $current=$iv_ruleJvmTypeParameter.current; } 
	 EOF 
;

// Rule JvmTypeParameter
ruleJvmTypeParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getSimpleNameValidIDParserRuleCall_0_0()); 
	    }
		lv_simpleName_0_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
	        }
       		set(
       			$current, 
       			"simpleName",
        		lv_simpleName_0_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundParserRuleCall_1_0_0()); 
	    }
		lv_constraints_1_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_1_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_1_1_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBoundAnded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBoundAnded");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;







// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? (RULE_IDENTIFIER_START|RULE_UNICODE_ESCAPE) (RULE_IDENTIFIER_PART|RULE_UNICODE_ESCAPE)*;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_UNICODE_ESCAPE : '\\' 'u' (RULE_HEX_DIGIT (RULE_HEX_DIGIT (RULE_HEX_DIGIT RULE_HEX_DIGIT?)?)?)?;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_RICH_TEXT : '`' RULE_IN_RICH_STRING* ('`'|EOF);

RULE_RICH_TEXT_START : '`' RULE_IN_RICH_STRING* '<%';

RULE_RICH_TEXT_END : '%>' RULE_IN_RICH_STRING* ('`'|EOF);

RULE_RICH_TEXT_INBETWEEN : '%>' RULE_IN_RICH_STRING* '<%';

fragment RULE_IN_RICH_STRING : (~(('`'|'\\'|'<'))|'<' ~('%'));

fragment RULE_IDENTIFIER_START : ('$'|'A'..'Z'|'_'|'a'..'z'|'\u00A2'..'\u00A5'|'\u00AA'|'\u00B5'|'\u00BA'|'\u00C0'..'\u00D6'|'\u00D8'..'\u00F6'|'\u00F8'..'\u0236'|'\u0250'..'\u02C1'|'\u02C6'..'\u02D1'|'\u02E0'..'\u02E4'|'\u02EE'|'\u037A'|'\u0386'|'\u0388'..'\u038A'|'\u038C'|'\u038E'..'\u03A1'|'\u03A3'..'\u03CE'|'\u03D0'..'\u03F5'|'\u03F7'..'\u03FB'|'\u0400'..'\u0481'|'\u048A'..'\u04CE'|'\u04D0'..'\u04F5'|'\u04F8'..'\u04F9'|'\u0500'..'\u050F'|'\u0531'..'\u0556'|'\u0559'|'\u0561'..'\u0587'|'\u05D0'..'\u05EA'|'\u05F0'..'\u05F2'|'\u0621'..'\u063A'|'\u0640'..'\u064A'|'\u066E'..'\u066F'|'\u0671'..'\u06D3'|'\u06D5'|'\u06E5'..'\u06E6'|'\u06EE'..'\u06EF'|'\u06FA'..'\u06FC'|'\u06FF'|'\u0710'|'\u0712'..'\u072F'|'\u074D'..'\u074F'|'\u0780'..'\u07A5'|'\u07B1'|'\u0904'..'\u0939'|'\u093D'|'\u0950'|'\u0958'..'\u0961'|'\u0985'..'\u098C'|'\u098F'..'\u0990'|'\u0993'..'\u09A8'|'\u09AA'..'\u09B0'|'\u09B2'|'\u09B6'..'\u09B9'|'\u09BD'|'\u09DC'..'\u09DD'|'\u09DF'..'\u09E1'|'\u09F0'..'\u09F3'|'\u0A05'..'\u0A0A'|'\u0A0F'..'\u0A10'|'\u0A13'..'\u0A28'|'\u0A2A'..'\u0A30'|'\u0A32'..'\u0A33'|'\u0A35'..'\u0A36'|'\u0A38'..'\u0A39'|'\u0A59'..'\u0A5C'|'\u0A5E'|'\u0A72'..'\u0A74'|'\u0A85'..'\u0A8D'|'\u0A8F'..'\u0A91'|'\u0A93'..'\u0AA8'|'\u0AAA'..'\u0AB0'|'\u0AB2'..'\u0AB3'|'\u0AB5'..'\u0AB9'|'\u0ABD'|'\u0AD0'|'\u0AE0'..'\u0AE1'|'\u0AF1'|'\u0B05'..'\u0B0C'|'\u0B0F'..'\u0B10'|'\u0B13'..'\u0B28'|'\u0B2A'..'\u0B30'|'\u0B32'..'\u0B33'|'\u0B35'..'\u0B39'|'\u0B3D'|'\u0B5C'..'\u0B5D'|'\u0B5F'..'\u0B61'|'\u0B71'|'\u0B83'|'\u0B85'..'\u0B8A'|'\u0B8E'..'\u0B90'|'\u0B92'..'\u0B95'|'\u0B99'..'\u0B9A'|'\u0B9C'|'\u0B9E'..'\u0B9F'|'\u0BA3'..'\u0BA4'|'\u0BA8'..'\u0BAA'|'\u0BAE'..'\u0BB5'|'\u0BB7'..'\u0BB9'|'\u0BF9'|'\u0C05'..'\u0C0C'|'\u0C0E'..'\u0C10'|'\u0C12'..'\u0C28'|'\u0C2A'..'\u0C33'|'\u0C35'..'\u0C39'|'\u0C60'..'\u0C61'|'\u0C85'..'\u0C8C'|'\u0C8E'..'\u0C90'|'\u0C92'..'\u0CA8'|'\u0CAA'..'\u0CB3'|'\u0CB5'..'\u0CB9'|'\u0CBD'|'\u0CDE'|'\u0CE0'..'\u0CE1'|'\u0D05'..'\u0D0C'|'\u0D0E'..'\u0D10'|'\u0D12'..'\u0D28'|'\u0D2A'..'\u0D39'|'\u0D60'..'\u0D61'|'\u0D85'..'\u0D96'|'\u0D9A'..'\u0DB1'|'\u0DB3'..'\u0DBB'|'\u0DBD'|'\u0DC0'..'\u0DC6'|'\u0E01'..'\u0E30'|'\u0E32'..'\u0E33'|'\u0E3F'..'\u0E46'|'\u0E81'..'\u0E82'|'\u0E84'|'\u0E87'..'\u0E88'|'\u0E8A'|'\u0E8D'|'\u0E94'..'\u0E97'|'\u0E99'..'\u0E9F'|'\u0EA1'..'\u0EA3'|'\u0EA5'|'\u0EA7'|'\u0EAA'..'\u0EAB'|'\u0EAD'..'\u0EB0'|'\u0EB2'..'\u0EB3'|'\u0EBD'|'\u0EC0'..'\u0EC4'|'\u0EC6'|'\u0EDC'..'\u0EDD'|'\u0F00'|'\u0F40'..'\u0F47'|'\u0F49'..'\u0F6A'|'\u0F88'..'\u0F8B'|'\u1000'..'\u1021'|'\u1023'..'\u1027'|'\u1029'..'\u102A'|'\u1050'..'\u1055'|'\u10A0'..'\u10C5'|'\u10D0'..'\u10F8'|'\u1100'..'\u1159'|'\u115F'..'\u11A2'|'\u11A8'..'\u11F9'|'\u1200'..'\u1206'|'\u1208'..'\u1246'|'\u1248'|'\u124A'..'\u124D'|'\u1250'..'\u1256'|'\u1258'|'\u125A'..'\u125D'|'\u1260'..'\u1286'|'\u1288'|'\u128A'..'\u128D'|'\u1290'..'\u12AE'|'\u12B0'|'\u12B2'..'\u12B5'|'\u12B8'..'\u12BE'|'\u12C0'|'\u12C2'..'\u12C5'|'\u12C8'..'\u12CE'|'\u12D0'..'\u12D6'|'\u12D8'..'\u12EE'|'\u12F0'..'\u130E'|'\u1310'|'\u1312'..'\u1315'|'\u1318'..'\u131E'|'\u1320'..'\u1346'|'\u1348'..'\u135A'|'\u13A0'..'\u13F4'|'\u1401'..'\u166C'|'\u166F'..'\u1676'|'\u1681'..'\u169A'|'\u16A0'..'\u16EA'|'\u16EE'..'\u16F0'|'\u1700'..'\u170C'|'\u170E'..'\u1711'|'\u1720'..'\u1731'|'\u1740'..'\u1751'|'\u1760'..'\u176C'|'\u176E'..'\u1770'|'\u1780'..'\u17B3'|'\u17D7'|'\u17DB'..'\u17DC'|'\u1820'..'\u1877'|'\u1880'..'\u18A8'|'\u1900'..'\u191C'|'\u1950'..'\u196D'|'\u1970'..'\u1974'|'\u1D00'..'\u1D6B'|'\u1E00'..'\u1E9B'|'\u1EA0'..'\u1EF9'|'\u1F00'..'\u1F15'|'\u1F18'..'\u1F1D'|'\u1F20'..'\u1F45'|'\u1F48'..'\u1F4D'|'\u1F50'..'\u1F57'|'\u1F59'|'\u1F5B'|'\u1F5D'|'\u1F5F'..'\u1F7D'|'\u1F80'..'\u1FB4'|'\u1FB6'..'\u1FBC'|'\u1FBE'|'\u1FC2'..'\u1FC4'|'\u1FC6'..'\u1FCC'|'\u1FD0'..'\u1FD3'|'\u1FD6'..'\u1FDB'|'\u1FE0'..'\u1FEC'|'\u1FF2'..'\u1FF4'|'\u1FF6'..'\u1FFC'|'\u203F'..'\u2040'|'\u2054'|'\u2071'|'\u207F'|'\u20A0'..'\u20B1'|'\u2102'|'\u2107'|'\u210A'..'\u2113'|'\u2115'|'\u2119'..'\u211D'|'\u2124'|'\u2126'|'\u2128'|'\u212A'..'\u212D'|'\u212F'..'\u2131'|'\u2133'..'\u2139'|'\u213D'..'\u213F'|'\u2145'..'\u2149'|'\u2160'..'\u2183'|'\u3005'..'\u3007'|'\u3021'..'\u3029'|'\u3031'..'\u3035'|'\u3038'..'\u303C'|'\u3041'..'\u3096'|'\u309D'..'\u309F'|'\u30A1'..'\u30FF'|'\u3105'..'\u312C'|'\u3131'..'\u318E'|'\u31A0'..'\u31B7'|'\u31F0'..'\u31FF'|'\u3400'..'\u4DB5'|'\u4E00'..'\u9FA5'|'\uA000'..'\uA48C'|'\uAC00'..'\uD7A3'|'\uF900'..'\uFA2D'|'\uFA30'..'\uFA6A'|'\uFB00'..'\uFB06'|'\uFB13'..'\uFB17'|'\uFB1D'|'\uFB1F'..'\uFB28'|'\uFB2A'..'\uFB36'|'\uFB38'..'\uFB3C'|'\uFB3E'|'\uFB40'..'\uFB41'|'\uFB43'..'\uFB44'|'\uFB46'..'\uFBB1'|'\uFBD3'..'\uFD3D'|'\uFD50'..'\uFD8F'|'\uFD92'..'\uFDC7'|'\uFDF0'..'\uFDFC'|'\uFE33'..'\uFE34'|'\uFE4D'..'\uFE4F'|'\uFE69'|'\uFE70'..'\uFE74'|'\uFE76'..'\uFEFC'|'\uFF04'|'\uFF21'..'\uFF3A'|'\uFF3F'|'\uFF41'..'\uFF5A'|'\uFF65'..'\uFFBE'|'\uFFC2'..'\uFFC7'|'\uFFCA'..'\uFFCF'|'\uFFD2'..'\uFFD7'|'\uFFDA'..'\uFFDC'|'\uFFE0'..'\uFFE1'|'\uFFE5'..'\uFFE6');

fragment RULE_IDENTIFIER_PART : (RULE_IDENTIFIER_START|RULE_IDENTIFIER_PART_IMPL);

fragment RULE_IDENTIFIER_PART_IMPL : ('\u0000'..'\b'|'\u000E'..'\u001B'|'0'..'9'|'\u007F'..'\u009F'|'\u00AD'|'\u0300'..'\u0357'|'\u035D'..'\u036F'|'\u0483'..'\u0486'|'\u0591'..'\u05A1'|'\u05A3'..'\u05B9'|'\u05BB'..'\u05BD'|'\u05BF'|'\u05C1'..'\u05C2'|'\u05C4'|'\u0600'..'\u0603'|'\u0610'..'\u0615'|'\u064B'..'\u0658'|'\u0660'..'\u0669'|'\u0670'|'\u06D6'..'\u06DD'|'\u06DF'..'\u06E4'|'\u06E7'..'\u06E8'|'\u06EA'..'\u06ED'|'\u06F0'..'\u06F9'|'\u070F'|'\u0711'|'\u0730'..'\u074A'|'\u07A6'..'\u07B0'|'\u0901'..'\u0903'|'\u093C'|'\u093E'..'\u094D'|'\u0951'..'\u0954'|'\u0962'..'\u0963'|'\u0966'..'\u096F'|'\u0981'..'\u0983'|'\u09BC'|'\u09BE'..'\u09C4'|'\u09C7'..'\u09C8'|'\u09CB'..'\u09CD'|'\u09D7'|'\u09E2'..'\u09E3'|'\u09E6'..'\u09EF'|'\u0A01'..'\u0A03'|'\u0A3C'|'\u0A3E'..'\u0A42'|'\u0A47'..'\u0A48'|'\u0A4B'..'\u0A4D'|'\u0A66'..'\u0A71'|'\u0A81'..'\u0A83'|'\u0ABC'|'\u0ABE'..'\u0AC5'|'\u0AC7'..'\u0AC9'|'\u0ACB'..'\u0ACD'|'\u0AE2'..'\u0AE3'|'\u0AE6'..'\u0AEF'|'\u0B01'..'\u0B03'|'\u0B3C'|'\u0B3E'..'\u0B43'|'\u0B47'..'\u0B48'|'\u0B4B'..'\u0B4D'|'\u0B56'..'\u0B57'|'\u0B66'..'\u0B6F'|'\u0B82'|'\u0BBE'..'\u0BC2'|'\u0BC6'..'\u0BC8'|'\u0BCA'..'\u0BCD'|'\u0BD7'|'\u0BE7'..'\u0BEF'|'\u0C01'..'\u0C03'|'\u0C3E'..'\u0C44'|'\u0C46'..'\u0C48'|'\u0C4A'..'\u0C4D'|'\u0C55'..'\u0C56'|'\u0C66'..'\u0C6F'|'\u0C82'..'\u0C83'|'\u0CBC'|'\u0CBE'..'\u0CC4'|'\u0CC6'..'\u0CC8'|'\u0CCA'..'\u0CCD'|'\u0CD5'..'\u0CD6'|'\u0CE6'..'\u0CEF'|'\u0D02'..'\u0D03'|'\u0D3E'..'\u0D43'|'\u0D46'..'\u0D48'|'\u0D4A'..'\u0D4D'|'\u0D57'|'\u0D66'..'\u0D6F'|'\u0D82'..'\u0D83'|'\u0DCA'|'\u0DCF'..'\u0DD4'|'\u0DD6'|'\u0DD8'..'\u0DDF'|'\u0DF2'..'\u0DF3'|'\u0E31'|'\u0E34'..'\u0E3A'|'\u0E47'..'\u0E4E'|'\u0E50'..'\u0E59'|'\u0EB1'|'\u0EB4'..'\u0EB9'|'\u0EBB'..'\u0EBC'|'\u0EC8'..'\u0ECD'|'\u0ED0'..'\u0ED9'|'\u0F18'..'\u0F19'|'\u0F20'..'\u0F29'|'\u0F35'|'\u0F37'|'\u0F39'|'\u0F3E'..'\u0F3F'|'\u0F71'..'\u0F84'|'\u0F86'..'\u0F87'|'\u0F90'..'\u0F97'|'\u0F99'..'\u0FBC'|'\u0FC6'|'\u102C'..'\u1032'|'\u1036'..'\u1039'|'\u1040'..'\u1049'|'\u1056'..'\u1059'|'\u1369'..'\u1371'|'\u1712'..'\u1714'|'\u1732'..'\u1734'|'\u1752'..'\u1753'|'\u1772'..'\u1773'|'\u17B4'..'\u17D3'|'\u17DD'|'\u17E0'..'\u17E9'|'\u180B'..'\u180D'|'\u1810'..'\u1819'|'\u18A9'|'\u1920'..'\u192B'|'\u1930'..'\u193B'|'\u1946'..'\u194F'|'\u200C'..'\u200F'|'\u202A'..'\u202E'|'\u2060'..'\u2063'|'\u206A'..'\u206F'|'\u20D0'..'\u20DC'|'\u20E1'|'\u20E5'..'\u20EA'|'\u302A'..'\u302F'|'\u3099'..'\u309A'|'\uFB1E'|'\uFE00'..'\uFE0F'|'\uFE20'..'\uFE23'|'\uFEFF'|'\uFF10'..'\uFF19'|'\uFFF9'..'\uFFFB');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



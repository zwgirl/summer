// $ANTLR 3.5.1 C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g 2014-04-21 18:29:02

package org.summer.xaml.core.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.summer.xaml.core.services.XAMLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class InternalXAMLParser extends DebugAbstractInternalAntlrParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ANY_OTHER", "RULE_DECIMAL", 
		"RULE_HEX", "RULE_HEX_DIGIT", "RULE_ID", "RULE_IDENTIFIER_PART", "RULE_IDENTIFIER_PART_IMPL", 
		"RULE_IDENTIFIER_START", "RULE_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", 
		"RULE_STRING", "RULE_UNICODE_ESCAPE", "RULE_WS", "'!'", "'!='", "'!=='", 
		"'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "')'", "'*'", "'*='", "'+'", 
		"'++'", "'+='", "','", "'-'", "'--'", "'-='", "'.'", "'...'", "'/'", "'/='", 
		"'/>'", "':'", "'::'", "';'", "'<'", "'</'", "'<='", "'='", "'=='", "'==='", 
		"'=>'", "'>'", "'>='", "'?'", "'?.'", "'@'", "'['", "']'", "'^'", "'^='", 
		"'annotation'", "'as'", "'case'", "'catch'", "'class'", "'const'", "'constructor'", 
		"'export'", "'extends'", "'false'", "'from'", "'function'", "'get'", "'implements'", 
		"'import'", "'instanceof'", "'interface'", "'new'", "'null'", "'override'", 
		"'private'", "'set'", "'static'", "'super'", "'true'", "'typeof'", "'var'", 
		"'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public static final int EOF=-1;
	public static final int T__18=18;
	public static final int T__19=19;
	public static final int T__20=20;
	public static final int T__21=21;
	public static final int T__22=22;
	public static final int T__23=23;
	public static final int T__24=24;
	public static final int T__25=25;
	public static final int T__26=26;
	public static final int T__27=27;
	public static final int T__28=28;
	public static final int T__29=29;
	public static final int T__30=30;
	public static final int T__31=31;
	public static final int T__32=32;
	public static final int T__33=33;
	public static final int T__34=34;
	public static final int T__35=35;
	public static final int T__36=36;
	public static final int T__37=37;
	public static final int T__38=38;
	public static final int T__39=39;
	public static final int T__40=40;
	public static final int T__41=41;
	public static final int T__42=42;
	public static final int T__43=43;
	public static final int T__44=44;
	public static final int T__45=45;
	public static final int T__46=46;
	public static final int T__47=47;
	public static final int T__48=48;
	public static final int T__49=49;
	public static final int T__50=50;
	public static final int T__51=51;
	public static final int T__52=52;
	public static final int T__53=53;
	public static final int T__54=54;
	public static final int T__55=55;
	public static final int T__56=56;
	public static final int T__57=57;
	public static final int T__58=58;
	public static final int T__59=59;
	public static final int T__60=60;
	public static final int T__61=61;
	public static final int T__62=62;
	public static final int T__63=63;
	public static final int T__64=64;
	public static final int T__65=65;
	public static final int T__66=66;
	public static final int T__67=67;
	public static final int T__68=68;
	public static final int T__69=69;
	public static final int T__70=70;
	public static final int T__71=71;
	public static final int T__72=72;
	public static final int T__73=73;
	public static final int T__74=74;
	public static final int T__75=75;
	public static final int T__76=76;
	public static final int T__77=77;
	public static final int T__78=78;
	public static final int T__79=79;
	public static final int T__80=80;
	public static final int T__81=81;
	public static final int T__82=82;
	public static final int T__83=83;
	public static final int T__84=84;
	public static final int T__85=85;
	public static final int T__86=86;
	public static final int T__87=87;
	public static final int T__88=88;
	public static final int T__89=89;
	public static final int T__90=90;
	public static final int T__91=91;
	public static final int T__92=92;
	public static final int T__93=93;
	public static final int RULE_ANY_OTHER=4;
	public static final int RULE_DECIMAL=5;
	public static final int RULE_HEX=6;
	public static final int RULE_HEX_DIGIT=7;
	public static final int RULE_ID=8;
	public static final int RULE_IDENTIFIER_PART=9;
	public static final int RULE_IDENTIFIER_PART_IMPL=10;
	public static final int RULE_IDENTIFIER_START=11;
	public static final int RULE_INT=12;
	public static final int RULE_ML_COMMENT=13;
	public static final int RULE_SL_COMMENT=14;
	public static final int RULE_STRING=15;
	public static final int RULE_UNICODE_ESCAPE=16;
	public static final int RULE_WS=17;

	// delegates
	public AbstractInternalAntlrParser[] getDelegates() {
		return new AbstractInternalAntlrParser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "entryRuleXObjectLiteral", "synpred14_InternalXAML", "entryRuleXTypeLiteral", 
		"ruleXCatchClause", "entryRuleJvmFormalParameter", "entryRuleNumber", 
		"synpred15_InternalXAML", "synpred6_InternalXAML", "synpred36_InternalXAML", 
		"ruleXLiteral", "ruleXAndExpression", "ruleXUnaryOperation", "ruleValidID", 
		"ruleObjectElement", "entryRuleXShiftExpression", "ruleXNullLiteral", 
		"ruleElementContent", "entryRuleXMultiplicativeExpression", "ruleIdOrSuper", 
		"ruleFunctionID", "entryRuleXImportItem", "entryRuleQualifiedName", "entryRuleOpEquality", 
		"entryRuleXUnaryOperation", "synpred30_InternalXAML", "synpred17_InternalXAML", 
		"ruleAnnotationField", "entryRuleMarkupExtenson", "entryRuleFunctionID", 
		"entryRuleXEqualityExpression", "ruleJvmLowerBound", "ruleXRelationalExpression", 
		"synpred28_InternalXAML", "ruleXCastedExpression", "ruleXPrimaryExpression", 
		"ruleXTernaryOperation", "synpred25_InternalXAML", "synpred9_InternalXAML", 
		"ruleAbstractProperty", "ruleFullJvmFormalParameter", "synpred19_InternalXAML", 
		"ruleXBooleanLiteral", "ruleXExportItem", "entryRuleXFunctionTypeRef", 
		"entryRuleXPrimaryExpression", "ruleAttachProperty", "ruleXArrayLiteral", 
		"synpred32_InternalXAML", "entryRuleOpCompare", "entryRuleJvmTypeParameter", 
		"entryRuleXAndExpression", "entryRuleXNullLiteral", "synpred34_InternalXAML", 
		"entryRuleValidID", "ruleGeneralProperty", "ruleCommonModifier", "synpred4_InternalXAML", 
		"entryRuleXAnnotation", "synpred26_InternalXAML", "entryRuleOpMulti", 
		"ruleAttributeElement", "synpred37_InternalXAML", "ruleJvmParameterizedTypeReference", 
		"ruleXImportItem", "synpred20_InternalXAML", "entryRuleOpAdd", "entryRuleXVariableDeclaration", 
		"ruleXExportDeclaration", "entryRuleJvmArgumentTypeReference", "ruleXBlockExpression", 
		"ruleType", "entryRuleFeatureCallID", "synpred21_InternalXAML", "entryRuleAnnotationField", 
		"entryRuleXArrayLiteral", "ruleXAdditiveExpression", "ruleOperators", 
		"entryRuleDocument", "ruleXNumberLiteral", "entryRuleXCasePart", "ruleShiftOp", 
		"ruleXExpressionInsideBlock", "ruleXObjectLiteral", "ruleJvmWildcardTypeReference", 
		"entryRulePrefixOp", "synpred1_InternalXAML", "entryRuleJvmAnnotationValue", 
		"ruleOpOr", "entryRuleArrayBrackets", "ruleXBitwiseExpression", "ruleXExportSection", 
		"entryRuleXCastedExpression", "ruleBinaryBitwiseOp", "entryRuleXExpression", 
		"ruleXMemberFeatureCall", "entryRuleOpOr", "rulePrefixOp", "entryRuleElementContent", 
		"entryRuleXImportSection1", "entryRuleOpMultiAssign", "entryRuleXPostfixOperation", 
		"ruleOpEquality", "ruleJvmTypeParameter", "ruleMarkupExtenson", "ruleXExpression", 
		"ruleXFunctionTypeRef", "entryRuleFullJvmFormalParameter", "synpred24_InternalXAML", 
		"synpred8_InternalXAML", "ruleQualifiedName", "synpred5_InternalXAML", 
		"entryRuleXMemberFeatureCall", "entryRuleXBitwiseExpression", "entryRuleXClosure", 
		"ruleXMultiAssignment", "synpred12_InternalXAML", "entryRuleJvmUpperBound", 
		"entryRuleAttributeElement", "ruleXPostfixOperation", "entryRuleJvmWildcardTypeReference", 
		"ruleOpAdd", "entryRuleJvmLowerBound", "entryRuleXMultiAssignment", "synpred29_InternalXAML", 
		"ruleOpMulti", "ruleOpCompare", "entryRuleXAssignment", "ruleJvmUpperBound", 
		"ruleXIndexOperation", "entryRuleParameter", "ruleXImportDeclaration1", 
		"entryRuleXBlockExpression", "entryRuleJvmTypeReference", "entryRuleOpAnd", 
		"ruleJvmAnnotationValue", "entryRuleType", "ruleMember", "entryRuleXExpressionInsideBlock", 
		"entryRuleXTernaryOperation", "synpred33_InternalXAML", "entryRuleXExportSection", 
		"synpred10_InternalXAML", "synpred7_InternalXAML", "entryRuleXBooleanLiteral", 
		"ruleXAssignment", "ruleJvmTypeReference", "synpred22_InternalXAML", "synpred13_InternalXAML", 
		"ruleFeatureCallID", "ruleOpAnd", "entryRuleXStringLiteral", "ruleXTypeLiteral", 
		"ruleJvmUpperBoundAnded", "ruleXStringLiteral", "entryRuleIdOrSuper", 
		"entryRuleXExportDeclaration", "entryRuleOperators", "entryRuleXObjectLiteralPart", 
		"ruleXCasePart", "entryRuleCommonModifier", "entryRuleOpSingleAssign", 
		"ruleOpSingleAssign", "entryRuleJvmParameterizedTypeReference", "entryRuleBinaryBitwiseOp", 
		"ruleOpMultiAssign", "entryRuleAbstractProperty", "entryRuleIndexOp", 
		"entryRuleXOrExpression", "ruleArrayBrackets", "entryRuleXRelationalExpression", 
		"entryRuleXAdditiveExpression", "entryRuleShiftOp", "ruleJvmArgumentTypeReference", 
		"entryRuleMember", "ruleXClosure", "ruleOpUnary", "entryRuleXIndexOperation", 
		"entryRuleXImportDeclaration1", "synpred3_InternalXAML", "ruleJvmFormalParameter", 
		"ruleXEqualityExpression", "synpred2_InternalXAML", "ruleXObjectLiteralPart", 
		"ruleXImportSection1", "ruleParameter", "ruleXVariableDeclaration", "synpred16_InternalXAML", 
		"entryRuleXCatchClause", "ruleXShiftExpression", "synpred18_InternalXAML", 
		"ruleIndexOp", "entryRuleXVariableDeclarationList", "entryRuleOpUnary", 
		"synpred23_InternalXAML", "synpred35_InternalXAML", "synpred38_InternalXAML", 
		"entryRuleXNumberLiteral", "ruleXAnnotation", "ruleXMultiplicativeExpression", 
		"synpred27_InternalXAML", "ruleXVariableDeclarationList", "synpred31_InternalXAML", 
		"entryRuleObjectElement", "entryRuleXLiteral", "synpred11_InternalXAML", 
		"entryRuleXExportItem", "entryRuleGeneralProperty", "entryRuleJvmUpperBoundAnded", 
		"ruleXOrExpression", "ruleNumber", "entryRuleAttachProperty", "ruleDocument"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, true, true, 
		    true, true, true, true, false, true, false, false, false, true, false, 
		    true, true, false, true, true, false, true, false, false, false, true, 
		    true, false, false, false, false, false, false, false, false, true, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public InternalXAMLParser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public InternalXAMLParser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public InternalXAMLParser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return InternalXAMLParser.tokenNames; }
	@Override public String getGrammarFileName() { return "C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g"; }



	 	private XAMLGrammarAccess grammarAccess;
	 	
	    public InternalXAMLParser(TokenStream input, XAMLGrammarAccess grammarAccess) {
	        this(input);
	        this.grammarAccess = grammarAccess;
	        registerRules(grammarAccess.getGrammar());
	    }
	    
	    @Override
	    protected String getFirstRuleName() {
	    	return "Document";	
	   	}
	   	
	   	@Override
	   	protected XAMLGrammarAccess getGrammarAccess() {
	   		return grammarAccess;
	   	}



	// $ANTLR start "entryRuleDocument"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:67:1: entryRuleDocument returns [EObject current=null] :iv_ruleDocument= ruleDocument EOF ;
	public final EObject entryRuleDocument() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleDocument =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleDocument");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(67, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:68:2: (iv_ruleDocument= ruleDocument EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:69:2: iv_ruleDocument= ruleDocument EOF
			{
			dbg.location(69,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getDocumentRule()); }dbg.location(70,18);
			pushFollow(FOLLOW_ruleDocument_in_entryRuleDocument75);
			iv_ruleDocument=ruleDocument();
			state._fsp--;
			if (state.failed) return current;dbg.location(71,3);
			if ( state.backtracking==0 ) { current =iv_ruleDocument; }dbg.location(72,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleDocument85); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(73, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleDocument");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleDocument"



	// $ANTLR start "ruleDocument"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:76:1: ruleDocument returns [EObject current=null] : ( ( (lv_importSection_0_0= ruleXImportSection1 ) )? ( (lv_root_1_0= ruleObjectElement ) ) ( ( (lv_contents_2_0= ruleType ) ) | ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? ) )* ) ;
	public final EObject ruleDocument() throws RecognitionException {
		EObject current = null;


		Token otherlv_4=null;
		EObject lv_importSection_0_0 =null;
		EObject lv_root_1_0 =null;
		EObject lv_contents_2_0 =null;
		EObject lv_contents_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleDocument");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(76, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:79:28: ( ( ( (lv_importSection_0_0= ruleXImportSection1 ) )? ( (lv_root_1_0= ruleObjectElement ) ) ( ( (lv_contents_2_0= ruleType ) ) | ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:80:2: ( ( (lv_importSection_0_0= ruleXImportSection1 ) )? ( (lv_root_1_0= ruleObjectElement ) ) ( ( (lv_contents_2_0= ruleType ) ) | ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? ) )* )
			{
			dbg.location(80,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:80:2: ( ( (lv_importSection_0_0= ruleXImportSection1 ) )? ( (lv_root_1_0= ruleObjectElement ) ) ( ( (lv_contents_2_0= ruleType ) ) | ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:80:2: ( (lv_importSection_0_0= ruleXImportSection1 ) )? ( (lv_root_1_0= ruleObjectElement ) ) ( ( (lv_contents_2_0= ruleType ) ) | ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? ) )*
			{
			dbg.location(80,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:80:2: ( (lv_importSection_0_0= ruleXImportSection1 ) )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==75) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:81:3: (lv_importSection_0_0= ruleXImportSection1 )
					{
					dbg.location(81,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:81:3: (lv_importSection_0_0= ruleXImportSection1 )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:82:3: lv_importSection_0_0= ruleXImportSection1
					{
					dbg.location(82,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getDocumentAccess().getImportSectionXImportSection1ParserRuleCall_0_0()); 
						    }dbg.location(85,23);
					pushFollow(FOLLOW_ruleXImportSection1_in_ruleDocument131);
					lv_importSection_0_0=ruleXImportSection1();
					state._fsp--;
					if (state.failed) return current;dbg.location(85,45);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getDocumentRule());
						        }
					       		set(
					       			current, 
					       			"importSection",
					        		lv_importSection_0_0, 
					        		"XImportSection1");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(98,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:98:3: ( (lv_root_1_0= ruleObjectElement ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:99:3: (lv_root_1_0= ruleObjectElement )
			{
			dbg.location(99,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:99:3: (lv_root_1_0= ruleObjectElement )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:100:3: lv_root_1_0= ruleObjectElement
			{
			dbg.location(100,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getDocumentAccess().getRootObjectElementParserRuleCall_1_0()); 
				    }dbg.location(103,14);
			pushFollow(FOLLOW_ruleObjectElement_in_ruleDocument153);
			lv_root_1_0=ruleObjectElement();
			state._fsp--;
			if (state.failed) return current;dbg.location(103,34);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getDocumentRule());
				        }
			       		set(
			       			current, 
			       			"root",
			        		lv_root_1_0, 
			        		"ObjectElement");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(116,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:116:2: ( ( (lv_contents_2_0= ruleType ) ) | ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? ) )*
			try { dbg.enterSubRule(3);

			loop3:
			while (true) {
				int alt3=3;
				try { dbg.enterDecision(3, decisionCanBacktrack[3]);

				int LA3_0 = input.LA(1);
				if ( (LA3_0==56||LA3_0==61||(LA3_0 >= 65 && LA3_0 <= 66)||LA3_0==68||LA3_0==77||(LA3_0 >= 80 && LA3_0 <= 81)||LA3_0==83) ) {
					alt3=1;
				}
				else if ( (LA3_0==RULE_STRING||LA3_0==18||(LA3_0 >= 30 && LA3_0 <= 31)||(LA3_0 >= 34 && LA3_0 <= 35)||(LA3_0 >= 87 && LA3_0 <= 88)||LA3_0==93) ) {
					alt3=2;
				}

				} finally {dbg.exitDecision(3);}

				switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:116:3: ( (lv_contents_2_0= ruleType ) )
					{
					dbg.location(116,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:116:3: ( (lv_contents_2_0= ruleType ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:117:3: (lv_contents_2_0= ruleType )
					{
					dbg.location(117,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:117:3: (lv_contents_2_0= ruleType )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:118:3: lv_contents_2_0= ruleType
					{
					dbg.location(118,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getDocumentAccess().getContentsTypeParserRuleCall_2_0_0()); 
						    }dbg.location(121,18);
					pushFollow(FOLLOW_ruleType_in_ruleDocument175);
					lv_contents_2_0=ruleType();
					state._fsp--;
					if (state.failed) return current;dbg.location(121,29);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getDocumentRule());
						        }
					       		add(
					       			current, 
					       			"contents",
					        		lv_contents_2_0, 
					        		"Type");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:135:6: ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? )
					{
					dbg.location(135,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:135:6: ( ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )? )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:135:7: ( (lv_contents_3_0= ruleXExpressionInsideBlock ) ) (otherlv_4= ';' )?
					{
					dbg.location(135,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:135:7: ( (lv_contents_3_0= ruleXExpressionInsideBlock ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:136:3: (lv_contents_3_0= ruleXExpressionInsideBlock )
					{
					dbg.location(136,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:136:3: (lv_contents_3_0= ruleXExpressionInsideBlock )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:137:3: lv_contents_3_0= ruleXExpressionInsideBlock
					{
					dbg.location(137,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getDocumentAccess().getContentsXExpressionInsideBlockParserRuleCall_2_1_0_0()); 
						    }dbg.location(140,18);
					pushFollow(FOLLOW_ruleXExpressionInsideBlock_in_ruleDocument203);
					lv_contents_3_0=ruleXExpressionInsideBlock();
					state._fsp--;
					if (state.failed) return current;dbg.location(140,47);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getDocumentRule());
						        }
					       		add(
					       			current, 
					       			"contents",
					        		lv_contents_3_0, 
					        		"XExpressionInsideBlock");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(153,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:153:2: (otherlv_4= ';' )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==44) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:153:4: otherlv_4= ';'
							{
							dbg.location(153,13);
							otherlv_4=(Token)match(input,44,FOLLOW_44_in_ruleDocument216); if (state.failed) return current;dbg.location(154,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_4, grammarAccess.getDocumentAccess().getSemicolonKeyword_2_1_1());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}

					}
					break;

				default :
					break loop3;
				}
			}
			} finally {dbg.exitSubRule(3);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(158, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleDocument");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleDocument"



	// $ANTLR start "entryRuleElementContent"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:165:1: entryRuleElementContent returns [EObject current=null] :iv_ruleElementContent= ruleElementContent EOF ;
	public final EObject entryRuleElementContent() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleElementContent =null;

		 
				HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
			
		try { dbg.enterRule(getGrammarFileName(), "entryRuleElementContent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(165, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:169:2: (iv_ruleElementContent= ruleElementContent EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:170:2: iv_ruleElementContent= ruleElementContent EOF
			{
			dbg.location(170,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getElementContentRule()); }dbg.location(171,24);
			pushFollow(FOLLOW_ruleElementContent_in_entryRuleElementContent263);
			iv_ruleElementContent=ruleElementContent();
			state._fsp--;
			if (state.failed) return current;dbg.location(172,3);
			if ( state.backtracking==0 ) { current =iv_ruleElementContent; }dbg.location(173,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleElementContent273); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving

				myHiddenTokenState.restore();

		}
		dbg.location(174, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleElementContent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleElementContent"



	// $ANTLR start "ruleElementContent"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:180:1: ruleElementContent returns [EObject current=null] : (this_ObjectElement_0= ruleObjectElement |this_AttributeElement_1= ruleAttributeElement ) ;
	public final EObject ruleElementContent() throws RecognitionException {
		EObject current = null;


		EObject this_ObjectElement_0 =null;
		EObject this_AttributeElement_1 =null;

		 enterRule(); 
				HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleElementContent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(180, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:184:28: ( (this_ObjectElement_0= ruleObjectElement |this_AttributeElement_1= ruleAttributeElement ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:185:5: (this_ObjectElement_0= ruleObjectElement |this_AttributeElement_1= ruleAttributeElement )
			{
			dbg.location(185,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:185:5: (this_ObjectElement_0= ruleObjectElement |this_AttributeElement_1= ruleAttributeElement )
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==45) ) {
				int LA4_1 = input.LA(2);
				if ( (LA4_1==RULE_ID||LA4_1==51) ) {
					alt4=1;
				}
				else if ( (LA4_1==26) ) {
					int LA4_3 = input.LA(3);
					if ( (LA4_3==RULE_ID) ) {
						int LA4_4 = input.LA(4);
						if ( (LA4_4==37) ) {
							int LA4_5 = input.LA(5);
							if ( (LA4_5==RULE_ID) ) {
								int LA4_6 = input.LA(6);
								if ( (LA4_6==33||LA4_6==37||LA4_6==45||LA4_6==57) ) {
									alt4=1;
								}
								else if ( (LA4_6==27) ) {
									int LA4_7 = input.LA(7);
									if ( (LA4_7==51) ) {
										alt4=1;
									}
									else if ( (LA4_7==41||LA4_7==52) ) {
										alt4=2;
									}

									else {
										if (state.backtracking>0) {state.failed=true; return current;}
										int nvaeMark = input.mark();
										try {
											for (int nvaeConsume = 0; nvaeConsume < 7 - 1; nvaeConsume++) {
												input.consume();
											}
											NoViableAltException nvae =
												new NoViableAltException("", 4, 7, input);
											dbg.recognitionException(nvae);
											throw nvae;
										} finally {
											input.rewind(nvaeMark);
										}
									}

								}

								else {
									if (state.backtracking>0) {state.failed=true; return current;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 4, 6, input);
										dbg.recognitionException(nvae);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}

							else {
								if (state.backtracking>0) {state.failed=true; return current;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 4, 5, input);
									dbg.recognitionException(nvae);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}
						else if ( (LA4_4==27||LA4_4==33||LA4_4==45||LA4_4==57) ) {
							alt4=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return current;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 4, 4, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( ((LA4_3 >= 26 && LA4_3 <= 27)||LA4_3==51) ) {
						alt4=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 4, 3, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 4, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 4, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:186:5: this_ObjectElement_0= ruleObjectElement
					{
					dbg.location(186,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getElementContentAccess().getObjectElementParserRuleCall_0()); 
					    }dbg.location(189,25);
					pushFollow(FOLLOW_ruleObjectElement_in_ruleElementContent324);
					this_ObjectElement_0=ruleObjectElement();
					state._fsp--;
					if (state.failed) return current;dbg.location(190,5);
					if ( state.backtracking==0 ) { 
					        current = this_ObjectElement_0; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:196:5: this_AttributeElement_1= ruleAttributeElement
					{
					dbg.location(196,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getElementContentAccess().getAttributeElementParserRuleCall_1()); 
					    }dbg.location(199,28);
					pushFollow(FOLLOW_ruleAttributeElement_in_ruleElementContent351);
					this_AttributeElement_1=ruleAttributeElement();
					state._fsp--;
					if (state.failed) return current;dbg.location(200,5);
					if ( state.backtracking==0 ) { 
					        current = this_AttributeElement_1; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving

				myHiddenTokenState.restore();

		}
		dbg.location(205, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleElementContent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleElementContent"



	// $ANTLR start "entryRuleObjectElement"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:215:1: entryRuleObjectElement returns [EObject current=null] :iv_ruleObjectElement= ruleObjectElement EOF ;
	public final EObject entryRuleObjectElement() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleObjectElement =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleObjectElement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(215, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:216:2: (iv_ruleObjectElement= ruleObjectElement EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:217:2: iv_ruleObjectElement= ruleObjectElement EOF
			{
			dbg.location(217,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getObjectElementRule()); }dbg.location(218,23);
			pushFollow(FOLLOW_ruleObjectElement_in_entryRuleObjectElement390);
			iv_ruleObjectElement=ruleObjectElement();
			state._fsp--;
			if (state.failed) return current;dbg.location(219,3);
			if ( state.backtracking==0 ) { current =iv_ruleObjectElement; }dbg.location(220,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleObjectElement400); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(221, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleObjectElement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleObjectElement"



	// $ANTLR start "ruleObjectElement"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:224:1: ruleObjectElement returns [EObject current=null] : (otherlv_0= '<' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_properties_2_0= ruleAbstractProperty ) )* ( ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' ) ) ) ;
	public final EObject ruleObjectElement() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_3=null;
		Token otherlv_5=null;
		Token otherlv_7=null;
		Token otherlv_8=null;
		EObject lv_type_1_0 =null;
		EObject lv_properties_2_0 =null;
		EObject lv_contents_4_0 =null;
		EObject lv_close_6_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleObjectElement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(224, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:227:28: ( (otherlv_0= '<' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_properties_2_0= ruleAbstractProperty ) )* ( ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:228:3: (otherlv_0= '<' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_properties_2_0= ruleAbstractProperty ) )* ( ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' ) ) )
			{
			dbg.location(228,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:228:3: (otherlv_0= '<' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_properties_2_0= ruleAbstractProperty ) )* ( ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:228:3: otherlv_0= '<' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_properties_2_0= ruleAbstractProperty ) )* ( ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' ) )
			{
			dbg.location(228,12);
			otherlv_0=(Token)match(input,45,FOLLOW_45_in_ruleObjectElement437); if (state.failed) return current;dbg.location(229,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getObjectElementAccess().getLessThanSignKeyword_0());
			    }dbg.location(232,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:232:3: ( (lv_type_1_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:233:3: (lv_type_1_0= ruleJvmTypeReference )
			{
			dbg.location(233,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:233:3: (lv_type_1_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:234:3: lv_type_1_0= ruleJvmTypeReference
			{
			dbg.location(234,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getObjectElementAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
				    }dbg.location(237,14);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleObjectElement458);
			lv_type_1_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(237,37);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getObjectElementRule());
				        }
			       		set(
			       			current, 
			       			"type",
			        		lv_type_1_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(250,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:250:2: ( (lv_properties_2_0= ruleAbstractProperty ) )*
			try { dbg.enterSubRule(5);

			loop5:
			while (true) {
				int alt5=2;
				try { dbg.enterDecision(5, decisionCanBacktrack[5]);

				int LA5_0 = input.LA(1);
				if ( (LA5_0==RULE_ID||LA5_0==26) ) {
					alt5=1;
				}

				} finally {dbg.exitDecision(5);}

				switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:251:3: (lv_properties_2_0= ruleAbstractProperty )
					{
					dbg.location(251,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:251:3: (lv_properties_2_0= ruleAbstractProperty )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:252:3: lv_properties_2_0= ruleAbstractProperty
					{
					dbg.location(252,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getObjectElementAccess().getPropertiesAbstractPropertyParserRuleCall_2_0()); 
						    }dbg.location(255,20);
					pushFollow(FOLLOW_ruleAbstractProperty_in_ruleObjectElement479);
					lv_properties_2_0=ruleAbstractProperty();
					state._fsp--;
					if (state.failed) return current;dbg.location(255,43);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getObjectElementRule());
						        }
					       		add(
					       			current, 
					       			"properties",
					        		lv_properties_2_0, 
					        		"AbstractProperty");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop5;
				}
			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(268,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:3: ( ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:4: ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )=> ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' )
			{
			dbg.location(281,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:281:5: ( (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' ) |otherlv_8= '/>' )
			int alt7=2;
			try { dbg.enterSubRule(7);
			try { dbg.enterDecision(7, decisionCanBacktrack[7]);

			int LA7_0 = input.LA(1);
			if ( (LA7_0==52) ) {
				alt7=1;
			}
			else if ( (LA7_0==41) ) {
				alt7=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 7, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(7);}

			switch (alt7) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:281:6: (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' )
					{
					dbg.location(281,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:281:6: (otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:281:8: otherlv_3= '>' ( (lv_contents_4_0= ruleElementContent ) )* otherlv_5= '</' ( (lv_close_6_0= ruleJvmTypeReference ) ) otherlv_7= '>'
					{
					dbg.location(281,17);
					otherlv_3=(Token)match(input,52,FOLLOW_52_in_ruleObjectElement543); if (state.failed) return current;dbg.location(282,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_3, grammarAccess.getObjectElementAccess().getGreaterThanSignKeyword_3_0_0_0());
					    }dbg.location(285,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:285:3: ( (lv_contents_4_0= ruleElementContent ) )*
					try { dbg.enterSubRule(6);

					loop6:
					while (true) {
						int alt6=2;
						try { dbg.enterDecision(6, decisionCanBacktrack[6]);

						int LA6_0 = input.LA(1);
						if ( (LA6_0==45) ) {
							alt6=1;
						}

						} finally {dbg.exitDecision(6);}

						switch (alt6) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:286:3: (lv_contents_4_0= ruleElementContent )
							{
							dbg.location(286,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:286:3: (lv_contents_4_0= ruleElementContent )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:287:3: lv_contents_4_0= ruleElementContent
							{
							dbg.location(287,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getObjectElementAccess().getContentsElementContentParserRuleCall_3_0_0_1_0()); 
								    }dbg.location(290,18);
							pushFollow(FOLLOW_ruleElementContent_in_ruleObjectElement564);
							lv_contents_4_0=ruleElementContent();
							state._fsp--;
							if (state.failed) return current;dbg.location(290,39);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getObjectElementRule());
								        }
							       		add(
							       			current, 
							       			"contents",
							        		lv_contents_4_0, 
							        		"ElementContent");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop6;
						}
					}
					} finally {dbg.exitSubRule(6);}
					dbg.location(303,13);
					otherlv_5=(Token)match(input,46,FOLLOW_46_in_ruleObjectElement577); if (state.failed) return current;dbg.location(304,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_5, grammarAccess.getObjectElementAccess().getLessThanSignSolidusKeyword_3_0_0_2());
					    }dbg.location(307,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:307:3: ( (lv_close_6_0= ruleJvmTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:308:3: (lv_close_6_0= ruleJvmTypeReference )
					{
					dbg.location(308,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:308:3: (lv_close_6_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:309:3: lv_close_6_0= ruleJvmTypeReference
					{
					dbg.location(309,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getObjectElementAccess().getCloseJvmTypeReferenceParserRuleCall_3_0_0_3_0()); 
						    }dbg.location(312,15);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleObjectElement598);
					lv_close_6_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(312,38);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getObjectElementRule());
						        }
					       		set(
					       			current, 
					       			"close",
					        		lv_close_6_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(325,12);
					otherlv_7=(Token)match(input,52,FOLLOW_52_in_ruleObjectElement610); if (state.failed) return current;dbg.location(326,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_7, grammarAccess.getObjectElementAccess().getGreaterThanSignKeyword_3_0_0_4());
					    }
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:330:7: otherlv_8= '/>'
					{
					dbg.location(330,16);
					otherlv_8=(Token)match(input,41,FOLLOW_41_in_ruleObjectElement629); if (state.failed) return current;dbg.location(331,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_8, grammarAccess.getObjectElementAccess().getSolidusGreaterThanSignKeyword_3_0_1());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(7);}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(335, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleObjectElement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleObjectElement"



	// $ANTLR start "entryRuleAttributeElement"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:342:1: entryRuleAttributeElement returns [EObject current=null] :iv_ruleAttributeElement= ruleAttributeElement EOF ;
	public final EObject entryRuleAttributeElement() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleAttributeElement =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleAttributeElement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(342, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:343:2: (iv_ruleAttributeElement= ruleAttributeElement EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:344:2: iv_ruleAttributeElement= ruleAttributeElement EOF
			{
			dbg.location(344,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getAttributeElementRule()); }dbg.location(345,26);
			pushFollow(FOLLOW_ruleAttributeElement_in_entryRuleAttributeElement667);
			iv_ruleAttributeElement=ruleAttributeElement();
			state._fsp--;
			if (state.failed) return current;dbg.location(346,3);
			if ( state.backtracking==0 ) { current =iv_ruleAttributeElement; }dbg.location(347,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleAttributeElement677); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(348, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleAttributeElement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleAttributeElement"



	// $ANTLR start "ruleAttributeElement"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:351:1: ruleAttributeElement returns [EObject current=null] : (otherlv_0= '<' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= '.' ( (otherlv_4= RULE_ID ) ) otherlv_5= ')' ( ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' ) ) ) ;
	public final EObject ruleAttributeElement() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		Token otherlv_2=null;
		Token otherlv_3=null;
		Token otherlv_4=null;
		Token otherlv_5=null;
		Token otherlv_6=null;
		Token otherlv_8=null;
		Token otherlv_9=null;
		Token otherlv_10=null;
		Token otherlv_11=null;
		Token otherlv_12=null;
		Token otherlv_13=null;
		Token otherlv_14=null;
		Token otherlv_15=null;
		EObject lv_contents_7_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleAttributeElement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(351, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:354:28: ( (otherlv_0= '<' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= '.' ( (otherlv_4= RULE_ID ) ) otherlv_5= ')' ( ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:355:3: (otherlv_0= '<' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= '.' ( (otherlv_4= RULE_ID ) ) otherlv_5= ')' ( ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' ) ) )
			{
			dbg.location(355,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:355:3: (otherlv_0= '<' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= '.' ( (otherlv_4= RULE_ID ) ) otherlv_5= ')' ( ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:355:3: otherlv_0= '<' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= '.' ( (otherlv_4= RULE_ID ) ) otherlv_5= ')' ( ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' ) )
			{
			dbg.location(355,12);
			otherlv_0=(Token)match(input,45,FOLLOW_45_in_ruleAttributeElement714); if (state.failed) return current;dbg.location(356,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getAttributeElementAccess().getLessThanSignKeyword_0());
			    }dbg.location(359,11);
			otherlv_1=(Token)match(input,26,FOLLOW_26_in_ruleAttributeElement726); if (state.failed) return current;dbg.location(360,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getAttributeElementAccess().getLeftParenthesisKeyword_1());
			    }dbg.location(363,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:363:3: ( (otherlv_2= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:364:3: (otherlv_2= RULE_ID )
			{
			dbg.location(364,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:364:3: (otherlv_2= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:365:3: otherlv_2= RULE_ID
			{
			dbg.location(365,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getAttributeElementRule());
				        }
			        }dbg.location(370,11);
			otherlv_2=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAttributeElement746); if (state.failed) return current;dbg.location(371,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_2, grammarAccess.getAttributeElementAccess().getTypeJvmTypeCrossReference_2_0()); 
				}
			}

			}
			dbg.location(376,12);
			otherlv_3=(Token)match(input,37,FOLLOW_37_in_ruleAttributeElement758); if (state.failed) return current;dbg.location(377,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_3, grammarAccess.getAttributeElementAccess().getFullStopKeyword_3());
			    }dbg.location(380,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:380:3: ( (otherlv_4= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:381:3: (otherlv_4= RULE_ID )
			{
			dbg.location(381,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:381:3: (otherlv_4= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:382:3: otherlv_4= RULE_ID
			{
			dbg.location(382,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getAttributeElementRule());
				        }
			        }dbg.location(387,11);
			otherlv_4=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAttributeElement778); if (state.failed) return current;dbg.location(388,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_4, grammarAccess.getAttributeElementAccess().getAttributeJvmFieldCrossReference_4_0()); 
				}
			}

			}
			dbg.location(393,12);
			otherlv_5=(Token)match(input,27,FOLLOW_27_in_ruleAttributeElement790); if (state.failed) return current;dbg.location(394,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_5, grammarAccess.getAttributeElementAccess().getRightParenthesisKeyword_5());
			    }dbg.location(397,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:397:2: ( ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:397:2: ( ( ( ( '>' ( ( ruleElementContent ) )* '</' '(' ( ( RULE_ID ) ) '.' ( ( RULE_ID ) ) ) ')' '>' ) | '/>' ) )=> ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' )
			{
			dbg.location(419,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:419:5: ( ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' ) |otherlv_15= '/>' )
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==52) ) {
				alt9=1;
			}
			else if ( (LA9_0==41) ) {
				alt9=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 9, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:419:6: ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' )
					{
					dbg.location(419,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:419:6: ( (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:419:7: (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) ) otherlv_13= ')' otherlv_14= '>'
					{
					dbg.location(419,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:419:7: (otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:419:9: otherlv_6= '>' ( (lv_contents_7_0= ruleElementContent ) )* otherlv_8= '</' otherlv_9= '(' ( (otherlv_10= RULE_ID ) ) otherlv_11= '.' ( (otherlv_12= RULE_ID ) )
					{
					dbg.location(419,18);
					otherlv_6=(Token)match(input,52,FOLLOW_52_in_ruleAttributeElement881); if (state.failed) return current;dbg.location(420,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_6, grammarAccess.getAttributeElementAccess().getGreaterThanSignKeyword_6_0_0_0_0());
					    }dbg.location(423,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:423:3: ( (lv_contents_7_0= ruleElementContent ) )*
					try { dbg.enterSubRule(8);

					loop8:
					while (true) {
						int alt8=2;
						try { dbg.enterDecision(8, decisionCanBacktrack[8]);

						int LA8_0 = input.LA(1);
						if ( (LA8_0==45) ) {
							alt8=1;
						}

						} finally {dbg.exitDecision(8);}

						switch (alt8) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:424:3: (lv_contents_7_0= ruleElementContent )
							{
							dbg.location(424,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:424:3: (lv_contents_7_0= ruleElementContent )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:425:3: lv_contents_7_0= ruleElementContent
							{
							dbg.location(425,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getAttributeElementAccess().getContentsElementContentParserRuleCall_6_0_0_0_1_0()); 
								    }dbg.location(428,18);
							pushFollow(FOLLOW_ruleElementContent_in_ruleAttributeElement902);
							lv_contents_7_0=ruleElementContent();
							state._fsp--;
							if (state.failed) return current;dbg.location(428,39);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getAttributeElementRule());
								        }
							       		add(
							       			current, 
							       			"contents",
							        		lv_contents_7_0, 
							        		"ElementContent");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop8;
						}
					}
					} finally {dbg.exitSubRule(8);}
					dbg.location(441,13);
					otherlv_8=(Token)match(input,46,FOLLOW_46_in_ruleAttributeElement915); if (state.failed) return current;dbg.location(442,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_8, grammarAccess.getAttributeElementAccess().getLessThanSignSolidusKeyword_6_0_0_0_2());
					    }dbg.location(445,11);
					otherlv_9=(Token)match(input,26,FOLLOW_26_in_ruleAttributeElement927); if (state.failed) return current;dbg.location(446,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_9, grammarAccess.getAttributeElementAccess().getLeftParenthesisKeyword_6_0_0_0_3());
					    }dbg.location(449,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:449:3: ( (otherlv_10= RULE_ID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:450:3: (otherlv_10= RULE_ID )
					{
					dbg.location(450,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:450:3: (otherlv_10= RULE_ID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:451:3: otherlv_10= RULE_ID
					{
					dbg.location(451,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getAttributeElementRule());
						        }
					        }dbg.location(456,12);
					otherlv_10=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAttributeElement947); if (state.failed) return current;dbg.location(457,2);
					if ( state.backtracking==0 ) {
							newLeafNode(otherlv_10, grammarAccess.getAttributeElementAccess().getCloseJvmTypeCrossReference_6_0_0_0_4_0()); 
						}
					}

					}
					dbg.location(462,13);
					otherlv_11=(Token)match(input,37,FOLLOW_37_in_ruleAttributeElement959); if (state.failed) return current;dbg.location(463,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_11, grammarAccess.getAttributeElementAccess().getFullStopKeyword_6_0_0_0_5());
					    }dbg.location(466,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:466:3: ( (otherlv_12= RULE_ID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:467:3: (otherlv_12= RULE_ID )
					{
					dbg.location(467,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:467:3: (otherlv_12= RULE_ID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:468:3: otherlv_12= RULE_ID
					{
					dbg.location(468,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getAttributeElementRule());
						        }
					        }dbg.location(473,12);
					otherlv_12=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAttributeElement979); if (state.failed) return current;dbg.location(474,2);
					if ( state.backtracking==0 ) {
							newLeafNode(otherlv_12, grammarAccess.getAttributeElementAccess().getCloseAttributeJvmFieldCrossReference_6_0_0_0_6_0()); 
						}
					}

					}

					}
					dbg.location(479,14);
					otherlv_13=(Token)match(input,27,FOLLOW_27_in_ruleAttributeElement992); if (state.failed) return current;dbg.location(480,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_13, grammarAccess.getAttributeElementAccess().getRightParenthesisKeyword_6_0_0_1());
					    }dbg.location(483,12);
					otherlv_14=(Token)match(input,52,FOLLOW_52_in_ruleAttributeElement1004); if (state.failed) return current;dbg.location(484,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_14, grammarAccess.getAttributeElementAccess().getGreaterThanSignKeyword_6_0_0_2());
					    }
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:488:7: otherlv_15= '/>'
					{
					dbg.location(488,17);
					otherlv_15=(Token)match(input,41,FOLLOW_41_in_ruleAttributeElement1023); if (state.failed) return current;dbg.location(489,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_15, grammarAccess.getAttributeElementAccess().getSolidusGreaterThanSignKeyword_6_0_1());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(493, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleAttributeElement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleAttributeElement"



	// $ANTLR start "entryRuleAbstractProperty"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:500:1: entryRuleAbstractProperty returns [EObject current=null] :iv_ruleAbstractProperty= ruleAbstractProperty EOF ;
	public final EObject entryRuleAbstractProperty() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleAbstractProperty =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleAbstractProperty");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(500, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:501:2: (iv_ruleAbstractProperty= ruleAbstractProperty EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:502:2: iv_ruleAbstractProperty= ruleAbstractProperty EOF
			{
			dbg.location(502,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getAbstractPropertyRule()); }dbg.location(503,26);
			pushFollow(FOLLOW_ruleAbstractProperty_in_entryRuleAbstractProperty1061);
			iv_ruleAbstractProperty=ruleAbstractProperty();
			state._fsp--;
			if (state.failed) return current;dbg.location(504,3);
			if ( state.backtracking==0 ) { current =iv_ruleAbstractProperty; }dbg.location(505,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractProperty1071); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(506, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleAbstractProperty");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleAbstractProperty"



	// $ANTLR start "ruleAbstractProperty"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:509:1: ruleAbstractProperty returns [EObject current=null] : (this_GeneralProperty_0= ruleGeneralProperty |this_AttachProperty_1= ruleAttachProperty ) ;
	public final EObject ruleAbstractProperty() throws RecognitionException {
		EObject current = null;


		EObject this_GeneralProperty_0 =null;
		EObject this_AttachProperty_1 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleAbstractProperty");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(509, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:512:28: ( (this_GeneralProperty_0= ruleGeneralProperty |this_AttachProperty_1= ruleAttachProperty ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:513:5: (this_GeneralProperty_0= ruleGeneralProperty |this_AttachProperty_1= ruleAttachProperty )
			{
			dbg.location(513,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:513:5: (this_GeneralProperty_0= ruleGeneralProperty |this_AttachProperty_1= ruleAttachProperty )
			int alt10=2;
			try { dbg.enterSubRule(10);
			try { dbg.enterDecision(10, decisionCanBacktrack[10]);

			int LA10_0 = input.LA(1);
			if ( (LA10_0==RULE_ID) ) {
				alt10=1;
			}
			else if ( (LA10_0==26) ) {
				alt10=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 10, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(10);}

			switch (alt10) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:514:5: this_GeneralProperty_0= ruleGeneralProperty
					{
					dbg.location(514,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getAbstractPropertyAccess().getGeneralPropertyParserRuleCall_0()); 
					    }dbg.location(517,27);
					pushFollow(FOLLOW_ruleGeneralProperty_in_ruleAbstractProperty1118);
					this_GeneralProperty_0=ruleGeneralProperty();
					state._fsp--;
					if (state.failed) return current;dbg.location(518,5);
					if ( state.backtracking==0 ) { 
					        current = this_GeneralProperty_0; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:524:5: this_AttachProperty_1= ruleAttachProperty
					{
					dbg.location(524,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getAbstractPropertyAccess().getAttachPropertyParserRuleCall_1()); 
					    }dbg.location(527,26);
					pushFollow(FOLLOW_ruleAttachProperty_in_ruleAbstractProperty1145);
					this_AttachProperty_1=ruleAttachProperty();
					state._fsp--;
					if (state.failed) return current;dbg.location(528,5);
					if ( state.backtracking==0 ) { 
					        current = this_AttachProperty_1; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(10);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(533, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleAbstractProperty");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleAbstractProperty"



	// $ANTLR start "entryRuleAttachProperty"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:540:1: entryRuleAttachProperty returns [EObject current=null] :iv_ruleAttachProperty= ruleAttachProperty EOF ;
	public final EObject entryRuleAttachProperty() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleAttachProperty =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleAttachProperty");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(540, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:541:2: (iv_ruleAttachProperty= ruleAttachProperty EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:542:2: iv_ruleAttachProperty= ruleAttachProperty EOF
			{
			dbg.location(542,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getAttachPropertyRule()); }dbg.location(543,24);
			pushFollow(FOLLOW_ruleAttachProperty_in_entryRuleAttachProperty1180);
			iv_ruleAttachProperty=ruleAttachProperty();
			state._fsp--;
			if (state.failed) return current;dbg.location(544,3);
			if ( state.backtracking==0 ) { current =iv_ruleAttachProperty; }dbg.location(545,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleAttachProperty1190); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(546, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleAttachProperty");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleAttachProperty"



	// $ANTLR start "ruleAttachProperty"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:549:1: ruleAttachProperty returns [EObject current=null] : (otherlv_0= '(' ( (otherlv_1= RULE_ID ) ) otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) otherlv_4= ')' otherlv_5= '=' ( (lv_value_6_0= ruleXPrimaryExpression ) ) ) ;
	public final EObject ruleAttachProperty() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		Token otherlv_2=null;
		Token otherlv_3=null;
		Token otherlv_4=null;
		Token otherlv_5=null;
		EObject lv_value_6_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleAttachProperty");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(549, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:552:28: ( (otherlv_0= '(' ( (otherlv_1= RULE_ID ) ) otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) otherlv_4= ')' otherlv_5= '=' ( (lv_value_6_0= ruleXPrimaryExpression ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:553:3: (otherlv_0= '(' ( (otherlv_1= RULE_ID ) ) otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) otherlv_4= ')' otherlv_5= '=' ( (lv_value_6_0= ruleXPrimaryExpression ) ) )
			{
			dbg.location(553,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:553:3: (otherlv_0= '(' ( (otherlv_1= RULE_ID ) ) otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) otherlv_4= ')' otherlv_5= '=' ( (lv_value_6_0= ruleXPrimaryExpression ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:553:3: otherlv_0= '(' ( (otherlv_1= RULE_ID ) ) otherlv_2= '.' ( (otherlv_3= RULE_ID ) ) otherlv_4= ')' otherlv_5= '=' ( (lv_value_6_0= ruleXPrimaryExpression ) )
			{
			dbg.location(553,12);
			otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleAttachProperty1227); if (state.failed) return current;dbg.location(554,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getAttachPropertyAccess().getLeftParenthesisKeyword_0());
			    }dbg.location(557,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:557:3: ( (otherlv_1= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:558:3: (otherlv_1= RULE_ID )
			{
			dbg.location(558,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:558:3: (otherlv_1= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:559:3: otherlv_1= RULE_ID
			{
			dbg.location(559,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getAttachPropertyRule());
				        }
			        }dbg.location(564,11);
			otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAttachProperty1247); if (state.failed) return current;dbg.location(565,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_1, grammarAccess.getAttachPropertyAccess().getTypeJvmTypeCrossReference_1_0()); 
				}
			}

			}
			dbg.location(570,12);
			otherlv_2=(Token)match(input,37,FOLLOW_37_in_ruleAttachProperty1259); if (state.failed) return current;dbg.location(571,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_2, grammarAccess.getAttachPropertyAccess().getFullStopKeyword_2());
			    }dbg.location(574,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:574:3: ( (otherlv_3= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:575:3: (otherlv_3= RULE_ID )
			{
			dbg.location(575,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:575:3: (otherlv_3= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:576:3: otherlv_3= RULE_ID
			{
			dbg.location(576,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getAttachPropertyRule());
				        }
			        }dbg.location(581,11);
			otherlv_3=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAttachProperty1279); if (state.failed) return current;dbg.location(582,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_3, grammarAccess.getAttachPropertyAccess().getPropertyJvmFieldCrossReference_3_0()); 
				}
			}

			}
			dbg.location(587,12);
			otherlv_4=(Token)match(input,27,FOLLOW_27_in_ruleAttachProperty1291); if (state.failed) return current;dbg.location(588,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_4, grammarAccess.getAttachPropertyAccess().getRightParenthesisKeyword_4());
			    }dbg.location(591,11);
			otherlv_5=(Token)match(input,48,FOLLOW_48_in_ruleAttachProperty1303); if (state.failed) return current;dbg.location(592,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_5, grammarAccess.getAttachPropertyAccess().getEqualsSignKeyword_5());
			    }dbg.location(595,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:595:3: ( (lv_value_6_0= ruleXPrimaryExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:596:3: (lv_value_6_0= ruleXPrimaryExpression )
			{
			dbg.location(596,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:596:3: (lv_value_6_0= ruleXPrimaryExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:597:3: lv_value_6_0= ruleXPrimaryExpression
			{
			dbg.location(597,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getAttachPropertyAccess().getValueXPrimaryExpressionParserRuleCall_6_0()); 
				    }dbg.location(600,15);
			pushFollow(FOLLOW_ruleXPrimaryExpression_in_ruleAttachProperty1324);
			lv_value_6_0=ruleXPrimaryExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(600,40);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getAttachPropertyRule());
				        }
			       		set(
			       			current, 
			       			"value",
			        		lv_value_6_0, 
			        		"XPrimaryExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(614, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleAttachProperty");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleAttachProperty"



	// $ANTLR start "entryRuleMarkupExtenson"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:621:1: entryRuleMarkupExtenson returns [EObject current=null] :iv_ruleMarkupExtenson= ruleMarkupExtenson EOF ;
	public final EObject entryRuleMarkupExtenson() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleMarkupExtenson =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleMarkupExtenson");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(621, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:622:2: (iv_ruleMarkupExtenson= ruleMarkupExtenson EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:623:2: iv_ruleMarkupExtenson= ruleMarkupExtenson EOF
			{
			dbg.location(623,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getMarkupExtensonRule()); }dbg.location(624,24);
			pushFollow(FOLLOW_ruleMarkupExtenson_in_entryRuleMarkupExtenson1360);
			iv_ruleMarkupExtenson=ruleMarkupExtenson();
			state._fsp--;
			if (state.failed) return current;dbg.location(625,3);
			if ( state.backtracking==0 ) { current =iv_ruleMarkupExtenson; }dbg.location(626,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleMarkupExtenson1370); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(627, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleMarkupExtenson");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleMarkupExtenson"



	// $ANTLR start "ruleMarkupExtenson"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:630:1: ruleMarkupExtenson returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_properties_3_0= ruleAbstractProperty ) )* otherlv_4= '}' ) ;
	public final EObject ruleMarkupExtenson() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_4=null;
		EObject lv_type_2_0 =null;
		EObject lv_properties_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleMarkupExtenson");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(630, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:633:28: ( ( () otherlv_1= '{' ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_properties_3_0= ruleAbstractProperty ) )* otherlv_4= '}' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:634:2: ( () otherlv_1= '{' ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_properties_3_0= ruleAbstractProperty ) )* otherlv_4= '}' )
			{
			dbg.location(634,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:634:2: ( () otherlv_1= '{' ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_properties_3_0= ruleAbstractProperty ) )* otherlv_4= '}' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:634:2: () otherlv_1= '{' ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_properties_3_0= ruleAbstractProperty ) )* otherlv_4= '}'
			{
			dbg.location(634,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:634:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:635:5: 
			{
			dbg.location(635,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getMarkupExtensonAccess().getMarkupExtensonAction_0(),
			            current);
			    }
			}
			dbg.location(640,12);
			otherlv_1=(Token)match(input,88,FOLLOW_88_in_ruleMarkupExtenson1416); if (state.failed) return current;dbg.location(641,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getMarkupExtensonAccess().getLeftCurlyBracketKeyword_1());
			    }dbg.location(644,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:644:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:645:3: (lv_type_2_0= ruleJvmTypeReference )
			{
			dbg.location(645,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:645:3: (lv_type_2_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:646:3: lv_type_2_0= ruleJvmTypeReference
			{
			dbg.location(646,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getMarkupExtensonAccess().getTypeJvmTypeReferenceParserRuleCall_2_0()); 
				    }dbg.location(649,14);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleMarkupExtenson1437);
			lv_type_2_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(649,37);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getMarkupExtensonRule());
				        }
			       		set(
			       			current, 
			       			"type",
			        		lv_type_2_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(662,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:662:2: ( (lv_properties_3_0= ruleAbstractProperty ) )*
			try { dbg.enterSubRule(11);

			loop11:
			while (true) {
				int alt11=2;
				try { dbg.enterDecision(11, decisionCanBacktrack[11]);

				int LA11_0 = input.LA(1);
				if ( (LA11_0==RULE_ID||LA11_0==26) ) {
					alt11=1;
				}

				} finally {dbg.exitDecision(11);}

				switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:663:3: (lv_properties_3_0= ruleAbstractProperty )
					{
					dbg.location(663,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:663:3: (lv_properties_3_0= ruleAbstractProperty )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:664:3: lv_properties_3_0= ruleAbstractProperty
					{
					dbg.location(664,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getMarkupExtensonAccess().getPropertiesAbstractPropertyParserRuleCall_3_0()); 
						    }dbg.location(667,20);
					pushFollow(FOLLOW_ruleAbstractProperty_in_ruleMarkupExtenson1458);
					lv_properties_3_0=ruleAbstractProperty();
					state._fsp--;
					if (state.failed) return current;dbg.location(667,43);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getMarkupExtensonRule());
						        }
					       		add(
					       			current, 
					       			"properties",
					        		lv_properties_3_0, 
					        		"AbstractProperty");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop11;
				}
			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(680,13);
			otherlv_4=(Token)match(input,92,FOLLOW_92_in_ruleMarkupExtenson1471); if (state.failed) return current;dbg.location(681,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_4, grammarAccess.getMarkupExtensonAccess().getRightCurlyBracketKeyword_4());
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(685, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleMarkupExtenson");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleMarkupExtenson"



	// $ANTLR start "entryRuleGeneralProperty"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:692:1: entryRuleGeneralProperty returns [EObject current=null] :iv_ruleGeneralProperty= ruleGeneralProperty EOF ;
	public final EObject entryRuleGeneralProperty() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleGeneralProperty =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleGeneralProperty");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(692, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:693:2: (iv_ruleGeneralProperty= ruleGeneralProperty EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:694:2: iv_ruleGeneralProperty= ruleGeneralProperty EOF
			{
			dbg.location(694,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getGeneralPropertyRule()); }dbg.location(695,25);
			pushFollow(FOLLOW_ruleGeneralProperty_in_entryRuleGeneralProperty1507);
			iv_ruleGeneralProperty=ruleGeneralProperty();
			state._fsp--;
			if (state.failed) return current;dbg.location(696,3);
			if ( state.backtracking==0 ) { current =iv_ruleGeneralProperty; }dbg.location(697,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleGeneralProperty1517); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(698, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleGeneralProperty");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleGeneralProperty"



	// $ANTLR start "ruleGeneralProperty"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:701:1: ruleGeneralProperty returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleXPrimaryExpression ) ) ) ;
	public final EObject ruleGeneralProperty() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		EObject lv_value_2_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleGeneralProperty");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(701, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:704:28: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleXPrimaryExpression ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:705:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleXPrimaryExpression ) ) )
			{
			dbg.location(705,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:705:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleXPrimaryExpression ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:705:2: ( (otherlv_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleXPrimaryExpression ) )
			{
			dbg.location(705,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:705:2: ( (otherlv_0= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:706:3: (otherlv_0= RULE_ID )
			{
			dbg.location(706,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:706:3: (otherlv_0= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:707:3: otherlv_0= RULE_ID
			{
			dbg.location(707,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getGeneralPropertyRule());
				        }
			        }dbg.location(712,11);
			otherlv_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleGeneralProperty1562); if (state.failed) return current;dbg.location(713,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_0, grammarAccess.getGeneralPropertyAccess().getPropertyJvmFieldCrossReference_0_0()); 
				}
			}

			}
			dbg.location(718,12);
			otherlv_1=(Token)match(input,48,FOLLOW_48_in_ruleGeneralProperty1574); if (state.failed) return current;dbg.location(719,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getGeneralPropertyAccess().getEqualsSignKeyword_1());
			    }dbg.location(722,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:722:3: ( (lv_value_2_0= ruleXPrimaryExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:723:3: (lv_value_2_0= ruleXPrimaryExpression )
			{
			dbg.location(723,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:723:3: (lv_value_2_0= ruleXPrimaryExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:724:3: lv_value_2_0= ruleXPrimaryExpression
			{
			dbg.location(724,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getGeneralPropertyAccess().getValueXPrimaryExpressionParserRuleCall_2_0()); 
				    }dbg.location(727,15);
			pushFollow(FOLLOW_ruleXPrimaryExpression_in_ruleGeneralProperty1595);
			lv_value_2_0=ruleXPrimaryExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(727,40);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getGeneralPropertyRule());
				        }
			       		set(
			       			current, 
			       			"value",
			        		lv_value_2_0, 
			        		"XPrimaryExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(741, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleGeneralProperty");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleGeneralProperty"



	// $ANTLR start "entryRuleXPrimaryExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:748:1: entryRuleXPrimaryExpression returns [EObject current=null] :iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
	public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXPrimaryExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXPrimaryExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(748, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:749:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:750:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
			{
			dbg.location(750,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }dbg.location(751,28);
			pushFollow(FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression1631);
			iv_ruleXPrimaryExpression=ruleXPrimaryExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(752,3);
			if ( state.backtracking==0 ) { current =iv_ruleXPrimaryExpression; }dbg.location(753,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXPrimaryExpression1641); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(754, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXPrimaryExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXPrimaryExpression"



	// $ANTLR start "ruleXPrimaryExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:757:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XStringLiteral_0= ruleXStringLiteral |this_MarkupExtenson_1= ruleMarkupExtenson ) ;
	public final EObject ruleXPrimaryExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XStringLiteral_0 =null;
		EObject this_MarkupExtenson_1 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXPrimaryExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(757, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:760:28: ( (this_XStringLiteral_0= ruleXStringLiteral |this_MarkupExtenson_1= ruleMarkupExtenson ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:761:5: (this_XStringLiteral_0= ruleXStringLiteral |this_MarkupExtenson_1= ruleMarkupExtenson )
			{
			dbg.location(761,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:761:5: (this_XStringLiteral_0= ruleXStringLiteral |this_MarkupExtenson_1= ruleMarkupExtenson )
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==RULE_STRING) ) {
				alt12=1;
			}
			else if ( (LA12_0==88) ) {
				alt12=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 12, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:762:5: this_XStringLiteral_0= ruleXStringLiteral
					{
					dbg.location(762,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXStringLiteralParserRuleCall_0()); 
					    }dbg.location(765,26);
					pushFollow(FOLLOW_ruleXStringLiteral_in_ruleXPrimaryExpression1688);
					this_XStringLiteral_0=ruleXStringLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(766,5);
					if ( state.backtracking==0 ) { 
					        current = this_XStringLiteral_0; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:772:5: this_MarkupExtenson_1= ruleMarkupExtenson
					{
					dbg.location(772,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getMarkupExtensonParserRuleCall_1()); 
					    }dbg.location(775,26);
					pushFollow(FOLLOW_ruleMarkupExtenson_in_ruleXPrimaryExpression1715);
					this_MarkupExtenson_1=ruleMarkupExtenson();
					state._fsp--;
					if (state.failed) return current;dbg.location(776,5);
					if ( state.backtracking==0 ) { 
					        current = this_MarkupExtenson_1; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(781, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXPrimaryExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXPrimaryExpression"



	// $ANTLR start "entryRuleXStringLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:788:1: entryRuleXStringLiteral returns [EObject current=null] :iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
	public final EObject entryRuleXStringLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXStringLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXStringLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(788, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:789:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:790:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
			{
			dbg.location(790,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXStringLiteralRule()); }dbg.location(791,24);
			pushFollow(FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral1750);
			iv_ruleXStringLiteral=ruleXStringLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(792,3);
			if ( state.backtracking==0 ) { current =iv_ruleXStringLiteral; }dbg.location(793,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXStringLiteral1760); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(794, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXStringLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXStringLiteral"



	// $ANTLR start "ruleXStringLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:797:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
	public final EObject ruleXStringLiteral() throws RecognitionException {
		EObject current = null;


		Token lv_value_1_0=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXStringLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(797, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:800:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:801:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
			{
			dbg.location(801,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:801:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:801:2: () ( (lv_value_1_0= RULE_STRING ) )
			{
			dbg.location(801,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:801:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:802:5: 
			{
			dbg.location(802,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(807,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:807:2: ( (lv_value_1_0= RULE_STRING ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:808:3: (lv_value_1_0= RULE_STRING )
			{
			dbg.location(808,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:808:3: (lv_value_1_0= RULE_STRING )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:809:3: lv_value_1_0= RULE_STRING
			{
			dbg.location(809,15);
			lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXStringLiteral1811); if (state.failed) return current;dbg.location(810,3);
			if ( state.backtracking==0 ) {
						newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
					}dbg.location(813,3);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElement(grammarAccess.getXStringLiteralRule());
				        }
			       		setWithLastConsumed(
			       			current, 
			       			"value",
			        		lv_value_1_0, 
			        		"STRING");
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(826, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXStringLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXStringLiteral"



	// $ANTLR start "entryRuleType"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:835:1: entryRuleType returns [EObject current=null] :iv_ruleType= ruleType EOF ;
	public final EObject entryRuleType() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleType =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(835, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:836:2: (iv_ruleType= ruleType EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:837:2: iv_ruleType= ruleType EOF
			{
			dbg.location(837,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getTypeRule()); }dbg.location(838,14);
			pushFollow(FOLLOW_ruleType_in_entryRuleType1854);
			iv_ruleType=ruleType();
			state._fsp--;
			if (state.failed) return current;dbg.location(839,3);
			if ( state.backtracking==0 ) { current =iv_ruleType; }dbg.location(840,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleType1864); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(841, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleType"



	// $ANTLR start "ruleType"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:844:1: ruleType returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) ) ) ;
	public final EObject ruleType() throws RecognitionException {
		EObject current = null;


		Token lv_exported_3_0=null;
		Token otherlv_5=null;
		Token otherlv_7=null;
		Token otherlv_9=null;
		Token otherlv_11=null;
		Token otherlv_12=null;
		Token otherlv_14=null;
		Token otherlv_16=null;
		Token otherlv_18=null;
		Token otherlv_20=null;
		Token lv_exported_22_0=null;
		Token lv_interface_24_0=null;
		Token otherlv_26=null;
		Token otherlv_28=null;
		Token otherlv_30=null;
		Token otherlv_31=null;
		Token otherlv_33=null;
		Token otherlv_35=null;
		Token otherlv_37=null;
		Token lv_exported_39_0=null;
		Token otherlv_41=null;
		Token otherlv_43=null;
		Token otherlv_45=null;
		EObject lv_annotations_1_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_4_0 =null;
		AntlrDatatypeRuleToken lv_simpleName_6_0 =null;
		EObject lv_typeParameters_8_0 =null;
		EObject lv_typeParameters_10_0 =null;
		EObject lv_extends_13_0 =null;
		EObject lv_implements_15_0 =null;
		EObject lv_implements_17_0 =null;
		EObject lv_members_19_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_23_0 =null;
		AntlrDatatypeRuleToken lv_simpleName_25_0 =null;
		EObject lv_typeParameters_27_0 =null;
		EObject lv_typeParameters_29_0 =null;
		EObject lv_implements_32_0 =null;
		EObject lv_implements_34_0 =null;
		EObject lv_members_36_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_40_0 =null;
		AntlrDatatypeRuleToken lv_simpleName_42_0 =null;
		EObject lv_members_44_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(844, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:847:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:848:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) ) )
			{
			dbg.location(848,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:848:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:848:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) )
			{
			dbg.location(848,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:848:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:849:5: 
			{
			dbg.location(849,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getTypeAccess().getJvmDeclaredTypeAction_0(),
			            current);
			    }
			}
			dbg.location(854,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:854:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
			try { dbg.enterSubRule(13);

			loop13:
			while (true) {
				int alt13=2;
				try { dbg.enterDecision(13, decisionCanBacktrack[13]);

				int LA13_0 = input.LA(1);
				if ( (LA13_0==56) ) {
					alt13=1;
				}

				} finally {dbg.exitDecision(13);}

				switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:855:3: (lv_annotations_1_0= ruleXAnnotation )
					{
					dbg.location(855,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:855:3: (lv_annotations_1_0= ruleXAnnotation )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:856:3: lv_annotations_1_0= ruleXAnnotation
					{
					dbg.location(856,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getTypeAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
						    }dbg.location(859,21);
					pushFollow(FOLLOW_ruleXAnnotation_in_ruleType1919);
					lv_annotations_1_0=ruleXAnnotation();
					state._fsp--;
					if (state.failed) return current;dbg.location(859,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getTypeRule());
						        }
					       		add(
					       			current, 
					       			"annotations",
					        		lv_annotations_1_0, 
					        		"XAnnotation");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop13;
				}
			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(872,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:872:3: ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) )
			int alt32=3;
			try { dbg.enterSubRule(32);
			try { dbg.enterDecision(32, decisionCanBacktrack[32]);

			try {
				isCyclicDecision = true;
				alt32 = dfa32.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(32);}

			switch (alt32) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:872:4: ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' )
					{
					dbg.location(872,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:872:4: ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:872:5: () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}'
					{
					dbg.location(872,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:872:5: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:873:5: 
					{
					dbg.location(873,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getTypeAccess().getJvmGenericTypeAnnotationInfoAction_2_0_0(),
					            current);
					    }
					}
					dbg.location(878,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:878:2: ( (lv_exported_3_0= 'export' ) )?
					int alt14=2;
					try { dbg.enterSubRule(14);
					try { dbg.enterDecision(14, decisionCanBacktrack[14]);

					int LA14_0 = input.LA(1);
					if ( (LA14_0==68) ) {
						alt14=1;
					}
					} finally {dbg.exitDecision(14);}

					switch (alt14) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:879:3: (lv_exported_3_0= 'export' )
							{
							dbg.location(879,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:879:3: (lv_exported_3_0= 'export' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:880:3: lv_exported_3_0= 'export'
							{
							dbg.location(880,18);
							lv_exported_3_0=(Token)match(input,68,FOLLOW_68_in_ruleType1949); if (state.failed) return current;dbg.location(881,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_exported_3_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_0_1_0());
							    }dbg.location(885,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getTypeRule());
								        }
							       		setWithLastConsumed(current, "exported", true, "export");
								    }
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(14);}
					dbg.location(893,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:893:3: ( (lv_modifiers_4_0= ruleCommonModifier ) )*
					try { dbg.enterSubRule(15);

					loop15:
					while (true) {
						int alt15=2;
						try { dbg.enterDecision(15, decisionCanBacktrack[15]);

						int LA15_0 = input.LA(1);
						if ( (LA15_0==66||(LA15_0 >= 80 && LA15_0 <= 81)||LA15_0==83) ) {
							alt15=1;
						}

						} finally {dbg.exitDecision(15);}

						switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:894:3: (lv_modifiers_4_0= ruleCommonModifier )
							{
							dbg.location(894,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:894:3: (lv_modifiers_4_0= ruleCommonModifier )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:895:3: lv_modifiers_4_0= ruleCommonModifier
							{
							dbg.location(895,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_0_2_0()); 
								    }dbg.location(898,19);
							pushFollow(FOLLOW_ruleCommonModifier_in_ruleType1984);
							lv_modifiers_4_0=ruleCommonModifier();
							state._fsp--;
							if (state.failed) return current;dbg.location(898,40);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"modifiers",
							        		lv_modifiers_4_0, 
							        		"CommonModifier");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop15;
						}
					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(911,13);
					otherlv_5=(Token)match(input,65,FOLLOW_65_in_ruleType1997); if (state.failed) return current;dbg.location(912,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getClassKeyword_2_0_3());
					    }dbg.location(915,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:915:3: ( (lv_simpleName_6_0= ruleValidID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:916:3: (lv_simpleName_6_0= ruleValidID )
					{
					dbg.location(916,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:916:3: (lv_simpleName_6_0= ruleValidID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:917:3: lv_simpleName_6_0= ruleValidID
					{
					dbg.location(917,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_0_4_0()); 
						    }dbg.location(920,20);
					pushFollow(FOLLOW_ruleValidID_in_ruleType2018);
					lv_simpleName_6_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(920,34);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getTypeRule());
						        }
					       		set(
					       			current, 
					       			"simpleName",
					        		lv_simpleName_6_0, 
					        		"ValidID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(933,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:933:2: (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )?
					int alt17=2;
					try { dbg.enterSubRule(17);
					try { dbg.enterDecision(17, decisionCanBacktrack[17]);

					int LA17_0 = input.LA(1);
					if ( (LA17_0==45) ) {
						alt17=1;
					}
					} finally {dbg.exitDecision(17);}

					switch (alt17) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:933:4: otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>'
							{
							dbg.location(933,13);
							otherlv_7=(Token)match(input,45,FOLLOW_45_in_ruleType2031); if (state.failed) return current;dbg.location(934,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_7, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_0_5_0());
							    }dbg.location(937,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:937:3: ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:938:3: (lv_typeParameters_8_0= ruleJvmTypeParameter )
							{
							dbg.location(938,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:938:3: (lv_typeParameters_8_0= ruleJvmTypeParameter )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:939:3: lv_typeParameters_8_0= ruleJvmTypeParameter
							{
							dbg.location(939,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_0_5_1_0()); 
								    }dbg.location(942,24);
							pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleType2052);
							lv_typeParameters_8_0=ruleJvmTypeParameter();
							state._fsp--;
							if (state.failed) return current;dbg.location(942,47);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"typeParameters",
							        		lv_typeParameters_8_0, 
							        		"JvmTypeParameter");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(955,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:955:2: (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )*
							try { dbg.enterSubRule(16);

							loop16:
							while (true) {
								int alt16=2;
								try { dbg.enterDecision(16, decisionCanBacktrack[16]);

								int LA16_0 = input.LA(1);
								if ( (LA16_0==33) ) {
									alt16=1;
								}

								} finally {dbg.exitDecision(16);}

								switch (alt16) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:955:4: otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) )
									{
									dbg.location(955,13);
									otherlv_9=(Token)match(input,33,FOLLOW_33_in_ruleType2065); if (state.failed) return current;dbg.location(956,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_9, grammarAccess.getTypeAccess().getCommaKeyword_2_0_5_2_0());
									    }dbg.location(959,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:959:3: ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:960:3: (lv_typeParameters_10_0= ruleJvmTypeParameter )
									{
									dbg.location(960,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:960:3: (lv_typeParameters_10_0= ruleJvmTypeParameter )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:961:3: lv_typeParameters_10_0= ruleJvmTypeParameter
									{
									dbg.location(961,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_0_5_2_1_0()); 
										    }dbg.location(964,25);
									pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleType2086);
									lv_typeParameters_10_0=ruleJvmTypeParameter();
									state._fsp--;
									if (state.failed) return current;dbg.location(964,48);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getTypeRule());
										        }
									       		add(
									       			current, 
									       			"typeParameters",
									        		lv_typeParameters_10_0, 
									        		"JvmTypeParameter");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop16;
								}
							}
							} finally {dbg.exitSubRule(16);}
							dbg.location(977,15);
							otherlv_11=(Token)match(input,52,FOLLOW_52_in_ruleType2100); if (state.failed) return current;dbg.location(978,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_11, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_0_5_3());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(17);}
					dbg.location(981,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:981:3: (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==69) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:981:5: otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) )
							{
							dbg.location(981,15);
							otherlv_12=(Token)match(input,69,FOLLOW_69_in_ruleType2115); if (state.failed) return current;dbg.location(982,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_12, grammarAccess.getTypeAccess().getExtendsKeyword_2_0_6_0());
							    }dbg.location(985,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:985:3: ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:986:3: (lv_extends_13_0= ruleJvmParameterizedTypeReference )
							{
							dbg.location(986,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:986:3: (lv_extends_13_0= ruleJvmParameterizedTypeReference )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:987:3: lv_extends_13_0= ruleJvmParameterizedTypeReference
							{
							dbg.location(987,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_6_1_0()); 
								    }dbg.location(990,18);
							pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2136);
							lv_extends_13_0=ruleJvmParameterizedTypeReference();
							state._fsp--;
							if (state.failed) return current;dbg.location(990,54);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		set(
							       			current, 
							       			"extends",
							        		lv_extends_13_0, 
							        		"JvmParameterizedTypeReference");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

					}
					} finally {dbg.exitSubRule(18);}
					dbg.location(1003,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1003:4: (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==74) ) {
						alt20=1;
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1003:6: otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )*
							{
							dbg.location(1003,16);
							otherlv_14=(Token)match(input,74,FOLLOW_74_in_ruleType2151); if (state.failed) return current;dbg.location(1004,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_14, grammarAccess.getTypeAccess().getImplementsKeyword_2_0_7_0());
							    }dbg.location(1007,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1007:3: ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1008:3: (lv_implements_15_0= ruleJvmParameterizedTypeReference )
							{
							dbg.location(1008,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1008:3: (lv_implements_15_0= ruleJvmParameterizedTypeReference )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1009:3: lv_implements_15_0= ruleJvmParameterizedTypeReference
							{
							dbg.location(1009,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_1_0()); 
								    }dbg.location(1012,21);
							pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2172);
							lv_implements_15_0=ruleJvmParameterizedTypeReference();
							state._fsp--;
							if (state.failed) return current;dbg.location(1012,57);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"implements",
							        		lv_implements_15_0, 
							        		"JvmParameterizedTypeReference");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(1025,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1025:2: (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )*
							try { dbg.enterSubRule(19);

							loop19:
							while (true) {
								int alt19=2;
								try { dbg.enterDecision(19, decisionCanBacktrack[19]);

								int LA19_0 = input.LA(1);
								if ( (LA19_0==33) ) {
									alt19=1;
								}

								} finally {dbg.exitDecision(19);}

								switch (alt19) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1025:4: otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) )
									{
									dbg.location(1025,14);
									otherlv_16=(Token)match(input,33,FOLLOW_33_in_ruleType2185); if (state.failed) return current;dbg.location(1026,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_16, grammarAccess.getTypeAccess().getCommaKeyword_2_0_7_2_0());
									    }dbg.location(1029,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1029:3: ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1030:3: (lv_implements_17_0= ruleJvmParameterizedTypeReference )
									{
									dbg.location(1030,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1030:3: (lv_implements_17_0= ruleJvmParameterizedTypeReference )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1031:3: lv_implements_17_0= ruleJvmParameterizedTypeReference
									{
									dbg.location(1031,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_0_7_2_1_0()); 
										    }dbg.location(1034,21);
									pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2206);
									lv_implements_17_0=ruleJvmParameterizedTypeReference();
									state._fsp--;
									if (state.failed) return current;dbg.location(1034,57);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getTypeRule());
										        }
									       		add(
									       			current, 
									       			"implements",
									        		lv_implements_17_0, 
									        		"JvmParameterizedTypeReference");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop19;
								}
							}
							} finally {dbg.exitSubRule(19);}

							}
							break;

					}
					} finally {dbg.exitSubRule(20);}
					dbg.location(1047,17);
					otherlv_18=(Token)match(input,88,FOLLOW_88_in_ruleType2222); if (state.failed) return current;dbg.location(1048,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_18, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_0_8());
					    }dbg.location(1051,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1051:3: ( (lv_members_19_0= ruleMember ) )*
					try { dbg.enterSubRule(21);

					loop21:
					while (true) {
						int alt21=2;
						try { dbg.enterDecision(21, decisionCanBacktrack[21]);

						int LA21_0 = input.LA(1);
						if ( (LA21_0==RULE_ID||LA21_0==26||LA21_0==51||LA21_0==56||(LA21_0 >= 66 && LA21_0 <= 68)||LA21_0==72||(LA21_0 >= 80 && LA21_0 <= 81)||LA21_0==83) ) {
							alt21=1;
						}

						} finally {dbg.exitDecision(21);}

						switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1052:3: (lv_members_19_0= ruleMember )
							{
							dbg.location(1052,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1052:3: (lv_members_19_0= ruleMember )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1053:3: lv_members_19_0= ruleMember
							{
							dbg.location(1053,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_0_9_0()); 
								    }dbg.location(1056,18);
							pushFollow(FOLLOW_ruleMember_in_ruleType2243);
							lv_members_19_0=ruleMember();
							state._fsp--;
							if (state.failed) return current;dbg.location(1056,31);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"members",
							        		lv_members_19_0, 
							        		"Member");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop21;
						}
					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(1069,14);
					otherlv_20=(Token)match(input,92,FOLLOW_92_in_ruleType2256); if (state.failed) return current;dbg.location(1070,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_20, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_0_10());
					    }
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1074:6: ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' )
					{
					dbg.location(1074,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1074:6: ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1074:7: () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}'
					{
					dbg.location(1074,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1074:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1075:5: 
					{
					dbg.location(1075,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getTypeAccess().getJvmGenericTypeAnnotationInfoAction_2_1_0(),
					            current);
					    }
					}
					dbg.location(1080,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1080:2: ( (lv_exported_22_0= 'export' ) )?
					int alt22=2;
					try { dbg.enterSubRule(22);
					try { dbg.enterDecision(22, decisionCanBacktrack[22]);

					int LA22_0 = input.LA(1);
					if ( (LA22_0==68) ) {
						alt22=1;
					}
					} finally {dbg.exitDecision(22);}

					switch (alt22) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1081:3: (lv_exported_22_0= 'export' )
							{
							dbg.location(1081,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1081:3: (lv_exported_22_0= 'export' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1082:3: lv_exported_22_0= 'export'
							{
							dbg.location(1082,19);
							lv_exported_22_0=(Token)match(input,68,FOLLOW_68_in_ruleType2291); if (state.failed) return current;dbg.location(1083,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_exported_22_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_1_1_0());
							    }dbg.location(1087,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getTypeRule());
								        }
							       		setWithLastConsumed(current, "exported", true, "export");
								    }
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(22);}
					dbg.location(1095,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1095:3: ( (lv_modifiers_23_0= ruleCommonModifier ) )*
					try { dbg.enterSubRule(23);

					loop23:
					while (true) {
						int alt23=2;
						try { dbg.enterDecision(23, decisionCanBacktrack[23]);

						int LA23_0 = input.LA(1);
						if ( (LA23_0==66||(LA23_0 >= 80 && LA23_0 <= 81)||LA23_0==83) ) {
							alt23=1;
						}

						} finally {dbg.exitDecision(23);}

						switch (alt23) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1096:3: (lv_modifiers_23_0= ruleCommonModifier )
							{
							dbg.location(1096,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1096:3: (lv_modifiers_23_0= ruleCommonModifier )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1097:3: lv_modifiers_23_0= ruleCommonModifier
							{
							dbg.location(1097,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_1_2_0()); 
								    }dbg.location(1100,20);
							pushFollow(FOLLOW_ruleCommonModifier_in_ruleType2326);
							lv_modifiers_23_0=ruleCommonModifier();
							state._fsp--;
							if (state.failed) return current;dbg.location(1100,41);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"modifiers",
							        		lv_modifiers_23_0, 
							        		"CommonModifier");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop23;
						}
					}
					} finally {dbg.exitSubRule(23);}
					dbg.location(1113,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1113:3: ( (lv_interface_24_0= 'interface' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1114:3: (lv_interface_24_0= 'interface' )
					{
					dbg.location(1114,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1114:3: (lv_interface_24_0= 'interface' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1115:3: lv_interface_24_0= 'interface'
					{
					dbg.location(1115,20);
					lv_interface_24_0=(Token)match(input,77,FOLLOW_77_in_ruleType2345); if (state.failed) return current;dbg.location(1116,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_interface_24_0, grammarAccess.getTypeAccess().getInterfaceInterfaceKeyword_2_1_3_0());
					    }dbg.location(1120,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getTypeRule());
						        }
					       		setWithLastConsumed(current, "interface", true, "interface");
						    }
					}

					}
					dbg.location(1128,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1128:2: ( (lv_simpleName_25_0= ruleValidID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1129:3: (lv_simpleName_25_0= ruleValidID )
					{
					dbg.location(1129,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1129:3: (lv_simpleName_25_0= ruleValidID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1130:3: lv_simpleName_25_0= ruleValidID
					{
					dbg.location(1130,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_1_4_0()); 
						    }dbg.location(1133,21);
					pushFollow(FOLLOW_ruleValidID_in_ruleType2379);
					lv_simpleName_25_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(1133,35);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getTypeRule());
						        }
					       		set(
					       			current, 
					       			"simpleName",
					        		lv_simpleName_25_0, 
					        		"ValidID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(1146,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1146:2: (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )?
					int alt25=2;
					try { dbg.enterSubRule(25);
					try { dbg.enterDecision(25, decisionCanBacktrack[25]);

					int LA25_0 = input.LA(1);
					if ( (LA25_0==45) ) {
						alt25=1;
					}
					} finally {dbg.exitDecision(25);}

					switch (alt25) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1146:4: otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>'
							{
							dbg.location(1146,14);
							otherlv_26=(Token)match(input,45,FOLLOW_45_in_ruleType2392); if (state.failed) return current;dbg.location(1147,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_26, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_1_5_0());
							    }dbg.location(1150,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1150:3: ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1151:3: (lv_typeParameters_27_0= ruleJvmTypeParameter )
							{
							dbg.location(1151,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1151:3: (lv_typeParameters_27_0= ruleJvmTypeParameter )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1152:3: lv_typeParameters_27_0= ruleJvmTypeParameter
							{
							dbg.location(1152,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_0()); 
								    }dbg.location(1155,25);
							pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleType2413);
							lv_typeParameters_27_0=ruleJvmTypeParameter();
							state._fsp--;
							if (state.failed) return current;dbg.location(1155,48);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"typeParameters",
							        		lv_typeParameters_27_0, 
							        		"JvmTypeParameter");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(1168,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1168:2: (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )*
							try { dbg.enterSubRule(24);

							loop24:
							while (true) {
								int alt24=2;
								try { dbg.enterDecision(24, decisionCanBacktrack[24]);

								int LA24_0 = input.LA(1);
								if ( (LA24_0==33) ) {
									alt24=1;
								}

								} finally {dbg.exitDecision(24);}

								switch (alt24) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1168:4: otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) )
									{
									dbg.location(1168,14);
									otherlv_28=(Token)match(input,33,FOLLOW_33_in_ruleType2426); if (state.failed) return current;dbg.location(1169,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_28, grammarAccess.getTypeAccess().getCommaKeyword_2_1_5_2_0());
									    }dbg.location(1172,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1172:3: ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1173:3: (lv_typeParameters_29_0= ruleJvmTypeParameter )
									{
									dbg.location(1173,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1173:3: (lv_typeParameters_29_0= ruleJvmTypeParameter )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1174:3: lv_typeParameters_29_0= ruleJvmTypeParameter
									{
									dbg.location(1174,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_2_1_0()); 
										    }dbg.location(1177,25);
									pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleType2447);
									lv_typeParameters_29_0=ruleJvmTypeParameter();
									state._fsp--;
									if (state.failed) return current;dbg.location(1177,48);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getTypeRule());
										        }
									       		add(
									       			current, 
									       			"typeParameters",
									        		lv_typeParameters_29_0, 
									        		"JvmTypeParameter");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop24;
								}
							}
							} finally {dbg.exitSubRule(24);}
							dbg.location(1190,15);
							otherlv_30=(Token)match(input,52,FOLLOW_52_in_ruleType2461); if (state.failed) return current;dbg.location(1191,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_30, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_1_5_3());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(25);}
					dbg.location(1194,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1194:3: (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )?
					int alt27=2;
					try { dbg.enterSubRule(27);
					try { dbg.enterDecision(27, decisionCanBacktrack[27]);

					int LA27_0 = input.LA(1);
					if ( (LA27_0==69) ) {
						alt27=1;
					}
					} finally {dbg.exitDecision(27);}

					switch (alt27) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1194:5: otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )*
							{
							dbg.location(1194,15);
							otherlv_31=(Token)match(input,69,FOLLOW_69_in_ruleType2476); if (state.failed) return current;dbg.location(1195,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_31, grammarAccess.getTypeAccess().getExtendsKeyword_2_1_6_0());
							    }dbg.location(1198,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1198:3: ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1199:3: (lv_implements_32_0= ruleJvmParameterizedTypeReference )
							{
							dbg.location(1199,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1199:3: (lv_implements_32_0= ruleJvmParameterizedTypeReference )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1200:3: lv_implements_32_0= ruleJvmParameterizedTypeReference
							{
							dbg.location(1200,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0()); 
								    }dbg.location(1203,21);
							pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2497);
							lv_implements_32_0=ruleJvmParameterizedTypeReference();
							state._fsp--;
							if (state.failed) return current;dbg.location(1203,57);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"implements",
							        		lv_implements_32_0, 
							        		"JvmParameterizedTypeReference");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(1216,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1216:2: (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )*
							try { dbg.enterSubRule(26);

							loop26:
							while (true) {
								int alt26=2;
								try { dbg.enterDecision(26, decisionCanBacktrack[26]);

								int LA26_0 = input.LA(1);
								if ( (LA26_0==33) ) {
									alt26=1;
								}

								} finally {dbg.exitDecision(26);}

								switch (alt26) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1216:4: otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) )
									{
									dbg.location(1216,14);
									otherlv_33=(Token)match(input,33,FOLLOW_33_in_ruleType2510); if (state.failed) return current;dbg.location(1217,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_33, grammarAccess.getTypeAccess().getCommaKeyword_2_1_6_2_0());
									    }dbg.location(1220,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1220:3: ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1221:3: (lv_implements_34_0= ruleJvmParameterizedTypeReference )
									{
									dbg.location(1221,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1221:3: (lv_implements_34_0= ruleJvmParameterizedTypeReference )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1222:3: lv_implements_34_0= ruleJvmParameterizedTypeReference
									{
									dbg.location(1222,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0()); 
										    }dbg.location(1225,21);
									pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2531);
									lv_implements_34_0=ruleJvmParameterizedTypeReference();
									state._fsp--;
									if (state.failed) return current;dbg.location(1225,57);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getTypeRule());
										        }
									       		add(
									       			current, 
									       			"implements",
									        		lv_implements_34_0, 
									        		"JvmParameterizedTypeReference");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop26;
								}
							}
							} finally {dbg.exitSubRule(26);}

							}
							break;

					}
					} finally {dbg.exitSubRule(27);}
					dbg.location(1238,17);
					otherlv_35=(Token)match(input,88,FOLLOW_88_in_ruleType2547); if (state.failed) return current;dbg.location(1239,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_35, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_1_7());
					    }dbg.location(1242,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1242:3: ( (lv_members_36_0= ruleMember ) )*
					try { dbg.enterSubRule(28);

					loop28:
					while (true) {
						int alt28=2;
						try { dbg.enterDecision(28, decisionCanBacktrack[28]);

						int LA28_0 = input.LA(1);
						if ( (LA28_0==RULE_ID||LA28_0==26||LA28_0==51||LA28_0==56||(LA28_0 >= 66 && LA28_0 <= 68)||LA28_0==72||(LA28_0 >= 80 && LA28_0 <= 81)||LA28_0==83) ) {
							alt28=1;
						}

						} finally {dbg.exitDecision(28);}

						switch (alt28) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1243:3: (lv_members_36_0= ruleMember )
							{
							dbg.location(1243,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1243:3: (lv_members_36_0= ruleMember )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1244:3: lv_members_36_0= ruleMember
							{
							dbg.location(1244,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_1_8_0()); 
								    }dbg.location(1247,18);
							pushFollow(FOLLOW_ruleMember_in_ruleType2568);
							lv_members_36_0=ruleMember();
							state._fsp--;
							if (state.failed) return current;dbg.location(1247,31);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"members",
							        		lv_members_36_0, 
							        		"Member");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop28;
						}
					}
					} finally {dbg.exitSubRule(28);}
					dbg.location(1260,14);
					otherlv_37=(Token)match(input,92,FOLLOW_92_in_ruleType2581); if (state.failed) return current;dbg.location(1261,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_37, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_1_9());
					    }
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1265:6: ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' )
					{
					dbg.location(1265,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1265:6: ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1265:7: () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}'
					{
					dbg.location(1265,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1265:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1266:5: 
					{
					dbg.location(1266,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getTypeAccess().getJvmAnnotationTypeAnnotationInfoAction_2_2_0(),
					            current);
					    }
					}
					dbg.location(1271,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1271:2: ( (lv_exported_39_0= 'export' ) )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==68) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1272:3: (lv_exported_39_0= 'export' )
							{
							dbg.location(1272,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1272:3: (lv_exported_39_0= 'export' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1273:3: lv_exported_39_0= 'export'
							{
							dbg.location(1273,19);
							lv_exported_39_0=(Token)match(input,68,FOLLOW_68_in_ruleType2616); if (state.failed) return current;dbg.location(1274,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_exported_39_0, grammarAccess.getTypeAccess().getExportedExportKeyword_2_2_1_0());
							    }dbg.location(1278,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getTypeRule());
								        }
							       		setWithLastConsumed(current, "exported", true, "export");
								    }
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(1286,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1286:3: ( (lv_modifiers_40_0= ruleCommonModifier ) )*
					try { dbg.enterSubRule(30);

					loop30:
					while (true) {
						int alt30=2;
						try { dbg.enterDecision(30, decisionCanBacktrack[30]);

						int LA30_0 = input.LA(1);
						if ( (LA30_0==66||(LA30_0 >= 80 && LA30_0 <= 81)||LA30_0==83) ) {
							alt30=1;
						}

						} finally {dbg.exitDecision(30);}

						switch (alt30) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1287:3: (lv_modifiers_40_0= ruleCommonModifier )
							{
							dbg.location(1287,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1287:3: (lv_modifiers_40_0= ruleCommonModifier )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1288:3: lv_modifiers_40_0= ruleCommonModifier
							{
							dbg.location(1288,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_2_2_0()); 
								    }dbg.location(1291,20);
							pushFollow(FOLLOW_ruleCommonModifier_in_ruleType2651);
							lv_modifiers_40_0=ruleCommonModifier();
							state._fsp--;
							if (state.failed) return current;dbg.location(1291,41);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"modifiers",
							        		lv_modifiers_40_0, 
							        		"CommonModifier");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop30;
						}
					}
					} finally {dbg.exitSubRule(30);}
					dbg.location(1304,14);
					otherlv_41=(Token)match(input,61,FOLLOW_61_in_ruleType2664); if (state.failed) return current;dbg.location(1305,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_41, grammarAccess.getTypeAccess().getAnnotationKeyword_2_2_3());
					    }dbg.location(1308,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1308:3: ( (lv_simpleName_42_0= ruleValidID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1309:3: (lv_simpleName_42_0= ruleValidID )
					{
					dbg.location(1309,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1309:3: (lv_simpleName_42_0= ruleValidID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1310:3: lv_simpleName_42_0= ruleValidID
					{
					dbg.location(1310,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getTypeAccess().getSimpleNameValidIDParserRuleCall_2_2_4_0()); 
						    }dbg.location(1313,21);
					pushFollow(FOLLOW_ruleValidID_in_ruleType2685);
					lv_simpleName_42_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(1313,35);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getTypeRule());
						        }
					       		set(
					       			current, 
					       			"simpleName",
					        		lv_simpleName_42_0, 
					        		"ValidID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(1326,13);
					otherlv_43=(Token)match(input,88,FOLLOW_88_in_ruleType2697); if (state.failed) return current;dbg.location(1327,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_43, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_2_5());
					    }dbg.location(1330,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1330:3: ( (lv_members_44_0= ruleAnnotationField ) )*
					try { dbg.enterSubRule(31);

					loop31:
					while (true) {
						int alt31=2;
						try { dbg.enterDecision(31, decisionCanBacktrack[31]);

						int LA31_0 = input.LA(1);
						if ( (LA31_0==RULE_ID||LA31_0==26||LA31_0==51||LA31_0==56||LA31_0==66||(LA31_0 >= 80 && LA31_0 <= 81)||LA31_0==83) ) {
							alt31=1;
						}

						} finally {dbg.exitDecision(31);}

						switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1331:3: (lv_members_44_0= ruleAnnotationField )
							{
							dbg.location(1331,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1331:3: (lv_members_44_0= ruleAnnotationField )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1332:3: lv_members_44_0= ruleAnnotationField
							{
							dbg.location(1332,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getTypeAccess().getMembersAnnotationFieldParserRuleCall_2_2_6_0()); 
								    }dbg.location(1335,18);
							pushFollow(FOLLOW_ruleAnnotationField_in_ruleType2718);
							lv_members_44_0=ruleAnnotationField();
							state._fsp--;
							if (state.failed) return current;dbg.location(1335,40);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getTypeRule());
								        }
							       		add(
							       			current, 
							       			"members",
							        		lv_members_44_0, 
							        		"AnnotationField");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop31;
						}
					}
					} finally {dbg.exitSubRule(31);}
					dbg.location(1348,14);
					otherlv_45=(Token)match(input,92,FOLLOW_92_in_ruleType2731); if (state.failed) return current;dbg.location(1349,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_45, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_2_7());
					    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(32);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(1353, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleType"



	// $ANTLR start "entryRuleAnnotationField"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1360:1: entryRuleAnnotationField returns [EObject current=null] :iv_ruleAnnotationField= ruleAnnotationField EOF ;
	public final EObject entryRuleAnnotationField() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleAnnotationField =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleAnnotationField");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1360, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1361:2: (iv_ruleAnnotationField= ruleAnnotationField EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1362:2: iv_ruleAnnotationField= ruleAnnotationField EOF
			{
			dbg.location(1362,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getAnnotationFieldRule()); }dbg.location(1363,25);
			pushFollow(FOLLOW_ruleAnnotationField_in_entryRuleAnnotationField2769);
			iv_ruleAnnotationField=ruleAnnotationField();
			state._fsp--;
			if (state.failed) return current;dbg.location(1364,3);
			if ( state.backtracking==0 ) { current =iv_ruleAnnotationField; }dbg.location(1365,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleAnnotationField2779); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(1366, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleAnnotationField");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleAnnotationField"



	// $ANTLR start "ruleAnnotationField"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1369:1: ruleAnnotationField returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_modifiers_1_0= ruleCommonModifier ) )* ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) ) ) (otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) ) )? (otherlv_6= ';' )? ) ;
	public final EObject ruleAnnotationField() throws RecognitionException {
		EObject current = null;


		Token otherlv_4=null;
		Token otherlv_6=null;
		EObject lv_annotations_0_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_1_0 =null;
		EObject lv_type_2_0 =null;
		AntlrDatatypeRuleToken lv_simpleName_3_0 =null;
		EObject lv_defaultValue_5_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleAnnotationField");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1369, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1372:28: ( ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_modifiers_1_0= ruleCommonModifier ) )* ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) ) ) (otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) ) )? (otherlv_6= ';' )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1373:2: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_modifiers_1_0= ruleCommonModifier ) )* ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) ) ) (otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) ) )? (otherlv_6= ';' )? )
			{
			dbg.location(1373,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1373:2: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_modifiers_1_0= ruleCommonModifier ) )* ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) ) ) (otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) ) )? (otherlv_6= ';' )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1373:2: ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_modifiers_1_0= ruleCommonModifier ) )* ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) ) ) (otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) ) )? (otherlv_6= ';' )?
			{
			dbg.location(1373,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1373:2: ( (lv_annotations_0_0= ruleXAnnotation ) )*
			try { dbg.enterSubRule(33);

			loop33:
			while (true) {
				int alt33=2;
				try { dbg.enterDecision(33, decisionCanBacktrack[33]);

				int LA33_0 = input.LA(1);
				if ( (LA33_0==56) ) {
					alt33=1;
				}

				} finally {dbg.exitDecision(33);}

				switch (alt33) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1374:3: (lv_annotations_0_0= ruleXAnnotation )
					{
					dbg.location(1374,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1374:3: (lv_annotations_0_0= ruleXAnnotation )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1375:3: lv_annotations_0_0= ruleXAnnotation
					{
					dbg.location(1375,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getAnnotationsXAnnotationParserRuleCall_0_0()); 
						    }dbg.location(1378,21);
					pushFollow(FOLLOW_ruleXAnnotation_in_ruleAnnotationField2825);
					lv_annotations_0_0=ruleXAnnotation();
					state._fsp--;
					if (state.failed) return current;dbg.location(1378,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
						        }
					       		add(
					       			current, 
					       			"annotations",
					        		lv_annotations_0_0, 
					        		"XAnnotation");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop33;
				}
			}
			} finally {dbg.exitSubRule(33);}
			dbg.location(1391,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1391:3: ( (lv_modifiers_1_0= ruleCommonModifier ) )*
			try { dbg.enterSubRule(34);

			loop34:
			while (true) {
				int alt34=2;
				try { dbg.enterDecision(34, decisionCanBacktrack[34]);

				int LA34_0 = input.LA(1);
				if ( (LA34_0==66||(LA34_0 >= 80 && LA34_0 <= 81)||LA34_0==83) ) {
					alt34=1;
				}

				} finally {dbg.exitDecision(34);}

				switch (alt34) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1392:3: (lv_modifiers_1_0= ruleCommonModifier )
					{
					dbg.location(1392,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1392:3: (lv_modifiers_1_0= ruleCommonModifier )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1393:3: lv_modifiers_1_0= ruleCommonModifier
					{
					dbg.location(1393,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_1_0()); 
						    }dbg.location(1396,19);
					pushFollow(FOLLOW_ruleCommonModifier_in_ruleAnnotationField2847);
					lv_modifiers_1_0=ruleCommonModifier();
					state._fsp--;
					if (state.failed) return current;dbg.location(1396,40);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
						        }
					       		add(
					       			current, 
					       			"modifiers",
					        		lv_modifiers_1_0, 
					        		"CommonModifier");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop34;
				}
			}
			} finally {dbg.exitSubRule(34);}
			dbg.location(1409,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1409:3: ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1409:4: ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_simpleName_3_0= ruleValidID ) )
			{
			dbg.location(1409,4);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1409:4: ( (lv_type_2_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1410:3: (lv_type_2_0= ruleJvmTypeReference )
			{
			dbg.location(1410,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1410:3: (lv_type_2_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1411:3: lv_type_2_0= ruleJvmTypeReference
			{
			dbg.location(1411,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0()); 
				    }dbg.location(1414,14);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleAnnotationField2870);
			lv_type_2_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(1414,37);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
				        }
			       		set(
			       			current, 
			       			"type",
			        		lv_type_2_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(1427,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1427:2: ( (lv_simpleName_3_0= ruleValidID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1428:3: (lv_simpleName_3_0= ruleValidID )
			{
			dbg.location(1428,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1428:3: (lv_simpleName_3_0= ruleValidID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1429:3: lv_simpleName_3_0= ruleValidID
			{
			dbg.location(1429,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getSimpleNameValidIDParserRuleCall_2_1_0()); 
				    }dbg.location(1432,20);
			pushFollow(FOLLOW_ruleValidID_in_ruleAnnotationField2891);
			lv_simpleName_3_0=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(1432,34);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
				        }
			       		set(
			       			current, 
			       			"simpleName",
			        		lv_simpleName_3_0, 
			        		"ValidID");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}
			dbg.location(1445,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1445:3: (otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) ) )?
			int alt35=2;
			try { dbg.enterSubRule(35);
			try { dbg.enterDecision(35, decisionCanBacktrack[35]);

			int LA35_0 = input.LA(1);
			if ( (LA35_0==48) ) {
				alt35=1;
			}
			} finally {dbg.exitDecision(35);}

			switch (alt35) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1445:5: otherlv_4= '=' ( (lv_defaultValue_5_0= ruleXLiteral ) )
					{
					dbg.location(1445,14);
					otherlv_4=(Token)match(input,48,FOLLOW_48_in_ruleAnnotationField2905); if (state.failed) return current;dbg.location(1446,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_4, grammarAccess.getAnnotationFieldAccess().getEqualsSignKeyword_3_0());
					    }dbg.location(1449,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1449:3: ( (lv_defaultValue_5_0= ruleXLiteral ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1450:3: (lv_defaultValue_5_0= ruleXLiteral )
					{
					dbg.location(1450,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1450:3: (lv_defaultValue_5_0= ruleXLiteral )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1451:3: lv_defaultValue_5_0= ruleXLiteral
					{
					dbg.location(1451,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getDefaultValueXLiteralParserRuleCall_3_1_0()); 
						    }dbg.location(1454,22);
					pushFollow(FOLLOW_ruleXLiteral_in_ruleAnnotationField2926);
					lv_defaultValue_5_0=ruleXLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(1454,37);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
						        }
					       		set(
					       			current, 
					       			"defaultValue",
					        		lv_defaultValue_5_0, 
					        		"XLiteral");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(35);}
			dbg.location(1467,4);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1467:4: (otherlv_6= ';' )?
			int alt36=2;
			try { dbg.enterSubRule(36);
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			int LA36_0 = input.LA(1);
			if ( (LA36_0==44) ) {
				alt36=1;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1467:6: otherlv_6= ';'
					{
					dbg.location(1467,15);
					otherlv_6=(Token)match(input,44,FOLLOW_44_in_ruleAnnotationField2941); if (state.failed) return current;dbg.location(1468,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_6, grammarAccess.getAnnotationFieldAccess().getSemicolonKeyword_4());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(36);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(1472, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleAnnotationField");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleAnnotationField"



	// $ANTLR start "entryRuleMember"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1479:1: entryRuleMember returns [EObject current=null] :iv_ruleMember= ruleMember EOF ;
	public final EObject entryRuleMember() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleMember =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleMember");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1479, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1480:2: (iv_ruleMember= ruleMember EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1481:2: iv_ruleMember= ruleMember EOF
			{
			dbg.location(1481,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getMemberRule()); }dbg.location(1482,16);
			pushFollow(FOLLOW_ruleMember_in_entryRuleMember2979);
			iv_ruleMember=ruleMember();
			state._fsp--;
			if (state.failed) return current;dbg.location(1483,3);
			if ( state.backtracking==0 ) { current =iv_ruleMember; }dbg.location(1484,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleMember2989); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(1485, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleMember");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleMember"



	// $ANTLR start "ruleMember"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1488:1: ruleMember returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) ) ) ;
	public final EObject ruleMember() throws RecognitionException {
		EObject current = null;


		Token otherlv_6=null;
		Token otherlv_8=null;
		Token otherlv_9=null;
		Token otherlv_10=null;
		Token otherlv_12=null;
		Token otherlv_14=null;
		Token otherlv_20=null;
		Token otherlv_21=null;
		Token otherlv_23=null;
		Token otherlv_25=null;
		Token otherlv_26=null;
		Token otherlv_28=null;
		Token otherlv_30=null;
		EObject lv_annotations_1_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_3_0 =null;
		EObject lv_type_4_0 =null;
		AntlrDatatypeRuleToken lv_simpleName_5_0 =null;
		EObject lv_defaultValue_7_0 =null;
		EObject lv_get_11_0 =null;
		EObject lv_set_13_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_16_0 =null;
		EObject lv_function_17_0 =null;
		AntlrDatatypeRuleToken lv_modifiers_19_0 =null;
		EObject lv_typeParameters_22_0 =null;
		EObject lv_typeParameters_24_0 =null;
		EObject lv_parameters_27_0 =null;
		EObject lv_parameters_29_0 =null;
		EObject lv_expression_31_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleMember");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1488, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1491:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1492:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) ) )
			{
			dbg.location(1492,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1492:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1492:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) )
			{
			dbg.location(1492,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1492:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1493:5: 
			{
			dbg.location(1493,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getMemberAccess().getJvmMemberAction_0(),
			            current);
			    }
			}
			dbg.location(1498,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1498:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
			try { dbg.enterSubRule(37);

			loop37:
			while (true) {
				int alt37=2;
				try { dbg.enterDecision(37, decisionCanBacktrack[37]);

				int LA37_0 = input.LA(1);
				if ( (LA37_0==56) ) {
					alt37=1;
				}

				} finally {dbg.exitDecision(37);}

				switch (alt37) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1499:3: (lv_annotations_1_0= ruleXAnnotation )
					{
					dbg.location(1499,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1499:3: (lv_annotations_1_0= ruleXAnnotation )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1500:3: lv_annotations_1_0= ruleXAnnotation
					{
					dbg.location(1500,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getMemberAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
						    }dbg.location(1503,21);
					pushFollow(FOLLOW_ruleXAnnotation_in_ruleMember3044);
					lv_annotations_1_0=ruleXAnnotation();
					state._fsp--;
					if (state.failed) return current;dbg.location(1503,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getMemberRule());
						        }
					       		add(
					       			current, 
					       			"annotations",
					        		lv_annotations_1_0, 
					        		"XAnnotation");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop37;
				}
			}
			} finally {dbg.exitSubRule(37);}
			dbg.location(1516,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1516:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) )
			int alt49=3;
			try { dbg.enterSubRule(49);
			try { dbg.enterDecision(49, decisionCanBacktrack[49]);

			try {
				isCyclicDecision = true;
				alt49 = dfa49.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(49);}

			switch (alt49) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1516:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) )
					{
					dbg.location(1516,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1516:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1516:5: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) )
					{
					dbg.location(1516,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1516:5: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1517:5: 
					{
					dbg.location(1517,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getMemberAccess().getJvmFieldAnnotationInfoAction_2_0_0(),
					            current);
					    }
					}
					dbg.location(1522,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1522:2: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
					try { dbg.enterSubRule(38);

					loop38:
					while (true) {
						int alt38=2;
						try { dbg.enterDecision(38, decisionCanBacktrack[38]);

						int LA38_0 = input.LA(1);
						if ( (LA38_0==66||(LA38_0 >= 80 && LA38_0 <= 81)||LA38_0==83) ) {
							alt38=1;
						}

						} finally {dbg.exitDecision(38);}

						switch (alt38) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1523:3: (lv_modifiers_3_0= ruleCommonModifier )
							{
							dbg.location(1523,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1523:3: (lv_modifiers_3_0= ruleCommonModifier )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1524:3: lv_modifiers_3_0= ruleCommonModifier
							{
							dbg.location(1524,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_0_1_0()); 
								    }dbg.location(1527,19);
							pushFollow(FOLLOW_ruleCommonModifier_in_ruleMember3077);
							lv_modifiers_3_0=ruleCommonModifier();
							state._fsp--;
							if (state.failed) return current;dbg.location(1527,40);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getMemberRule());
								        }
							       		add(
							       			current, 
							       			"modifiers",
							        		lv_modifiers_3_0, 
							        		"CommonModifier");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop38;
						}
					}
					} finally {dbg.exitSubRule(38);}
					dbg.location(1540,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1540:3: ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1540:4: ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) )
					{
					dbg.location(1540,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1540:4: ( (lv_type_4_0= ruleJvmTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1541:3: (lv_type_4_0= ruleJvmTypeReference )
					{
					dbg.location(1541,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1541:3: (lv_type_4_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1542:3: lv_type_4_0= ruleJvmTypeReference
					{
					dbg.location(1542,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_2_0_0()); 
						    }dbg.location(1545,14);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleMember3100);
					lv_type_4_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(1545,37);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getMemberRule());
						        }
					       		set(
					       			current, 
					       			"type",
					        		lv_type_4_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(1558,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1558:2: ( (lv_simpleName_5_0= ruleValidID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1559:3: (lv_simpleName_5_0= ruleValidID )
					{
					dbg.location(1559,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1559:3: (lv_simpleName_5_0= ruleValidID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1560:3: lv_simpleName_5_0= ruleValidID
					{
					dbg.location(1560,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getMemberAccess().getSimpleNameValidIDParserRuleCall_2_0_2_1_0()); 
						    }dbg.location(1563,20);
					pushFollow(FOLLOW_ruleValidID_in_ruleMember3121);
					lv_simpleName_5_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(1563,34);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getMemberRule());
						        }
					       		set(
					       			current, 
					       			"simpleName",
					        		lv_simpleName_5_0, 
					        		"ValidID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					dbg.location(1576,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1576:3: ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) )
					int alt42=2;
					try { dbg.enterSubRule(42);
					try { dbg.enterDecision(42, decisionCanBacktrack[42]);

					int LA42_0 = input.LA(1);
					if ( (LA42_0==EOF||LA42_0==RULE_ID||LA42_0==26||LA42_0==44||LA42_0==48||LA42_0==51||LA42_0==56||(LA42_0 >= 66 && LA42_0 <= 68)||LA42_0==72||(LA42_0 >= 80 && LA42_0 <= 81)||LA42_0==83||LA42_0==92) ) {
						alt42=1;
					}
					else if ( (LA42_0==88) ) {
						alt42=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						NoViableAltException nvae =
							new NoViableAltException("", 42, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(42);}

					switch (alt42) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1576:4: ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? )
							{
							dbg.location(1576,4);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1576:4: ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1576:5: (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )?
							{
							dbg.location(1576,5);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1576:5: (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )?
							int alt39=2;
							try { dbg.enterSubRule(39);
							try { dbg.enterDecision(39, decisionCanBacktrack[39]);

							int LA39_0 = input.LA(1);
							if ( (LA39_0==48) ) {
								alt39=1;
							}
							} finally {dbg.exitDecision(39);}

							switch (alt39) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1576:7: otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) )
									{
									dbg.location(1576,16);
									otherlv_6=(Token)match(input,48,FOLLOW_48_in_ruleMember3137); if (state.failed) return current;dbg.location(1577,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_6, grammarAccess.getMemberAccess().getEqualsSignKeyword_2_0_3_0_0_0());
									    }dbg.location(1580,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1580:3: ( (lv_defaultValue_7_0= ruleXExpression ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1581:3: (lv_defaultValue_7_0= ruleXExpression )
									{
									dbg.location(1581,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1581:3: (lv_defaultValue_7_0= ruleXExpression )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1582:3: lv_defaultValue_7_0= ruleXExpression
									{
									dbg.location(1582,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getMemberAccess().getDefaultValueXExpressionParserRuleCall_2_0_3_0_0_1_0()); 
										    }dbg.location(1585,22);
									pushFollow(FOLLOW_ruleXExpression_in_ruleMember3158);
									lv_defaultValue_7_0=ruleXExpression();
									state._fsp--;
									if (state.failed) return current;dbg.location(1585,40);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getMemberRule());
										        }
									       		set(
									       			current, 
									       			"defaultValue",
									        		lv_defaultValue_7_0, 
									        		"XExpression");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(39);}
							dbg.location(1598,4);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1598:4: (otherlv_8= ';' )?
							int alt40=2;
							try { dbg.enterSubRule(40);
							try { dbg.enterDecision(40, decisionCanBacktrack[40]);

							int LA40_0 = input.LA(1);
							if ( (LA40_0==44) ) {
								alt40=1;
							}
							} finally {dbg.exitDecision(40);}

							switch (alt40) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1598:6: otherlv_8= ';'
									{
									dbg.location(1598,15);
									otherlv_8=(Token)match(input,44,FOLLOW_44_in_ruleMember3173); if (state.failed) return current;dbg.location(1599,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_8, grammarAccess.getMemberAccess().getSemicolonKeyword_2_0_3_0_1());
									    }
									}
									break;

							}
							} finally {dbg.exitSubRule(40);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1603:6: (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' )
							{
							dbg.location(1603,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1603:6: (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1603:8: otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}'
							{
							dbg.location(1603,17);
							otherlv_9=(Token)match(input,88,FOLLOW_88_in_ruleMember3195); if (state.failed) return current;dbg.location(1604,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_9, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_0_3_1_0());
							    }dbg.location(1607,12);
							otherlv_10=(Token)match(input,73,FOLLOW_73_in_ruleMember3207); if (state.failed) return current;dbg.location(1608,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_10, grammarAccess.getMemberAccess().getGetKeyword_2_0_3_1_1());
							    }dbg.location(1611,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1611:3: ( (lv_get_11_0= ruleXBlockExpression ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1612:3: (lv_get_11_0= ruleXBlockExpression )
							{
							dbg.location(1612,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1612:3: (lv_get_11_0= ruleXBlockExpression )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1613:3: lv_get_11_0= ruleXBlockExpression
							{
							dbg.location(1613,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getMemberAccess().getGetXBlockExpressionParserRuleCall_2_0_3_1_2_0()); 
								    }dbg.location(1616,14);
							pushFollow(FOLLOW_ruleXBlockExpression_in_ruleMember3228);
							lv_get_11_0=ruleXBlockExpression();
							state._fsp--;
							if (state.failed) return current;dbg.location(1616,37);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getMemberRule());
								        }
							       		set(
							       			current, 
							       			"get",
							        		lv_get_11_0, 
							        		"XBlockExpression");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(1629,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1629:2: (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )?
							int alt41=2;
							try { dbg.enterSubRule(41);
							try { dbg.enterDecision(41, decisionCanBacktrack[41]);

							int LA41_0 = input.LA(1);
							if ( (LA41_0==82) ) {
								alt41=1;
							}
							} finally {dbg.exitDecision(41);}

							switch (alt41) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1629:4: otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) )
									{
									dbg.location(1629,14);
									otherlv_12=(Token)match(input,82,FOLLOW_82_in_ruleMember3241); if (state.failed) return current;dbg.location(1630,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_12, grammarAccess.getMemberAccess().getSetKeyword_2_0_3_1_3_0());
									    }dbg.location(1633,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1633:3: ( (lv_set_13_0= ruleXBlockExpression ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1634:3: (lv_set_13_0= ruleXBlockExpression )
									{
									dbg.location(1634,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1634:3: (lv_set_13_0= ruleXBlockExpression )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1635:3: lv_set_13_0= ruleXBlockExpression
									{
									dbg.location(1635,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getMemberAccess().getSetXBlockExpressionParserRuleCall_2_0_3_1_3_1_0()); 
										    }dbg.location(1638,14);
									pushFollow(FOLLOW_ruleXBlockExpression_in_ruleMember3262);
									lv_set_13_0=ruleXBlockExpression();
									state._fsp--;
									if (state.failed) return current;dbg.location(1638,37);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getMemberRule());
										        }
									       		set(
									       			current, 
									       			"set",
									        		lv_set_13_0, 
									        		"XBlockExpression");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(41);}
							dbg.location(1651,15);
							otherlv_14=(Token)match(input,92,FOLLOW_92_in_ruleMember3276); if (state.failed) return current;dbg.location(1652,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_14, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_0_3_1_4());
							    }
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(42);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1656:6: ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) )
					{
					dbg.location(1656,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1656:6: ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1656:7: () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) )
					{
					dbg.location(1656,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1656:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1657:5: 
					{
					dbg.location(1657,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getMemberAccess().getJvmOperationAnnotationInfoAction_2_1_0(),
					            current);
					    }
					}
					dbg.location(1662,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1662:2: ( (lv_modifiers_16_0= ruleCommonModifier ) )*
					try { dbg.enterSubRule(43);

					loop43:
					while (true) {
						int alt43=2;
						try { dbg.enterDecision(43, decisionCanBacktrack[43]);

						int LA43_0 = input.LA(1);
						if ( (LA43_0==66||(LA43_0 >= 80 && LA43_0 <= 81)||LA43_0==83) ) {
							alt43=1;
						}

						} finally {dbg.exitDecision(43);}

						switch (alt43) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1663:3: (lv_modifiers_16_0= ruleCommonModifier )
							{
							dbg.location(1663,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1663:3: (lv_modifiers_16_0= ruleCommonModifier )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1664:3: lv_modifiers_16_0= ruleCommonModifier
							{
							dbg.location(1664,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_1_1_0()); 
								    }dbg.location(1667,20);
							pushFollow(FOLLOW_ruleCommonModifier_in_ruleMember3316);
							lv_modifiers_16_0=ruleCommonModifier();
							state._fsp--;
							if (state.failed) return current;dbg.location(1667,41);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getMemberRule());
								        }
							       		add(
							       			current, 
							       			"modifiers",
							        		lv_modifiers_16_0, 
							        		"CommonModifier");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop43;
						}
					}
					} finally {dbg.exitSubRule(43);}
					dbg.location(1680,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1680:3: ( (lv_function_17_0= ruleXClosure ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1681:3: (lv_function_17_0= ruleXClosure )
					{
					dbg.location(1681,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1681:3: (lv_function_17_0= ruleXClosure )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1682:3: lv_function_17_0= ruleXClosure
					{
					dbg.location(1682,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getMemberAccess().getFunctionXClosureParserRuleCall_2_1_2_0()); 
						    }dbg.location(1685,19);
					pushFollow(FOLLOW_ruleXClosure_in_ruleMember3338);
					lv_function_17_0=ruleXClosure();
					state._fsp--;
					if (state.failed) return current;dbg.location(1685,34);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getMemberRule());
						        }
					       		set(
					       			current, 
					       			"function",
					        		lv_function_17_0, 
					        		"XClosure");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1699:6: ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) )
					{
					dbg.location(1699,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1699:6: ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1699:7: () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) )
					{
					dbg.location(1699,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1699:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1700:5: 
					{
					dbg.location(1700,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getMemberAccess().getJvmConstructorAnnotationInfoAction_2_2_0(),
					            current);
					    }
					}
					dbg.location(1705,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1705:2: ( (lv_modifiers_19_0= ruleCommonModifier ) )*
					try { dbg.enterSubRule(44);

					loop44:
					while (true) {
						int alt44=2;
						try { dbg.enterDecision(44, decisionCanBacktrack[44]);

						int LA44_0 = input.LA(1);
						if ( (LA44_0==66||(LA44_0 >= 80 && LA44_0 <= 81)||LA44_0==83) ) {
							alt44=1;
						}

						} finally {dbg.exitDecision(44);}

						switch (alt44) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1706:3: (lv_modifiers_19_0= ruleCommonModifier )
							{
							dbg.location(1706,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1706:3: (lv_modifiers_19_0= ruleCommonModifier )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1707:3: lv_modifiers_19_0= ruleCommonModifier
							{
							dbg.location(1707,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_2_1_0()); 
								    }dbg.location(1710,20);
							pushFollow(FOLLOW_ruleCommonModifier_in_ruleMember3376);
							lv_modifiers_19_0=ruleCommonModifier();
							state._fsp--;
							if (state.failed) return current;dbg.location(1710,41);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getMemberRule());
								        }
							       		add(
							       			current, 
							       			"modifiers",
							        		lv_modifiers_19_0, 
							        		"CommonModifier");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop44;
						}
					}
					} finally {dbg.exitSubRule(44);}
					dbg.location(1723,14);
					otherlv_20=(Token)match(input,67,FOLLOW_67_in_ruleMember3389); if (state.failed) return current;dbg.location(1724,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_20, grammarAccess.getMemberAccess().getConstructorKeyword_2_2_2());
					    }dbg.location(1727,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1727:3: (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					int LA46_0 = input.LA(1);
					if ( (LA46_0==45) ) {
						alt46=1;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1727:3: otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>'
							{
							dbg.location(1727,13);
							otherlv_21=(Token)match(input,45,FOLLOW_45_in_ruleMember3402); if (state.failed) return current;dbg.location(1728,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_21, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_2_3_0());
							    }dbg.location(1731,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1731:3: ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1732:3: (lv_typeParameters_22_0= ruleJvmTypeParameter )
							{
							dbg.location(1732,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1732:3: (lv_typeParameters_22_0= ruleJvmTypeParameter )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1733:3: lv_typeParameters_22_0= ruleJvmTypeParameter
							{
							dbg.location(1733,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_3_1_0()); 
								    }dbg.location(1736,25);
							pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleMember3423);
							lv_typeParameters_22_0=ruleJvmTypeParameter();
							state._fsp--;
							if (state.failed) return current;dbg.location(1736,48);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getMemberRule());
								        }
							       		add(
							       			current, 
							       			"typeParameters",
							        		lv_typeParameters_22_0, 
							        		"JvmTypeParameter");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(1749,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1749:2: (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )*
							try { dbg.enterSubRule(45);

							loop45:
							while (true) {
								int alt45=2;
								try { dbg.enterDecision(45, decisionCanBacktrack[45]);

								int LA45_0 = input.LA(1);
								if ( (LA45_0==33) ) {
									alt45=1;
								}

								} finally {dbg.exitDecision(45);}

								switch (alt45) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1749:4: otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) )
									{
									dbg.location(1749,14);
									otherlv_23=(Token)match(input,33,FOLLOW_33_in_ruleMember3436); if (state.failed) return current;dbg.location(1750,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_23, grammarAccess.getMemberAccess().getCommaKeyword_2_2_3_2_0());
									    }dbg.location(1753,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1753:3: ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1754:3: (lv_typeParameters_24_0= ruleJvmTypeParameter )
									{
									dbg.location(1754,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1754:3: (lv_typeParameters_24_0= ruleJvmTypeParameter )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1755:3: lv_typeParameters_24_0= ruleJvmTypeParameter
									{
									dbg.location(1755,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_3_2_1_0()); 
										    }dbg.location(1758,25);
									pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleMember3457);
									lv_typeParameters_24_0=ruleJvmTypeParameter();
									state._fsp--;
									if (state.failed) return current;dbg.location(1758,48);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getMemberRule());
										        }
									       		add(
									       			current, 
									       			"typeParameters",
									        		lv_typeParameters_24_0, 
									        		"JvmTypeParameter");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop45;
								}
							}
							} finally {dbg.exitSubRule(45);}
							dbg.location(1771,15);
							otherlv_25=(Token)match(input,52,FOLLOW_52_in_ruleMember3471); if (state.failed) return current;dbg.location(1772,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_25, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_2_3_3());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}
					dbg.location(1775,14);
					otherlv_26=(Token)match(input,26,FOLLOW_26_in_ruleMember3485); if (state.failed) return current;dbg.location(1776,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_26, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_2_4());
					    }dbg.location(1779,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1779:2: ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )?
					int alt48=2;
					try { dbg.enterSubRule(48);
					try { dbg.enterDecision(48, decisionCanBacktrack[48]);

					int LA48_0 = input.LA(1);
					if ( (LA48_0==RULE_ID||LA48_0==26||LA48_0==51||LA48_0==56) ) {
						alt48=1;
					}
					} finally {dbg.exitDecision(48);}

					switch (alt48) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1779:2: ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )*
							{
							dbg.location(1779,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1779:2: ( (lv_parameters_27_0= ruleParameter ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1780:3: (lv_parameters_27_0= ruleParameter )
							{
							dbg.location(1780,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1780:3: (lv_parameters_27_0= ruleParameter )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1781:3: lv_parameters_27_0= ruleParameter
							{
							dbg.location(1781,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_2_5_0_0()); 
								    }dbg.location(1784,21);
							pushFollow(FOLLOW_ruleParameter_in_ruleMember3507);
							lv_parameters_27_0=ruleParameter();
							state._fsp--;
							if (state.failed) return current;dbg.location(1784,37);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getMemberRule());
								        }
							       		add(
							       			current, 
							       			"parameters",
							        		lv_parameters_27_0, 
							        		"Parameter");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(1797,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1797:2: (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )*
							try { dbg.enterSubRule(47);

							loop47:
							while (true) {
								int alt47=2;
								try { dbg.enterDecision(47, decisionCanBacktrack[47]);

								int LA47_0 = input.LA(1);
								if ( (LA47_0==33) ) {
									alt47=1;
								}

								} finally {dbg.exitDecision(47);}

								switch (alt47) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1797:4: otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) )
									{
									dbg.location(1797,14);
									otherlv_28=(Token)match(input,33,FOLLOW_33_in_ruleMember3520); if (state.failed) return current;dbg.location(1798,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_28, grammarAccess.getMemberAccess().getCommaKeyword_2_2_5_1_0());
									    }dbg.location(1801,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1801:3: ( (lv_parameters_29_0= ruleParameter ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1802:3: (lv_parameters_29_0= ruleParameter )
									{
									dbg.location(1802,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1802:3: (lv_parameters_29_0= ruleParameter )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1803:3: lv_parameters_29_0= ruleParameter
									{
									dbg.location(1803,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_2_5_1_1_0()); 
										    }dbg.location(1806,21);
									pushFollow(FOLLOW_ruleParameter_in_ruleMember3541);
									lv_parameters_29_0=ruleParameter();
									state._fsp--;
									if (state.failed) return current;dbg.location(1806,37);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getMemberRule());
										        }
									       		add(
									       			current, 
									       			"parameters",
									        		lv_parameters_29_0, 
									        		"Parameter");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop47;
								}
							}
							} finally {dbg.exitSubRule(47);}

							}
							break;

					}
					} finally {dbg.exitSubRule(48);}
					dbg.location(1819,17);
					otherlv_30=(Token)match(input,27,FOLLOW_27_in_ruleMember3557); if (state.failed) return current;dbg.location(1820,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_30, grammarAccess.getMemberAccess().getRightParenthesisKeyword_2_2_6());
					    }dbg.location(1823,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1823:3: ( (lv_expression_31_0= ruleXBlockExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1824:3: (lv_expression_31_0= ruleXBlockExpression )
					{
					dbg.location(1824,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1824:3: (lv_expression_31_0= ruleXBlockExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1825:3: lv_expression_31_0= ruleXBlockExpression
					{
					dbg.location(1825,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXBlockExpressionParserRuleCall_2_2_7_0()); 
						    }dbg.location(1828,21);
					pushFollow(FOLLOW_ruleXBlockExpression_in_ruleMember3578);
					lv_expression_31_0=ruleXBlockExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(1828,44);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getMemberRule());
						        }
					       		set(
					       			current, 
					       			"expression",
					        		lv_expression_31_0, 
					        		"XBlockExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(49);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(1842, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleMember");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleMember"



	// $ANTLR start "entryRuleXClosure"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1849:1: entryRuleXClosure returns [EObject current=null] :iv_ruleXClosure= ruleXClosure EOF ;
	public final EObject entryRuleXClosure() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXClosure =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXClosure");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1849, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1850:2: (iv_ruleXClosure= ruleXClosure EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1851:2: iv_ruleXClosure= ruleXClosure EOF
			{
			dbg.location(1851,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXClosureRule()); }dbg.location(1852,18);
			pushFollow(FOLLOW_ruleXClosure_in_entryRuleXClosure3616);
			iv_ruleXClosure=ruleXClosure();
			state._fsp--;
			if (state.failed) return current;dbg.location(1853,3);
			if ( state.backtracking==0 ) { current =iv_ruleXClosure; }dbg.location(1854,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXClosure3626); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(1855, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXClosure");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXClosure"



	// $ANTLR start "ruleXClosure"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1858:1: ruleXClosure returns [EObject current=null] : ( () ( (lv_exported_1_0= 'export' ) )? otherlv_2= 'function' (otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>' )? ( (lv_name_8_0= ruleFunctionID ) )? otherlv_9= '(' ( ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )* )? otherlv_13= ')' (otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) ) )? ( ( (lv_expression_16_0= ruleXBlockExpression ) ) |otherlv_17= ';' ) ) ;
	public final EObject ruleXClosure() throws RecognitionException {
		EObject current = null;


		Token lv_exported_1_0=null;
		Token otherlv_2=null;
		Token otherlv_3=null;
		Token otherlv_5=null;
		Token otherlv_7=null;
		Token otherlv_9=null;
		Token otherlv_11=null;
		Token otherlv_13=null;
		Token otherlv_14=null;
		Token otherlv_17=null;
		EObject lv_typeParameters_4_0 =null;
		EObject lv_typeParameters_6_0 =null;
		AntlrDatatypeRuleToken lv_name_8_0 =null;
		EObject lv_declaredFormalParameters_10_0 =null;
		EObject lv_declaredFormalParameters_12_0 =null;
		EObject lv_returnType_15_0 =null;
		EObject lv_expression_16_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXClosure");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1858, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1861:28: ( ( () ( (lv_exported_1_0= 'export' ) )? otherlv_2= 'function' (otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>' )? ( (lv_name_8_0= ruleFunctionID ) )? otherlv_9= '(' ( ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )* )? otherlv_13= ')' (otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) ) )? ( ( (lv_expression_16_0= ruleXBlockExpression ) ) |otherlv_17= ';' ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1862:2: ( () ( (lv_exported_1_0= 'export' ) )? otherlv_2= 'function' (otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>' )? ( (lv_name_8_0= ruleFunctionID ) )? otherlv_9= '(' ( ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )* )? otherlv_13= ')' (otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) ) )? ( ( (lv_expression_16_0= ruleXBlockExpression ) ) |otherlv_17= ';' ) )
			{
			dbg.location(1862,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1862:2: ( () ( (lv_exported_1_0= 'export' ) )? otherlv_2= 'function' (otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>' )? ( (lv_name_8_0= ruleFunctionID ) )? otherlv_9= '(' ( ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )* )? otherlv_13= ')' (otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) ) )? ( ( (lv_expression_16_0= ruleXBlockExpression ) ) |otherlv_17= ';' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1862:2: () ( (lv_exported_1_0= 'export' ) )? otherlv_2= 'function' (otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>' )? ( (lv_name_8_0= ruleFunctionID ) )? otherlv_9= '(' ( ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )* )? otherlv_13= ')' (otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) ) )? ( ( (lv_expression_16_0= ruleXBlockExpression ) ) |otherlv_17= ';' )
			{
			dbg.location(1862,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1862:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1863:5: 
			{
			dbg.location(1863,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXClosureAccess().getXClosureAction_0(),
			            current);
			    }
			}
			dbg.location(1868,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1868:2: ( (lv_exported_1_0= 'export' ) )?
			int alt50=2;
			try { dbg.enterSubRule(50);
			try { dbg.enterDecision(50, decisionCanBacktrack[50]);

			int LA50_0 = input.LA(1);
			if ( (LA50_0==68) ) {
				alt50=1;
			}
			} finally {dbg.exitDecision(50);}

			switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1869:3: (lv_exported_1_0= 'export' )
					{
					dbg.location(1869,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1869:3: (lv_exported_1_0= 'export' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1870:3: lv_exported_1_0= 'export'
					{
					dbg.location(1870,18);
					lv_exported_1_0=(Token)match(input,68,FOLLOW_68_in_ruleXClosure3678); if (state.failed) return current;dbg.location(1871,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_exported_1_0, grammarAccess.getXClosureAccess().getExportedExportKeyword_1_0());
					    }dbg.location(1875,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXClosureRule());
						        }
					       		setWithLastConsumed(current, "exported", true, "export");
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(50);}
			dbg.location(1883,13);
			otherlv_2=(Token)match(input,72,FOLLOW_72_in_ruleXClosure3704); if (state.failed) return current;dbg.location(1884,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_2, grammarAccess.getXClosureAccess().getFunctionKeyword_2());
			    }dbg.location(1887,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1887:3: (otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>' )?
			int alt52=2;
			try { dbg.enterSubRule(52);
			try { dbg.enterDecision(52, decisionCanBacktrack[52]);

			int LA52_0 = input.LA(1);
			if ( (LA52_0==45) ) {
				int LA52_1 = input.LA(2);
				if ( (LA52_1==RULE_ID) ) {
					alt52=1;
				}
			}
			} finally {dbg.exitDecision(52);}

			switch (alt52) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1887:3: otherlv_3= '<' ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) ) (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )* otherlv_7= '>'
					{
					dbg.location(1887,12);
					otherlv_3=(Token)match(input,45,FOLLOW_45_in_ruleXClosure3717); if (state.failed) return current;dbg.location(1888,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getLessThanSignKeyword_3_0());
					    }dbg.location(1891,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1891:3: ( (lv_typeParameters_4_0= ruleJvmTypeParameter ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1892:3: (lv_typeParameters_4_0= ruleJvmTypeParameter )
					{
					dbg.location(1892,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1892:3: (lv_typeParameters_4_0= ruleJvmTypeParameter )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1893:3: lv_typeParameters_4_0= ruleJvmTypeParameter
					{
					dbg.location(1893,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXClosureAccess().getTypeParametersJvmTypeParameterParserRuleCall_3_1_0()); 
						    }dbg.location(1896,24);
					pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleXClosure3738);
					lv_typeParameters_4_0=ruleJvmTypeParameter();
					state._fsp--;
					if (state.failed) return current;dbg.location(1896,47);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXClosureRule());
						        }
					       		add(
					       			current, 
					       			"typeParameters",
					        		lv_typeParameters_4_0, 
					        		"JvmTypeParameter");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(1909,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1909:2: (otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) ) )*
					try { dbg.enterSubRule(51);

					loop51:
					while (true) {
						int alt51=2;
						try { dbg.enterDecision(51, decisionCanBacktrack[51]);

						int LA51_0 = input.LA(1);
						if ( (LA51_0==33) ) {
							alt51=1;
						}

						} finally {dbg.exitDecision(51);}

						switch (alt51) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1909:4: otherlv_5= ',' ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) )
							{
							dbg.location(1909,13);
							otherlv_5=(Token)match(input,33,FOLLOW_33_in_ruleXClosure3751); if (state.failed) return current;dbg.location(1910,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_5, grammarAccess.getXClosureAccess().getCommaKeyword_3_2_0());
							    }dbg.location(1913,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1913:3: ( (lv_typeParameters_6_0= ruleJvmTypeParameter ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1914:3: (lv_typeParameters_6_0= ruleJvmTypeParameter )
							{
							dbg.location(1914,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1914:3: (lv_typeParameters_6_0= ruleJvmTypeParameter )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1915:3: lv_typeParameters_6_0= ruleJvmTypeParameter
							{
							dbg.location(1915,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXClosureAccess().getTypeParametersJvmTypeParameterParserRuleCall_3_2_1_0()); 
								    }dbg.location(1918,24);
							pushFollow(FOLLOW_ruleJvmTypeParameter_in_ruleXClosure3772);
							lv_typeParameters_6_0=ruleJvmTypeParameter();
							state._fsp--;
							if (state.failed) return current;dbg.location(1918,47);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXClosureRule());
								        }
							       		add(
							       			current, 
							       			"typeParameters",
							        		lv_typeParameters_6_0, 
							        		"JvmTypeParameter");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

						default :
							break loop51;
						}
					}
					} finally {dbg.exitSubRule(51);}
					dbg.location(1931,14);
					otherlv_7=(Token)match(input,52,FOLLOW_52_in_ruleXClosure3786); if (state.failed) return current;dbg.location(1932,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getGreaterThanSignKeyword_3_3());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(52);}
			dbg.location(1935,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1935:3: ( (lv_name_8_0= ruleFunctionID ) )?
			int alt53=2;
			try { dbg.enterSubRule(53);
			try { dbg.enterDecision(53, decisionCanBacktrack[53]);

			int LA53_0 = input.LA(1);
			if ( (LA53_0==RULE_ID||(LA53_0 >= 18 && LA53_0 <= 25)||(LA53_0 >= 28 && LA53_0 <= 32)||(LA53_0 >= 34 && LA53_0 <= 36)||(LA53_0 >= 39 && LA53_0 <= 40)||LA53_0==45||LA53_0==47||(LA53_0 >= 49 && LA53_0 <= 50)||(LA53_0 >= 52 && LA53_0 <= 53)||LA53_0==57||(LA53_0 >= 59 && LA53_0 <= 60)||(LA53_0 >= 89 && LA53_0 <= 91)||LA53_0==93) ) {
				alt53=1;
			}
			} finally {dbg.exitDecision(53);}

			switch (alt53) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1936:3: (lv_name_8_0= ruleFunctionID )
					{
					dbg.location(1936,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1936:3: (lv_name_8_0= ruleFunctionID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1937:3: lv_name_8_0= ruleFunctionID
					{
					dbg.location(1937,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXClosureAccess().getNameFunctionIDParserRuleCall_4_0()); 
						    }dbg.location(1940,14);
					pushFollow(FOLLOW_ruleFunctionID_in_ruleXClosure3809);
					lv_name_8_0=ruleFunctionID();
					state._fsp--;
					if (state.failed) return current;dbg.location(1940,31);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXClosureRule());
						        }
					       		set(
					       			current, 
					       			"name",
					        		lv_name_8_0, 
					        		"FunctionID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(53);}
			dbg.location(1953,13);
			otherlv_9=(Token)match(input,26,FOLLOW_26_in_ruleXClosure3822); if (state.failed) return current;dbg.location(1954,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_9, grammarAccess.getXClosureAccess().getLeftParenthesisKeyword_5());
			    }dbg.location(1957,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1957:2: ( ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )* )?
			int alt55=2;
			try { dbg.enterSubRule(55);
			try { dbg.enterDecision(55, decisionCanBacktrack[55]);

			int LA55_0 = input.LA(1);
			if ( (LA55_0==RULE_ID||LA55_0==26||LA55_0==51) ) {
				alt55=1;
			}
			} finally {dbg.exitDecision(55);}

			switch (alt55) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1957:2: ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) ) (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )*
					{
					dbg.location(1957,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1957:2: ( (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1958:3: (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter )
					{
					dbg.location(1958,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1958:3: (lv_declaredFormalParameters_10_0= ruleJvmFormalParameter )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1959:3: lv_declaredFormalParameters_10_0= ruleJvmFormalParameter
					{
					dbg.location(1959,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_6_0_0()); 
						    }dbg.location(1962,35);
					pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure3844);
					lv_declaredFormalParameters_10_0=ruleJvmFormalParameter();
					state._fsp--;
					if (state.failed) return current;dbg.location(1962,60);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXClosureRule());
						        }
					       		add(
					       			current, 
					       			"declaredFormalParameters",
					        		lv_declaredFormalParameters_10_0, 
					        		"JvmFormalParameter");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(1975,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1975:2: (otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) ) )*
					try { dbg.enterSubRule(54);

					loop54:
					while (true) {
						int alt54=2;
						try { dbg.enterDecision(54, decisionCanBacktrack[54]);

						int LA54_0 = input.LA(1);
						if ( (LA54_0==33) ) {
							alt54=1;
						}

						} finally {dbg.exitDecision(54);}

						switch (alt54) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1975:4: otherlv_11= ',' ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) )
							{
							dbg.location(1975,14);
							otherlv_11=(Token)match(input,33,FOLLOW_33_in_ruleXClosure3857); if (state.failed) return current;dbg.location(1976,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_11, grammarAccess.getXClosureAccess().getCommaKeyword_6_1_0());
							    }dbg.location(1979,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1979:3: ( (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1980:3: (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter )
							{
							dbg.location(1980,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1980:3: (lv_declaredFormalParameters_12_0= ruleJvmFormalParameter )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:1981:3: lv_declaredFormalParameters_12_0= ruleJvmFormalParameter
							{
							dbg.location(1981,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_6_1_1_0()); 
								    }dbg.location(1984,35);
							pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure3878);
							lv_declaredFormalParameters_12_0=ruleJvmFormalParameter();
							state._fsp--;
							if (state.failed) return current;dbg.location(1984,60);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXClosureRule());
								        }
							       		add(
							       			current, 
							       			"declaredFormalParameters",
							        		lv_declaredFormalParameters_12_0, 
							        		"JvmFormalParameter");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

						default :
							break loop54;
						}
					}
					} finally {dbg.exitSubRule(54);}

					}
					break;

			}
			} finally {dbg.exitSubRule(55);}
			dbg.location(1997,17);
			otherlv_13=(Token)match(input,27,FOLLOW_27_in_ruleXClosure3894); if (state.failed) return current;dbg.location(1998,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_13, grammarAccess.getXClosureAccess().getRightParenthesisKeyword_7());
			    }dbg.location(2001,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2001:3: (otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) ) )?
			int alt56=2;
			try { dbg.enterSubRule(56);
			try { dbg.enterDecision(56, decisionCanBacktrack[56]);

			int LA56_0 = input.LA(1);
			if ( (LA56_0==42) ) {
				alt56=1;
			}
			} finally {dbg.exitDecision(56);}

			switch (alt56) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2001:3: otherlv_14= ':' ( (lv_returnType_15_0= ruleJvmTypeReference ) )
					{
					dbg.location(2001,13);
					otherlv_14=(Token)match(input,42,FOLLOW_42_in_ruleXClosure3907); if (state.failed) return current;dbg.location(2002,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_14, grammarAccess.getXClosureAccess().getColonKeyword_8_0());
					    }dbg.location(2005,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2005:3: ( (lv_returnType_15_0= ruleJvmTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2006:3: (lv_returnType_15_0= ruleJvmTypeReference )
					{
					dbg.location(2006,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2006:3: (lv_returnType_15_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2007:3: lv_returnType_15_0= ruleJvmTypeReference
					{
					dbg.location(2007,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXClosureAccess().getReturnTypeJvmTypeReferenceParserRuleCall_8_1_0()); 
						    }dbg.location(2010,21);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXClosure3928);
					lv_returnType_15_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(2010,44);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXClosureRule());
						        }
					       		set(
					       			current, 
					       			"returnType",
					        		lv_returnType_15_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(56);}
			dbg.location(2023,4);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2023:4: ( ( (lv_expression_16_0= ruleXBlockExpression ) ) |otherlv_17= ';' )
			int alt57=2;
			try { dbg.enterSubRule(57);
			try { dbg.enterDecision(57, decisionCanBacktrack[57]);

			int LA57_0 = input.LA(1);
			if ( (LA57_0==88) ) {
				alt57=1;
			}
			else if ( (LA57_0==44) ) {
				alt57=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 57, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(57);}

			switch (alt57) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2023:5: ( (lv_expression_16_0= ruleXBlockExpression ) )
					{
					dbg.location(2023,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2023:5: ( (lv_expression_16_0= ruleXBlockExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2024:3: (lv_expression_16_0= ruleXBlockExpression )
					{
					dbg.location(2024,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2024:3: (lv_expression_16_0= ruleXBlockExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2025:3: lv_expression_16_0= ruleXBlockExpression
					{
					dbg.location(2025,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXBlockExpressionParserRuleCall_9_0_0()); 
						    }dbg.location(2028,21);
					pushFollow(FOLLOW_ruleXBlockExpression_in_ruleXClosure3952);
					lv_expression_16_0=ruleXBlockExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(2028,44);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXClosureRule());
						        }
					       		set(
					       			current, 
					       			"expression",
					        		lv_expression_16_0, 
					        		"XBlockExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2042:7: otherlv_17= ';'
					{
					dbg.location(2042,17);
					otherlv_17=(Token)match(input,44,FOLLOW_44_in_ruleXClosure3970); if (state.failed) return current;dbg.location(2043,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_17, grammarAccess.getXClosureAccess().getSemicolonKeyword_9_1());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(57);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2047, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXClosure");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXClosure"



	// $ANTLR start "entryRuleFunctionID"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2054:1: entryRuleFunctionID returns [String current=null] :iv_ruleFunctionID= ruleFunctionID EOF ;
	public final String entryRuleFunctionID() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleFunctionID =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleFunctionID");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2054, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2055:2: (iv_ruleFunctionID= ruleFunctionID EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2056:2: iv_ruleFunctionID= ruleFunctionID EOF
			{
			dbg.location(2056,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getFunctionIDRule()); }dbg.location(2057,20);
			pushFollow(FOLLOW_ruleFunctionID_in_entryRuleFunctionID4008);
			iv_ruleFunctionID=ruleFunctionID();
			state._fsp--;
			if (state.failed) return current;dbg.location(2058,3);
			if ( state.backtracking==0 ) { current =iv_ruleFunctionID.getText(); }dbg.location(2059,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleFunctionID4019); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2060, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleFunctionID");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleFunctionID"



	// $ANTLR start "ruleFunctionID"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2063:1: ruleFunctionID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID |this_Operators_1= ruleOperators ) ;
	public final AntlrDatatypeRuleToken ruleFunctionID() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		AntlrDatatypeRuleToken this_ValidID_0 =null;
		AntlrDatatypeRuleToken this_Operators_1 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleFunctionID");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2063, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2066:28: ( (this_ValidID_0= ruleValidID |this_Operators_1= ruleOperators ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2067:5: (this_ValidID_0= ruleValidID |this_Operators_1= ruleOperators )
			{
			dbg.location(2067,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2067:5: (this_ValidID_0= ruleValidID |this_Operators_1= ruleOperators )
			int alt58=2;
			try { dbg.enterSubRule(58);
			try { dbg.enterDecision(58, decisionCanBacktrack[58]);

			int LA58_0 = input.LA(1);
			if ( (LA58_0==RULE_ID) ) {
				alt58=1;
			}
			else if ( ((LA58_0 >= 18 && LA58_0 <= 25)||(LA58_0 >= 28 && LA58_0 <= 32)||(LA58_0 >= 34 && LA58_0 <= 36)||(LA58_0 >= 39 && LA58_0 <= 40)||LA58_0==45||LA58_0==47||(LA58_0 >= 49 && LA58_0 <= 50)||(LA58_0 >= 52 && LA58_0 <= 53)||LA58_0==57||(LA58_0 >= 59 && LA58_0 <= 60)||(LA58_0 >= 89 && LA58_0 <= 91)||LA58_0==93) ) {
				alt58=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 58, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(58);}

			switch (alt58) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2068:5: this_ValidID_0= ruleValidID
					{
					dbg.location(2068,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getFunctionIDAccess().getValidIDParserRuleCall_0()); 
					    }dbg.location(2071,19);
					pushFollow(FOLLOW_ruleValidID_in_ruleFunctionID4066);
					this_ValidID_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(2071,35);
					if ( state.backtracking==0 ) {
							current.merge(this_ValidID_0);
					    }dbg.location(2075,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2080:5: this_Operators_1= ruleOperators
					{
					dbg.location(2080,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getFunctionIDAccess().getOperatorsParserRuleCall_1()); 
					    }dbg.location(2083,21);
					pushFollow(FOLLOW_ruleOperators_in_ruleFunctionID4099);
					this_Operators_1=ruleOperators();
					state._fsp--;
					if (state.failed) return current;dbg.location(2083,39);
					if ( state.backtracking==0 ) {
							current.merge(this_Operators_1);
					    }dbg.location(2087,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(58);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2091, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleFunctionID");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleFunctionID"



	// $ANTLR start "entryRuleOperators"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2098:1: entryRuleOperators returns [String current=null] :iv_ruleOperators= ruleOperators EOF ;
	public final String entryRuleOperators() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOperators =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOperators");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2098, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2099:2: (iv_ruleOperators= ruleOperators EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2100:2: iv_ruleOperators= ruleOperators EOF
			{
			dbg.location(2100,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOperatorsRule()); }dbg.location(2101,19);
			pushFollow(FOLLOW_ruleOperators_in_entryRuleOperators4145);
			iv_ruleOperators=ruleOperators();
			state._fsp--;
			if (state.failed) return current;dbg.location(2102,3);
			if ( state.backtracking==0 ) { current =iv_ruleOperators.getText(); }dbg.location(2103,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOperators4156); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2104, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOperators");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOperators"



	// $ANTLR start "ruleOperators"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2107:1: ruleOperators returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_OpMultiAssign_0= ruleOpMultiAssign |this_OpOr_1= ruleOpOr |this_OpAnd_2= ruleOpAnd |this_OpEquality_3= ruleOpEquality |this_OpCompare_4= ruleOpCompare |this_ShiftOp_5= ruleShiftOp |this_BinaryBitwiseOp_6= ruleBinaryBitwiseOp |this_OpMulti_7= ruleOpMulti |this_OpUnary_8= ruleOpUnary |this_IndexOp_9= ruleIndexOp ) ;
	public final AntlrDatatypeRuleToken ruleOperators() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		AntlrDatatypeRuleToken this_OpMultiAssign_0 =null;
		AntlrDatatypeRuleToken this_OpOr_1 =null;
		AntlrDatatypeRuleToken this_OpAnd_2 =null;
		AntlrDatatypeRuleToken this_OpEquality_3 =null;
		AntlrDatatypeRuleToken this_OpCompare_4 =null;
		AntlrDatatypeRuleToken this_ShiftOp_5 =null;
		AntlrDatatypeRuleToken this_BinaryBitwiseOp_6 =null;
		AntlrDatatypeRuleToken this_OpMulti_7 =null;
		AntlrDatatypeRuleToken this_OpUnary_8 =null;
		AntlrDatatypeRuleToken this_IndexOp_9 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOperators");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2107, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2110:28: ( (this_OpMultiAssign_0= ruleOpMultiAssign |this_OpOr_1= ruleOpOr |this_OpAnd_2= ruleOpAnd |this_OpEquality_3= ruleOpEquality |this_OpCompare_4= ruleOpCompare |this_ShiftOp_5= ruleShiftOp |this_BinaryBitwiseOp_6= ruleBinaryBitwiseOp |this_OpMulti_7= ruleOpMulti |this_OpUnary_8= ruleOpUnary |this_IndexOp_9= ruleIndexOp ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2111:5: (this_OpMultiAssign_0= ruleOpMultiAssign |this_OpOr_1= ruleOpOr |this_OpAnd_2= ruleOpAnd |this_OpEquality_3= ruleOpEquality |this_OpCompare_4= ruleOpCompare |this_ShiftOp_5= ruleShiftOp |this_BinaryBitwiseOp_6= ruleBinaryBitwiseOp |this_OpMulti_7= ruleOpMulti |this_OpUnary_8= ruleOpUnary |this_IndexOp_9= ruleIndexOp )
			{
			dbg.location(2111,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2111:5: (this_OpMultiAssign_0= ruleOpMultiAssign |this_OpOr_1= ruleOpOr |this_OpAnd_2= ruleOpAnd |this_OpEquality_3= ruleOpEquality |this_OpCompare_4= ruleOpCompare |this_ShiftOp_5= ruleShiftOp |this_BinaryBitwiseOp_6= ruleBinaryBitwiseOp |this_OpMulti_7= ruleOpMulti |this_OpUnary_8= ruleOpUnary |this_IndexOp_9= ruleIndexOp )
			int alt59=10;
			try { dbg.enterSubRule(59);
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			switch ( input.LA(1) ) {
			case 22:
			case 25:
			case 29:
			case 32:
			case 36:
			case 40:
			case 60:
			case 90:
				{
				alt59=1;
				}
				break;
			case 52:
				{
				switch ( input.LA(2) ) {
				case 53:
					{
					alt59=1;
					}
					break;
				case 52:
					{
					int LA59_12 = input.LA(3);
					if ( (LA59_12==53) ) {
						alt59=1;
					}
					else if ( (LA59_12==EOF||LA59_12==26||LA59_12==52) ) {
						alt59=6;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 59, 12, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case EOF:
				case 26:
					{
					alt59=5;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 59, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 45:
				{
				switch ( input.LA(2) ) {
				case 47:
					{
					alt59=1;
					}
					break;
				case EOF:
				case 26:
					{
					alt59=5;
					}
					break;
				case 45:
					{
					alt59=6;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 59, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 91:
				{
				alt59=2;
				}
				break;
			case 23:
				{
				alt59=3;
				}
				break;
			case 19:
			case 20:
			case 49:
			case 50:
				{
				alt59=4;
				}
				break;
			case 47:
			case 53:
				{
				alt59=5;
				}
				break;
			case 24:
			case 59:
			case 89:
				{
				alt59=7;
				}
				break;
			case 21:
			case 28:
			case 39:
				{
				alt59=8;
				}
				break;
			case 18:
			case 30:
			case 31:
			case 34:
			case 35:
			case 93:
				{
				alt59=9;
				}
				break;
			case 57:
				{
				alt59=10;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2112:5: this_OpMultiAssign_0= ruleOpMultiAssign
					{
					dbg.location(2112,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpMultiAssignParserRuleCall_0()); 
					    }dbg.location(2115,25);
					pushFollow(FOLLOW_ruleOpMultiAssign_in_ruleOperators4203);
					this_OpMultiAssign_0=ruleOpMultiAssign();
					state._fsp--;
					if (state.failed) return current;dbg.location(2115,47);
					if ( state.backtracking==0 ) {
							current.merge(this_OpMultiAssign_0);
					    }dbg.location(2119,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2124:5: this_OpOr_1= ruleOpOr
					{
					dbg.location(2124,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpOrParserRuleCall_1()); 
					    }dbg.location(2127,16);
					pushFollow(FOLLOW_ruleOpOr_in_ruleOperators4236);
					this_OpOr_1=ruleOpOr();
					state._fsp--;
					if (state.failed) return current;dbg.location(2127,29);
					if ( state.backtracking==0 ) {
							current.merge(this_OpOr_1);
					    }dbg.location(2131,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2136:5: this_OpAnd_2= ruleOpAnd
					{
					dbg.location(2136,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpAndParserRuleCall_2()); 
					    }dbg.location(2139,17);
					pushFollow(FOLLOW_ruleOpAnd_in_ruleOperators4269);
					this_OpAnd_2=ruleOpAnd();
					state._fsp--;
					if (state.failed) return current;dbg.location(2139,31);
					if ( state.backtracking==0 ) {
							current.merge(this_OpAnd_2);
					    }dbg.location(2143,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2148:5: this_OpEquality_3= ruleOpEquality
					{
					dbg.location(2148,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpEqualityParserRuleCall_3()); 
					    }dbg.location(2151,22);
					pushFollow(FOLLOW_ruleOpEquality_in_ruleOperators4302);
					this_OpEquality_3=ruleOpEquality();
					state._fsp--;
					if (state.failed) return current;dbg.location(2151,41);
					if ( state.backtracking==0 ) {
							current.merge(this_OpEquality_3);
					    }dbg.location(2155,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2160:5: this_OpCompare_4= ruleOpCompare
					{
					dbg.location(2160,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpCompareParserRuleCall_4()); 
					    }dbg.location(2163,21);
					pushFollow(FOLLOW_ruleOpCompare_in_ruleOperators4335);
					this_OpCompare_4=ruleOpCompare();
					state._fsp--;
					if (state.failed) return current;dbg.location(2163,39);
					if ( state.backtracking==0 ) {
							current.merge(this_OpCompare_4);
					    }dbg.location(2167,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2172:5: this_ShiftOp_5= ruleShiftOp
					{
					dbg.location(2172,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getShiftOpParserRuleCall_5()); 
					    }dbg.location(2175,19);
					pushFollow(FOLLOW_ruleShiftOp_in_ruleOperators4368);
					this_ShiftOp_5=ruleShiftOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(2175,35);
					if ( state.backtracking==0 ) {
							current.merge(this_ShiftOp_5);
					    }dbg.location(2179,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2184:5: this_BinaryBitwiseOp_6= ruleBinaryBitwiseOp
					{
					dbg.location(2184,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getBinaryBitwiseOpParserRuleCall_6()); 
					    }dbg.location(2187,27);
					pushFollow(FOLLOW_ruleBinaryBitwiseOp_in_ruleOperators4401);
					this_BinaryBitwiseOp_6=ruleBinaryBitwiseOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(2187,51);
					if ( state.backtracking==0 ) {
							current.merge(this_BinaryBitwiseOp_6);
					    }dbg.location(2191,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2196:5: this_OpMulti_7= ruleOpMulti
					{
					dbg.location(2196,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpMultiParserRuleCall_7()); 
					    }dbg.location(2199,19);
					pushFollow(FOLLOW_ruleOpMulti_in_ruleOperators4434);
					this_OpMulti_7=ruleOpMulti();
					state._fsp--;
					if (state.failed) return current;dbg.location(2199,35);
					if ( state.backtracking==0 ) {
							current.merge(this_OpMulti_7);
					    }dbg.location(2203,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2208:5: this_OpUnary_8= ruleOpUnary
					{
					dbg.location(2208,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getOpUnaryParserRuleCall_8()); 
					    }dbg.location(2211,19);
					pushFollow(FOLLOW_ruleOpUnary_in_ruleOperators4467);
					this_OpUnary_8=ruleOpUnary();
					state._fsp--;
					if (state.failed) return current;dbg.location(2211,35);
					if ( state.backtracking==0 ) {
							current.merge(this_OpUnary_8);
					    }dbg.location(2215,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2220:5: this_IndexOp_9= ruleIndexOp
					{
					dbg.location(2220,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getOperatorsAccess().getIndexOpParserRuleCall_9()); 
					    }dbg.location(2223,19);
					pushFollow(FOLLOW_ruleIndexOp_in_ruleOperators4500);
					this_IndexOp_9=ruleIndexOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(2223,35);
					if ( state.backtracking==0 ) {
							current.merge(this_IndexOp_9);
					    }dbg.location(2227,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(59);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2231, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOperators");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOperators"



	// $ANTLR start "entryRuleCommonModifier"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2240:1: entryRuleCommonModifier returns [String current=null] :iv_ruleCommonModifier= ruleCommonModifier EOF ;
	public final String entryRuleCommonModifier() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleCommonModifier =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleCommonModifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2240, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2241:2: (iv_ruleCommonModifier= ruleCommonModifier EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2242:2: iv_ruleCommonModifier= ruleCommonModifier EOF
			{
			dbg.location(2242,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getCommonModifierRule()); }dbg.location(2243,24);
			pushFollow(FOLLOW_ruleCommonModifier_in_entryRuleCommonModifier4548);
			iv_ruleCommonModifier=ruleCommonModifier();
			state._fsp--;
			if (state.failed) return current;dbg.location(2244,3);
			if ( state.backtracking==0 ) { current =iv_ruleCommonModifier.getText(); }dbg.location(2245,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleCommonModifier4559); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2246, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleCommonModifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleCommonModifier"



	// $ANTLR start "ruleCommonModifier"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2249:1: ruleCommonModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'private' |kw= 'static' |kw= 'const' |kw= 'override' ) ;
	public final AntlrDatatypeRuleToken ruleCommonModifier() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleCommonModifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2249, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2252:28: ( (kw= 'private' |kw= 'static' |kw= 'const' |kw= 'override' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2253:2: (kw= 'private' |kw= 'static' |kw= 'const' |kw= 'override' )
			{
			dbg.location(2253,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2253:2: (kw= 'private' |kw= 'static' |kw= 'const' |kw= 'override' )
			int alt60=4;
			try { dbg.enterSubRule(60);
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			switch ( input.LA(1) ) {
			case 81:
				{
				alt60=1;
				}
				break;
			case 83:
				{
				alt60=2;
				}
				break;
			case 66:
				{
				alt60=3;
				}
				break;
			case 80:
				{
				alt60=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2254:2: kw= 'private'
					{
					dbg.location(2254,4);
					kw=(Token)match(input,81,FOLLOW_81_in_ruleCommonModifier4597); if (state.failed) return current;dbg.location(2255,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPrivateKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2261:2: kw= 'static'
					{
					dbg.location(2261,4);
					kw=(Token)match(input,83,FOLLOW_83_in_ruleCommonModifier4616); if (state.failed) return current;dbg.location(2262,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getCommonModifierAccess().getStaticKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2268:2: kw= 'const'
					{
					dbg.location(2268,4);
					kw=(Token)match(input,66,FOLLOW_66_in_ruleCommonModifier4635); if (state.failed) return current;dbg.location(2269,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getCommonModifierAccess().getConstKeyword_2()); 
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2275:2: kw= 'override'
					{
					dbg.location(2275,4);
					kw=(Token)match(input,80,FOLLOW_80_in_ruleCommonModifier4654); if (state.failed) return current;dbg.location(2276,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getCommonModifierAccess().getOverrideKeyword_3()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(60);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2281, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleCommonModifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleCommonModifier"



	// $ANTLR start "entryRuleValidID"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2288:1: entryRuleValidID returns [String current=null] :iv_ruleValidID= ruleValidID EOF ;
	public final String entryRuleValidID() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleValidID =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleValidID");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2288, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2289:2: (iv_ruleValidID= ruleValidID EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2290:2: iv_ruleValidID= ruleValidID EOF
			{
			dbg.location(2290,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getValidIDRule()); }dbg.location(2291,17);
			pushFollow(FOLLOW_ruleValidID_in_entryRuleValidID4695);
			iv_ruleValidID=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(2292,3);
			if ( state.backtracking==0 ) { current =iv_ruleValidID.getText(); }dbg.location(2293,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleValidID4706); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2294, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleValidID");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleValidID"



	// $ANTLR start "ruleValidID"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2297:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
	public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token this_ID_0=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleValidID");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2297, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2300:28: (this_ID_0= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2301:5: this_ID_0= RULE_ID
			{
			dbg.location(2301,14);
			this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleValidID4745); if (state.failed) return current;dbg.location(2301,26);
			if ( state.backtracking==0 ) {
					current.merge(this_ID_0);
			    }dbg.location(2305,5);
			if ( state.backtracking==0 ) { 
			    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2309, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleValidID");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleValidID"



	// $ANTLR start "entryRuleFeatureCallID"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2316:1: entryRuleFeatureCallID returns [String current=null] :iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
	public final String entryRuleFeatureCallID() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleFeatureCallID =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleFeatureCallID");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2316, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2317:2: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2318:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
			{
			dbg.location(2318,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getFeatureCallIDRule()); }dbg.location(2319,23);
			pushFollow(FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID4790);
			iv_ruleFeatureCallID=ruleFeatureCallID();
			state._fsp--;
			if (state.failed) return current;dbg.location(2320,3);
			if ( state.backtracking==0 ) { current =iv_ruleFeatureCallID.getText(); }dbg.location(2321,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleFeatureCallID4801); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2322, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleFeatureCallID");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleFeatureCallID"



	// $ANTLR start "ruleFeatureCallID"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2325:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
	public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token this_ID_0=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleFeatureCallID");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2325, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2328:28: (this_ID_0= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2329:5: this_ID_0= RULE_ID
			{
			dbg.location(2329,14);
			this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFeatureCallID4840); if (state.failed) return current;dbg.location(2329,26);
			if ( state.backtracking==0 ) {
					current.merge(this_ID_0);
			    }dbg.location(2333,5);
			if ( state.backtracking==0 ) { 
			    newLeafNode(this_ID_0, grammarAccess.getFeatureCallIDAccess().getIDTerminalRuleCall()); 
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2337, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleFeatureCallID");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleFeatureCallID"



	// $ANTLR start "entryRuleParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2344:1: entryRuleParameter returns [EObject current=null] :iv_ruleParameter= ruleParameter EOF ;
	public final EObject entryRuleParameter() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleParameter =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2344, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2345:2: (iv_ruleParameter= ruleParameter EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2346:2: iv_ruleParameter= ruleParameter EOF
			{
			dbg.location(2346,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getParameterRule()); }dbg.location(2347,19);
			pushFollow(FOLLOW_ruleParameter_in_entryRuleParameter4884);
			iv_ruleParameter=ruleParameter();
			state._fsp--;
			if (state.failed) return current;dbg.location(2348,3);
			if ( state.backtracking==0 ) { current =iv_ruleParameter; }dbg.location(2349,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleParameter4894); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2350, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleParameter"



	// $ANTLR start "ruleParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2353:1: ruleParameter returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_varArg_2_0= '...' ) )? ( (lv_name_3_0= ruleValidID ) ) ) ;
	public final EObject ruleParameter() throws RecognitionException {
		EObject current = null;


		Token lv_varArg_2_0=null;
		EObject lv_annotations_0_0 =null;
		EObject lv_parameterType_1_0 =null;
		AntlrDatatypeRuleToken lv_name_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2353, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2356:28: ( ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_varArg_2_0= '...' ) )? ( (lv_name_3_0= ruleValidID ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2357:2: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_varArg_2_0= '...' ) )? ( (lv_name_3_0= ruleValidID ) ) )
			{
			dbg.location(2357,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2357:2: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_varArg_2_0= '...' ) )? ( (lv_name_3_0= ruleValidID ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2357:2: ( (lv_annotations_0_0= ruleXAnnotation ) )* ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_varArg_2_0= '...' ) )? ( (lv_name_3_0= ruleValidID ) )
			{
			dbg.location(2357,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2357:2: ( (lv_annotations_0_0= ruleXAnnotation ) )*
			try { dbg.enterSubRule(61);

			loop61:
			while (true) {
				int alt61=2;
				try { dbg.enterDecision(61, decisionCanBacktrack[61]);

				int LA61_0 = input.LA(1);
				if ( (LA61_0==56) ) {
					alt61=1;
				}

				} finally {dbg.exitDecision(61);}

				switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2358:3: (lv_annotations_0_0= ruleXAnnotation )
					{
					dbg.location(2358,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2358:3: (lv_annotations_0_0= ruleXAnnotation )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2359:3: lv_annotations_0_0= ruleXAnnotation
					{
					dbg.location(2359,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getParameterAccess().getAnnotationsXAnnotationParserRuleCall_0_0()); 
						    }dbg.location(2362,21);
					pushFollow(FOLLOW_ruleXAnnotation_in_ruleParameter4940);
					lv_annotations_0_0=ruleXAnnotation();
					state._fsp--;
					if (state.failed) return current;dbg.location(2362,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getParameterRule());
						        }
					       		add(
					       			current, 
					       			"annotations",
					        		lv_annotations_0_0, 
					        		"XAnnotation");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop61;
				}
			}
			} finally {dbg.exitSubRule(61);}
			dbg.location(2375,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2375:3: ( (lv_parameterType_1_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2376:3: (lv_parameterType_1_0= ruleJvmTypeReference )
			{
			dbg.location(2376,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2376:3: (lv_parameterType_1_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2377:3: lv_parameterType_1_0= ruleJvmTypeReference
			{
			dbg.location(2377,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_1_0()); 
				    }dbg.location(2380,23);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleParameter4962);
			lv_parameterType_1_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(2380,46);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getParameterRule());
				        }
			       		set(
			       			current, 
			       			"parameterType",
			        		lv_parameterType_1_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(2393,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2393:2: ( (lv_varArg_2_0= '...' ) )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==38) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2394:3: (lv_varArg_2_0= '...' )
					{
					dbg.location(2394,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2394:3: (lv_varArg_2_0= '...' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2395:3: lv_varArg_2_0= '...'
					{
					dbg.location(2395,16);
					lv_varArg_2_0=(Token)match(input,38,FOLLOW_38_in_ruleParameter4980); if (state.failed) return current;dbg.location(2396,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_varArg_2_0, grammarAccess.getParameterAccess().getVarArgFullStopFullStopFullStopKeyword_2_0());
					    }dbg.location(2400,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getParameterRule());
						        }
					       		setWithLastConsumed(current, "varArg", true, "...");
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(2408,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2408:3: ( (lv_name_3_0= ruleValidID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2409:3: (lv_name_3_0= ruleValidID )
			{
			dbg.location(2409,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2409:3: (lv_name_3_0= ruleValidID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2410:3: lv_name_3_0= ruleValidID
			{
			dbg.location(2410,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getParameterAccess().getNameValidIDParserRuleCall_3_0()); 
				    }dbg.location(2413,14);
			pushFollow(FOLLOW_ruleValidID_in_ruleParameter5015);
			lv_name_3_0=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(2413,28);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getParameterRule());
				        }
			       		set(
			       			current, 
			       			"name",
			        		lv_name_3_0, 
			        		"ValidID");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2427, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleParameter"



	// $ANTLR start "entryRuleXVariableDeclaration"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2434:1: entryRuleXVariableDeclaration returns [EObject current=null] :iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
	public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXVariableDeclaration =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXVariableDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2434, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2435:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2436:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
			{
			dbg.location(2436,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }dbg.location(2437,30);
			pushFollow(FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration5051);
			iv_ruleXVariableDeclaration=ruleXVariableDeclaration();
			state._fsp--;
			if (state.failed) return current;dbg.location(2438,3);
			if ( state.backtracking==0 ) { current =iv_ruleXVariableDeclaration; }dbg.location(2439,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXVariableDeclaration5061); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2440, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXVariableDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXVariableDeclaration"



	// $ANTLR start "ruleXVariableDeclaration"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2443:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( (lv_exported_1_0= 'export' ) )? ( (lv_writeable_2_0= 'const' ) )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
	public final EObject ruleXVariableDeclaration() throws RecognitionException {
		EObject current = null;


		Token lv_exported_1_0=null;
		Token lv_writeable_2_0=null;
		Token otherlv_6=null;
		EObject lv_type_3_0 =null;
		AntlrDatatypeRuleToken lv_name_4_0 =null;
		AntlrDatatypeRuleToken lv_name_5_0 =null;
		EObject lv_right_7_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXVariableDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2443, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2446:28: ( ( () ( (lv_exported_1_0= 'export' ) )? ( (lv_writeable_2_0= 'const' ) )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2447:2: ( () ( (lv_exported_1_0= 'export' ) )? ( (lv_writeable_2_0= 'const' ) )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
			{
			dbg.location(2447,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2447:2: ( () ( (lv_exported_1_0= 'export' ) )? ( (lv_writeable_2_0= 'const' ) )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2447:2: () ( (lv_exported_1_0= 'export' ) )? ( (lv_writeable_2_0= 'const' ) )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
			{
			dbg.location(2447,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2447:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2448:5: 
			{
			dbg.location(2448,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
			            current);
			    }
			}
			dbg.location(2453,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2453:2: ( (lv_exported_1_0= 'export' ) )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			int LA63_0 = input.LA(1);
			if ( (LA63_0==68) ) {
				alt63=1;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2454:3: (lv_exported_1_0= 'export' )
					{
					dbg.location(2454,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2454:3: (lv_exported_1_0= 'export' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2455:3: lv_exported_1_0= 'export'
					{
					dbg.location(2455,18);
					lv_exported_1_0=(Token)match(input,68,FOLLOW_68_in_ruleXVariableDeclaration5113); if (state.failed) return current;dbg.location(2456,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_exported_1_0, grammarAccess.getXVariableDeclarationAccess().getExportedExportKeyword_1_0());
					    }dbg.location(2460,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
						        }
					       		setWithLastConsumed(current, "exported", true, "export");
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(2468,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2468:3: ( (lv_writeable_2_0= 'const' ) )?
			int alt64=2;
			try { dbg.enterSubRule(64);
			try { dbg.enterDecision(64, decisionCanBacktrack[64]);

			int LA64_0 = input.LA(1);
			if ( (LA64_0==66) ) {
				alt64=1;
			}
			} finally {dbg.exitDecision(64);}

			switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2469:3: (lv_writeable_2_0= 'const' )
					{
					dbg.location(2469,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2469:3: (lv_writeable_2_0= 'const' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2470:3: lv_writeable_2_0= 'const'
					{
					dbg.location(2470,19);
					lv_writeable_2_0=(Token)match(input,66,FOLLOW_66_in_ruleXVariableDeclaration5145); if (state.failed) return current;dbg.location(2471,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_writeable_2_0, grammarAccess.getXVariableDeclarationAccess().getWriteableConstKeyword_2_0());
					    }dbg.location(2475,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
						        }
					       		setWithLastConsumed(current, "writeable", true, "const");
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(64);}
			dbg.location(2483,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==RULE_ID) ) {
				int LA65_1 = input.LA(2);
				if ( (LA65_1==37) && (synpred3_InternalXAML())) {
					alt65=1;
				}
				else if ( (LA65_1==45) && (synpred3_InternalXAML())) {
					alt65=1;
				}
				else if ( (LA65_1==57) && (synpred3_InternalXAML())) {
					alt65=1;
				}
				else if ( (LA65_1==RULE_ID) && (synpred3_InternalXAML())) {
					alt65=1;
				}
				else if ( (LA65_1==EOF||LA65_1==RULE_STRING||LA65_1==18||(LA65_1 >= 30 && LA65_1 <= 31)||(LA65_1 >= 33 && LA65_1 <= 35)||LA65_1==44||LA65_1==48||LA65_1==56||LA65_1==61||(LA65_1 >= 65 && LA65_1 <= 66)||LA65_1==68||LA65_1==77||(LA65_1 >= 80 && LA65_1 <= 81)||LA65_1==83||(LA65_1 >= 87 && LA65_1 <= 88)||(LA65_1 >= 92 && LA65_1 <= 93)) ) {
					alt65=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 65, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA65_0==26) && (synpred3_InternalXAML())) {
				alt65=1;
			}
			else if ( (LA65_0==51) && (synpred3_InternalXAML())) {
				alt65=1;
			}

			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
					{
					dbg.location(2483,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
					{
					dbg.location(2491,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2491:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2491:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
					{
					dbg.location(2491,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2491:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2492:3: (lv_type_3_0= ruleJvmTypeReference )
					{
					dbg.location(2492,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2492:3: (lv_type_3_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2493:3: lv_type_3_0= ruleJvmTypeReference
					{
					dbg.location(2493,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_3_0_0_0_0()); 
						    }dbg.location(2496,14);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration5206);
					lv_type_3_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(2496,37);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						        }
					       		set(
					       			current, 
					       			"type",
					        		lv_type_3_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(2509,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2509:2: ( (lv_name_4_0= ruleValidID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2510:3: (lv_name_4_0= ruleValidID )
					{
					dbg.location(2510,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2510:3: (lv_name_4_0= ruleValidID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2511:3: lv_name_4_0= ruleValidID
					{
					dbg.location(2511,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_3_0_0_1_0()); 
						    }dbg.location(2514,14);
					pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration5227);
					lv_name_4_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(2514,28);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						        }
					       		set(
					       			current, 
					       			"name",
					        		lv_name_4_0, 
					        		"ValidID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2528:6: ( (lv_name_5_0= ruleValidID ) )
					{
					dbg.location(2528,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2528:6: ( (lv_name_5_0= ruleValidID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2529:3: (lv_name_5_0= ruleValidID )
					{
					dbg.location(2529,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2529:3: (lv_name_5_0= ruleValidID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2530:3: lv_name_5_0= ruleValidID
					{
					dbg.location(2530,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_3_1_0()); 
						    }dbg.location(2533,14);
					pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration5256);
					lv_name_5_0=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(2533,28);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						        }
					       		set(
					       			current, 
					       			"name",
					        		lv_name_5_0, 
					        		"ValidID");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(2546,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2546:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			int LA66_0 = input.LA(1);
			if ( (LA66_0==48) ) {
				alt66=1;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2546:5: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
					{
					dbg.location(2546,14);
					otherlv_6=(Token)match(input,48,FOLLOW_48_in_ruleXVariableDeclaration5270); if (state.failed) return current;dbg.location(2547,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_4_0());
					    }dbg.location(2550,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2550:3: ( (lv_right_7_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2551:3: (lv_right_7_0= ruleXExpression )
					{
					dbg.location(2551,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2551:3: (lv_right_7_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2552:3: lv_right_7_0= ruleXExpression
					{
					dbg.location(2552,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_4_1_0()); 
						    }dbg.location(2555,15);
					pushFollow(FOLLOW_ruleXExpression_in_ruleXVariableDeclaration5291);
					lv_right_7_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(2555,33);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						        }
					       		set(
					       			current, 
					       			"right",
					        		lv_right_7_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(66);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2569, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXVariableDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXVariableDeclaration"



	// $ANTLR start "entryRuleXAnnotation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2578:1: entryRuleXAnnotation returns [EObject current=null] :iv_ruleXAnnotation= ruleXAnnotation EOF ;
	public final EObject entryRuleXAnnotation() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXAnnotation =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXAnnotation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2578, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2579:2: (iv_ruleXAnnotation= ruleXAnnotation EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2580:2: iv_ruleXAnnotation= ruleXAnnotation EOF
			{
			dbg.location(2580,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXAnnotationRule()); }dbg.location(2581,21);
			pushFollow(FOLLOW_ruleXAnnotation_in_entryRuleXAnnotation5331);
			iv_ruleXAnnotation=ruleXAnnotation();
			state._fsp--;
			if (state.failed) return current;dbg.location(2582,3);
			if ( state.backtracking==0 ) { current =iv_ruleXAnnotation; }dbg.location(2583,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXAnnotation5341); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2584, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXAnnotation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXAnnotation"



	// $ANTLR start "ruleXAnnotation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2587:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')' )? ) ;
	public final EObject ruleXAnnotation() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_3=null;
		Token otherlv_5=null;
		Token otherlv_8=null;
		EObject lv_values_4_0 =null;
		EObject lv_values_6_0 =null;
		EObject lv_value_7_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXAnnotation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2587, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2590:28: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')' )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2591:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')' )? )
			{
			dbg.location(2591,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2591:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')' )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2591:2: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')' )?
			{
			dbg.location(2591,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2591:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2592:5: 
			{
			dbg.location(2592,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXAnnotationAccess().getJvmAnnotationReferenceAction_0(),
			            current);
			    }
			}
			dbg.location(2597,12);
			otherlv_1=(Token)match(input,56,FOLLOW_56_in_ruleXAnnotation5387); if (state.failed) return current;dbg.location(2598,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
			    }dbg.location(2601,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2601:3: ( ( ruleQualifiedName ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2602:3: ( ruleQualifiedName )
			{
			dbg.location(2602,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2602:3: ( ruleQualifiedName )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2603:3: ruleQualifiedName
			{
			dbg.location(2603,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getXAnnotationRule());
				        }
			        }dbg.location(2608,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationJvmAnnotationTypeCrossReference_2_0()); 
				    }dbg.location(2611,3);
			pushFollow(FOLLOW_ruleQualifiedName_in_ruleXAnnotation5410);
			ruleQualifiedName();
			state._fsp--;
			if (state.failed) return current;dbg.location(2611,22);
			if ( state.backtracking==0 ) { 
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(2616,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2616:2: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')' )?
			int alt69=2;
			try { dbg.enterSubRule(69);
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			int LA69_0 = input.LA(1);
			if ( (LA69_0==26) ) {
				int LA69_1 = input.LA(2);
				if ( (LA69_1==RULE_ID) ) {
					int LA69_3 = input.LA(3);
					if ( (LA69_3==48) && (synpred4_InternalXAML())) {
						alt69=1;
					}
				}
				else if ( (LA69_1==78) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==68) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==72) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==70) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==85) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==RULE_HEX) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==RULE_INT) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==RULE_DECIMAL) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==79) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==RULE_STRING) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==86) && (synpred4_InternalXAML())) {
					alt69=1;
				}
				else if ( (LA69_1==27) ) {
					int LA69_15 = input.LA(3);
					if ( (synpred4_InternalXAML()) ) {
						alt69=1;
					}
				}
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2616:3: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )? otherlv_8= ')'
					{
					dbg.location(2616,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2616:3: ( ( '(' )=>otherlv_3= '(' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2616:4: ( '(' )=>otherlv_3= '('
					{
					dbg.location(2617,14);
					otherlv_3=(Token)match(input,26,FOLLOW_26_in_ruleXAnnotation5431); if (state.failed) return current;dbg.location(2618,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
					    }
					}
					dbg.location(2621,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* ) | ( (lv_value_7_0= ruleXLiteral ) ) )?
					int alt68=3;
					try { dbg.enterSubRule(68);
					try { dbg.enterDecision(68, decisionCanBacktrack[68]);

					int LA68_0 = input.LA(1);
					if ( (LA68_0==RULE_ID) && (synpred5_InternalXAML())) {
						alt68=1;
					}
					else if ( ((LA68_0 >= RULE_DECIMAL && LA68_0 <= RULE_HEX)||LA68_0==RULE_INT||LA68_0==RULE_STRING||LA68_0==68||LA68_0==70||LA68_0==72||(LA68_0 >= 78 && LA68_0 <= 79)||(LA68_0 >= 85 && LA68_0 <= 86)) ) {
						alt68=2;
					}
					} finally {dbg.exitDecision(68);}

					switch (alt68) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:3: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* )
							{
							dbg.location(2621,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:3: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )* )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:4: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )*
							{
							dbg.location(2621,4);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:4: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:5: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_4_0= ruleJvmAnnotationValue )
							{
							dbg.location(2627,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2627:3: (lv_values_4_0= ruleJvmAnnotationValue )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2628:3: lv_values_4_0= ruleJvmAnnotationValue
							{
							dbg.location(2628,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXAnnotationAccess().getValuesJvmAnnotationValueParserRuleCall_3_1_0_0_0()); 
								    }dbg.location(2631,16);
							pushFollow(FOLLOW_ruleJvmAnnotationValue_in_ruleXAnnotation5475);
							lv_values_4_0=ruleJvmAnnotationValue();
							state._fsp--;
							if (state.failed) return current;dbg.location(2631,41);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
								        }
							       		add(
							       			current, 
							       			"values",
							        		lv_values_4_0, 
							        		"JvmAnnotationValue");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(2644,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2644:2: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) ) )*
							try { dbg.enterSubRule(67);

							loop67:
							while (true) {
								int alt67=2;
								try { dbg.enterDecision(67, decisionCanBacktrack[67]);

								int LA67_0 = input.LA(1);
								if ( (LA67_0==33) ) {
									alt67=1;
								}

								} finally {dbg.exitDecision(67);}

								switch (alt67) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2644:4: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) )
									{
									dbg.location(2644,13);
									otherlv_5=(Token)match(input,33,FOLLOW_33_in_ruleXAnnotation5488); if (state.failed) return current;dbg.location(2645,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
									    }dbg.location(2648,2);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2648:2: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2648:2: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_values_6_0= ruleJvmAnnotationValue )
									{
									dbg.location(2654,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2654:3: (lv_values_6_0= ruleJvmAnnotationValue )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2655:3: lv_values_6_0= ruleJvmAnnotationValue
									{
									dbg.location(2655,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getXAnnotationAccess().getValuesJvmAnnotationValueParserRuleCall_3_1_0_1_1_0()); 
										    }dbg.location(2658,16);
									pushFollow(FOLLOW_ruleJvmAnnotationValue_in_ruleXAnnotation5529);
									lv_values_6_0=ruleJvmAnnotationValue();
									state._fsp--;
									if (state.failed) return current;dbg.location(2658,41);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
										        }
									       		add(
									       			current, 
									       			"values",
									        		lv_values_6_0, 
									        		"JvmAnnotationValue");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop67;
								}
							}
							} finally {dbg.exitSubRule(67);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2672:6: ( (lv_value_7_0= ruleXLiteral ) )
							{
							dbg.location(2672,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2672:6: ( (lv_value_7_0= ruleXLiteral ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2673:3: (lv_value_7_0= ruleXLiteral )
							{
							dbg.location(2673,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2673:3: (lv_value_7_0= ruleXLiteral )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2674:3: lv_value_7_0= ruleXLiteral
							{
							dbg.location(2674,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXLiteralParserRuleCall_3_1_1_0()); 
								    }dbg.location(2677,15);
							pushFollow(FOLLOW_ruleXLiteral_in_ruleXAnnotation5559);
							lv_value_7_0=ruleXLiteral();
							state._fsp--;
							if (state.failed) return current;dbg.location(2677,30);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
								        }
							       		set(
							       			current, 
							       			"value",
							        		lv_value_7_0, 
							        		"XLiteral");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

					}
					} finally {dbg.exitSubRule(68);}
					dbg.location(2690,14);
					otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleXAnnotation5573); if (state.failed) return current;dbg.location(2691,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(69);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2695, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXAnnotation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXAnnotation"



	// $ANTLR start "entryRuleJvmAnnotationValue"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2702:1: entryRuleJvmAnnotationValue returns [EObject current=null] :iv_ruleJvmAnnotationValue= ruleJvmAnnotationValue EOF ;
	public final EObject entryRuleJvmAnnotationValue() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmAnnotationValue =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmAnnotationValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2702, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2703:2: (iv_ruleJvmAnnotationValue= ruleJvmAnnotationValue EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2704:2: iv_ruleJvmAnnotationValue= ruleJvmAnnotationValue EOF
			{
			dbg.location(2704,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmAnnotationValueRule()); }dbg.location(2705,28);
			pushFollow(FOLLOW_ruleJvmAnnotationValue_in_entryRuleJvmAnnotationValue5611);
			iv_ruleJvmAnnotationValue=ruleJvmAnnotationValue();
			state._fsp--;
			if (state.failed) return current;dbg.location(2706,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmAnnotationValue; }dbg.location(2707,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmAnnotationValue5621); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2708, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmAnnotationValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmAnnotationValue"



	// $ANTLR start "ruleJvmAnnotationValue"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2711:1: ruleJvmAnnotationValue returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXLiteral ) ) ) ;
	public final EObject ruleJvmAnnotationValue() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		EObject lv_value_2_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmAnnotationValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2711, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2714:28: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXLiteral ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2715:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXLiteral ) ) )
			{
			dbg.location(2715,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2715:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXLiteral ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2715:2: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXLiteral ) )
			{
			dbg.location(2715,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2715:2: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2715:3: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
			{
			dbg.location(2720,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2720:5: ( ( ( ruleValidID ) ) otherlv_1= '=' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2720:6: ( ( ruleValidID ) ) otherlv_1= '='
			{
			dbg.location(2720,6);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2720:6: ( ( ruleValidID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2721:3: ( ruleValidID )
			{
			dbg.location(2721,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2721:3: ( ruleValidID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2722:3: ruleValidID
			{
			dbg.location(2722,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getJvmAnnotationValueRule());
				        }
			        }dbg.location(2727,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmAnnotationValueAccess().getOperationJvmOperationCrossReference_0_0_0_0()); 
				    }dbg.location(2730,3);
			pushFollow(FOLLOW_ruleValidID_in_ruleJvmAnnotationValue5691);
			ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(2730,16);
			if ( state.backtracking==0 ) { 
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(2735,12);
			otherlv_1=(Token)match(input,48,FOLLOW_48_in_ruleJvmAnnotationValue5703); if (state.failed) return current;dbg.location(2736,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getJvmAnnotationValueAccess().getEqualsSignKeyword_0_0_1());
			    }
			}

			}
			dbg.location(2739,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2739:3: ( (lv_value_2_0= ruleXLiteral ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2740:3: (lv_value_2_0= ruleXLiteral )
			{
			dbg.location(2740,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2740:3: (lv_value_2_0= ruleXLiteral )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2741:3: lv_value_2_0= ruleXLiteral
			{
			dbg.location(2741,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmAnnotationValueAccess().getValueXLiteralParserRuleCall_1_0()); 
				    }dbg.location(2744,15);
			pushFollow(FOLLOW_ruleXLiteral_in_ruleJvmAnnotationValue5726);
			lv_value_2_0=ruleXLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(2744,30);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getJvmAnnotationValueRule());
				        }
			       		set(
			       			current, 
			       			"value",
			        		lv_value_2_0, 
			        		"XLiteral");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2758, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmAnnotationValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmAnnotationValue"



	// $ANTLR start "entryRuleXExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2765:1: entryRuleXExpression returns [EObject current=null] :iv_ruleXExpression= ruleXExpression EOF ;
	public final EObject entryRuleXExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2765, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2766:2: (iv_ruleXExpression= ruleXExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2767:2: iv_ruleXExpression= ruleXExpression EOF
			{
			dbg.location(2767,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXExpressionRule()); }dbg.location(2768,21);
			pushFollow(FOLLOW_ruleXExpression_in_entryRuleXExpression5762);
			iv_ruleXExpression=ruleXExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(2769,3);
			if ( state.backtracking==0 ) { current =iv_ruleXExpression; }dbg.location(2770,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXExpression5772); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2771, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXExpression"



	// $ANTLR start "ruleXExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2774:1: ruleXExpression returns [EObject current=null] :this_XAssignment_0= ruleXAssignment ;
	public final EObject ruleXExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XAssignment_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2774, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2777:28: (this_XAssignment_0= ruleXAssignment )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2779:5: this_XAssignment_0= ruleXAssignment
			{
			dbg.location(2779,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
			    }dbg.location(2782,23);
			pushFollow(FOLLOW_ruleXAssignment_in_ruleXExpression5818);
			this_XAssignment_0=ruleXAssignment();
			state._fsp--;
			if (state.failed) return current;dbg.location(2783,5);
			if ( state.backtracking==0 ) { 
			        current = this_XAssignment_0; 
			        afterParserOrEnumRuleCall();
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2788, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXExpression"



	// $ANTLR start "entryRuleXAssignment"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2795:1: entryRuleXAssignment returns [EObject current=null] :iv_ruleXAssignment= ruleXAssignment EOF ;
	public final EObject entryRuleXAssignment() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXAssignment =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXAssignment");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2795, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2796:2: (iv_ruleXAssignment= ruleXAssignment EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2797:2: iv_ruleXAssignment= ruleXAssignment EOF
			{
			dbg.location(2797,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXAssignmentRule()); }dbg.location(2798,21);
			pushFollow(FOLLOW_ruleXAssignment_in_entryRuleXAssignment5852);
			iv_ruleXAssignment=ruleXAssignment();
			state._fsp--;
			if (state.failed) return current;dbg.location(2799,3);
			if ( state.backtracking==0 ) { current =iv_ruleXAssignment; }dbg.location(2800,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXAssignment5862); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2801, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXAssignment");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXAssignment"



	// $ANTLR start "ruleXAssignment"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2804:1: ruleXAssignment returns [EObject current=null] : (this_XMultiAssignment_0= ruleXMultiAssignment ( ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) ) )? ) ;
	public final EObject ruleXAssignment() throws RecognitionException {
		EObject current = null;


		EObject this_XMultiAssignment_0 =null;
		EObject lv_value_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXAssignment");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2804, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2807:28: ( (this_XMultiAssignment_0= ruleXMultiAssignment ( ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2808:5: (this_XMultiAssignment_0= ruleXMultiAssignment ( ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) ) )? )
			{
			dbg.location(2808,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2808:5: (this_XMultiAssignment_0= ruleXMultiAssignment ( ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2809:5: this_XMultiAssignment_0= ruleXMultiAssignment ( ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) ) )?
			{
			dbg.location(2809,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXAssignmentAccess().getXMultiAssignmentParserRuleCall_0()); 
			    }dbg.location(2812,28);
			pushFollow(FOLLOW_ruleXMultiAssignment_in_ruleXAssignment5909);
			this_XMultiAssignment_0=ruleXMultiAssignment();
			state._fsp--;
			if (state.failed) return current;dbg.location(2813,5);
			if ( state.backtracking==0 ) { 
			        current = this_XMultiAssignment_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(2817,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:2: ( ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) ) )?
			int alt70=2;
			try { dbg.enterSubRule(70);
			try { dbg.enterDecision(70, decisionCanBacktrack[70]);

			int LA70_0 = input.LA(1);
			if ( (LA70_0==48) ) {
				int LA70_1 = input.LA(2);
				if ( (synpred8_InternalXAML()) ) {
					alt70=1;
				}
			}
			} finally {dbg.exitDecision(70);}

			switch (alt70) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:2: ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) ) ( (lv_value_3_0= ruleXMultiAssignment ) )
					{
					dbg.location(2817,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:2: ( ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:3: ( ( () ruleOpSingleAssign ) )=> ( () ruleOpSingleAssign )
					{
					dbg.location(2818,25);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2818:25: ( () ruleOpSingleAssign )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2818:26: () ruleOpSingleAssign
					{
					dbg.location(2818,26);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2818:26: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2819:5: 
					{
					dbg.location(2819,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXAssignmentAccess().getXAssignmentAssignableAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(2825,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_1_0_0_1()); 
					    }dbg.location(2828,1);
					pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXAssignment5946);
					ruleOpSingleAssign();
					state._fsp--;
					if (state.failed) return current;dbg.location(2829,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}

					}
					dbg.location(2832,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2832:3: ( (lv_value_3_0= ruleXMultiAssignment ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2833:3: (lv_value_3_0= ruleXMultiAssignment )
					{
					dbg.location(2833,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2833:3: (lv_value_3_0= ruleXMultiAssignment )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2834:3: lv_value_3_0= ruleXMultiAssignment
					{
					dbg.location(2834,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXMultiAssignmentParserRuleCall_1_1_0()); 
						    }dbg.location(2837,15);
					pushFollow(FOLLOW_ruleXMultiAssignment_in_ruleXAssignment5968);
					lv_value_3_0=ruleXMultiAssignment();
					state._fsp--;
					if (state.failed) return current;dbg.location(2837,38);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
						        }
					       		set(
					       			current, 
					       			"value",
					        		lv_value_3_0, 
					        		"XMultiAssignment");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(70);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2851, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXAssignment");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXAssignment"



	// $ANTLR start "entryRuleOpSingleAssign"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2858:1: entryRuleOpSingleAssign returns [String current=null] :iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
	public final String entryRuleOpSingleAssign() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpSingleAssign =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpSingleAssign");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2858, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2859:2: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2860:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
			{
			dbg.location(2860,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpSingleAssignRule()); }dbg.location(2861,24);
			pushFollow(FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign6007);
			iv_ruleOpSingleAssign=ruleOpSingleAssign();
			state._fsp--;
			if (state.failed) return current;dbg.location(2862,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpSingleAssign.getText(); }dbg.location(2863,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpSingleAssign6018); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2864, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpSingleAssign");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpSingleAssign"



	// $ANTLR start "ruleOpSingleAssign"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2867:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
	public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpSingleAssign");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2867, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2870:28: (kw= '=' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2872:2: kw= '='
			{
			dbg.location(2872,4);
			kw=(Token)match(input,48,FOLLOW_48_in_ruleOpSingleAssign6055); if (state.failed) return current;dbg.location(2873,5);
			if ( state.backtracking==0 ) {
			        current.merge(kw);
			        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2878, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpSingleAssign");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpSingleAssign"



	// $ANTLR start "entryRuleXMultiAssignment"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2885:1: entryRuleXMultiAssignment returns [EObject current=null] :iv_ruleXMultiAssignment= ruleXMultiAssignment EOF ;
	public final EObject entryRuleXMultiAssignment() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXMultiAssignment =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXMultiAssignment");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2885, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2886:2: (iv_ruleXMultiAssignment= ruleXMultiAssignment EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2887:2: iv_ruleXMultiAssignment= ruleXMultiAssignment EOF
			{
			dbg.location(2887,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXMultiAssignmentRule()); }dbg.location(2888,26);
			pushFollow(FOLLOW_ruleXMultiAssignment_in_entryRuleXMultiAssignment6094);
			iv_ruleXMultiAssignment=ruleXMultiAssignment();
			state._fsp--;
			if (state.failed) return current;dbg.location(2889,3);
			if ( state.backtracking==0 ) { current =iv_ruleXMultiAssignment; }dbg.location(2890,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXMultiAssignment6104); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2891, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXMultiAssignment");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXMultiAssignment"



	// $ANTLR start "ruleXMultiAssignment"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2894:1: ruleXMultiAssignment returns [EObject current=null] : (this_XOrExpression_0= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) ) )* ) ;
	public final EObject ruleXMultiAssignment() throws RecognitionException {
		EObject current = null;


		EObject this_XOrExpression_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXMultiAssignment");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2894, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2897:28: ( (this_XOrExpression_0= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2898:5: (this_XOrExpression_0= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) ) )* )
			{
			dbg.location(2898,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2898:5: (this_XOrExpression_0= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2899:5: this_XOrExpression_0= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) ) )*
			{
			dbg.location(2899,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXMultiAssignmentAccess().getXOrExpressionParserRuleCall_0()); 
			    }dbg.location(2902,25);
			pushFollow(FOLLOW_ruleXOrExpression_in_ruleXMultiAssignment6151);
			this_XOrExpression_0=ruleXOrExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(2903,5);
			if ( state.backtracking==0 ) { 
			        current = this_XOrExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(2907,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:2: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) ) )*
			try { dbg.enterSubRule(71);

			loop71:
			while (true) {
				int alt71=2;
				try { dbg.enterDecision(71, decisionCanBacktrack[71]);

				switch ( input.LA(1) ) {
				case 52:
					{
					int LA71_2 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 45:
					{
					int LA71_3 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 29:
					{
					int LA71_4 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 40:
					{
					int LA71_5 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 22:
					{
					int LA71_6 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 32:
					{
					int LA71_7 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 36:
					{
					int LA71_8 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 25:
					{
					int LA71_9 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 60:
					{
					int LA71_10 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				case 90:
					{
					int LA71_11 = input.LA(2);
					if ( (synpred9_InternalXAML()) ) {
						alt71=1;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(71);}

				switch (alt71) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_3_0= ruleXOrExpression ) )
					{
					dbg.location(2907,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
					{
					dbg.location(2912,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2912:6: ( () ( ( ruleOpMultiAssign ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2912:7: () ( ( ruleOpMultiAssign ) )
					{
					dbg.location(2912,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2912:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2913:5: 
					{
					dbg.location(2913,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXMultiAssignmentAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(2918,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2918:2: ( ( ruleOpMultiAssign ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2919:3: ( ruleOpMultiAssign )
					{
					dbg.location(2919,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2919:3: ( ruleOpMultiAssign )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2920:3: ruleOpMultiAssign
					{
					dbg.location(2920,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXMultiAssignmentRule());
						        }
					        }dbg.location(2925,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMultiAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(2928,3);
					pushFollow(FOLLOW_ruleOpMultiAssign_in_ruleXMultiAssignment6204);
					ruleOpMultiAssign();
					state._fsp--;
					if (state.failed) return current;dbg.location(2928,22);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(2933,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2933:4: ( (lv_rightOperand_3_0= ruleXOrExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2934:3: (lv_rightOperand_3_0= ruleXOrExpression )
					{
					dbg.location(2934,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2934:3: (lv_rightOperand_3_0= ruleXOrExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2935:3: lv_rightOperand_3_0= ruleXOrExpression
					{
					dbg.location(2935,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMultiAssignmentAccess().getRightOperandXOrExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(2938,22);
					pushFollow(FOLLOW_ruleXOrExpression_in_ruleXMultiAssignment6227);
					lv_rightOperand_3_0=ruleXOrExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(2938,42);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXMultiAssignmentRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XOrExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop71;
				}
			}
			} finally {dbg.exitSubRule(71);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2952, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXMultiAssignment");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXMultiAssignment"



	// $ANTLR start "entryRuleXOrExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2959:1: entryRuleXOrExpression returns [EObject current=null] :iv_ruleXOrExpression= ruleXOrExpression EOF ;
	public final EObject entryRuleXOrExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXOrExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXOrExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2959, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2960:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2961:2: iv_ruleXOrExpression= ruleXOrExpression EOF
			{
			dbg.location(2961,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXOrExpressionRule()); }dbg.location(2962,23);
			pushFollow(FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression6265);
			iv_ruleXOrExpression=ruleXOrExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(2963,3);
			if ( state.backtracking==0 ) { current =iv_ruleXOrExpression; }dbg.location(2964,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXOrExpression6275); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(2965, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXOrExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXOrExpression"



	// $ANTLR start "ruleXOrExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2968:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
	public final EObject ruleXOrExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XAndExpression_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXOrExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(2968, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2971:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2972:5: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
			{
			dbg.location(2972,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2972:5: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2973:5: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
			{
			dbg.location(2973,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
			    }dbg.location(2976,26);
			pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression6322);
			this_XAndExpression_0=ruleXAndExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(2977,5);
			if ( state.backtracking==0 ) { 
			        current = this_XAndExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(2981,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:2: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
			try { dbg.enterSubRule(72);

			loop72:
			while (true) {
				int alt72=2;
				try { dbg.enterDecision(72, decisionCanBacktrack[72]);

				int LA72_0 = input.LA(1);
				if ( (LA72_0==91) ) {
					int LA72_2 = input.LA(2);
					if ( (synpred10_InternalXAML()) ) {
						alt72=1;
					}

				}

				} finally {dbg.exitDecision(72);}

				switch (alt72) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
					{
					dbg.location(2981,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
					{
					dbg.location(2986,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2986:6: ( () ( ( ruleOpOr ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2986:7: () ( ( ruleOpOr ) )
					{
					dbg.location(2986,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2986:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2987:5: 
					{
					dbg.location(2987,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(2992,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2992:2: ( ( ruleOpOr ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2993:3: ( ruleOpOr )
					{
					dbg.location(2993,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2993:3: ( ruleOpOr )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2994:3: ruleOpOr
					{
					dbg.location(2994,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXOrExpressionRule());
						        }
					        }dbg.location(2999,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(3002,3);
					pushFollow(FOLLOW_ruleOpOr_in_ruleXOrExpression6375);
					ruleOpOr();
					state._fsp--;
					if (state.failed) return current;dbg.location(3002,13);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3007,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3007:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3008:3: (lv_rightOperand_3_0= ruleXAndExpression )
					{
					dbg.location(3008,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3008:3: (lv_rightOperand_3_0= ruleXAndExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3009:3: lv_rightOperand_3_0= ruleXAndExpression
					{
					dbg.location(3009,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3012,22);
					pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression6398);
					lv_rightOperand_3_0=ruleXAndExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3012,43);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XAndExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop72;
				}
			}
			} finally {dbg.exitSubRule(72);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3026, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXOrExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXOrExpression"



	// $ANTLR start "entryRuleOpOr"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3033:1: entryRuleOpOr returns [String current=null] :iv_ruleOpOr= ruleOpOr EOF ;
	public final String entryRuleOpOr() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpOr =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpOr");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3033, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3034:2: (iv_ruleOpOr= ruleOpOr EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3035:2: iv_ruleOpOr= ruleOpOr EOF
			{
			dbg.location(3035,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpOrRule()); }dbg.location(3036,14);
			pushFollow(FOLLOW_ruleOpOr_in_entryRuleOpOr6437);
			iv_ruleOpOr=ruleOpOr();
			state._fsp--;
			if (state.failed) return current;dbg.location(3037,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpOr.getText(); }dbg.location(3038,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpOr6448); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3039, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpOr");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpOr"



	// $ANTLR start "ruleOpOr"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3042:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
	public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpOr");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3042, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3045:28: (kw= '||' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3047:2: kw= '||'
			{
			dbg.location(3047,4);
			kw=(Token)match(input,91,FOLLOW_91_in_ruleOpOr6485); if (state.failed) return current;dbg.location(3048,5);
			if ( state.backtracking==0 ) {
			        current.merge(kw);
			        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3053, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpOr");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpOr"



	// $ANTLR start "entryRuleXAndExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3060:1: entryRuleXAndExpression returns [EObject current=null] :iv_ruleXAndExpression= ruleXAndExpression EOF ;
	public final EObject entryRuleXAndExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXAndExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXAndExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3060, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3061:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3062:2: iv_ruleXAndExpression= ruleXAndExpression EOF
			{
			dbg.location(3062,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXAndExpressionRule()); }dbg.location(3063,24);
			pushFollow(FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression6524);
			iv_ruleXAndExpression=ruleXAndExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3064,3);
			if ( state.backtracking==0 ) { current =iv_ruleXAndExpression; }dbg.location(3065,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXAndExpression6534); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3066, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXAndExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXAndExpression"



	// $ANTLR start "ruleXAndExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3069:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
	public final EObject ruleXAndExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XEqualityExpression_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXAndExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3069, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3072:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3073:5: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
			{
			dbg.location(3073,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3073:5: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3074:5: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
			{
			dbg.location(3074,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
			    }dbg.location(3077,31);
			pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression6581);
			this_XEqualityExpression_0=ruleXEqualityExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3078,5);
			if ( state.backtracking==0 ) { 
			        current = this_XEqualityExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3082,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:2: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
			try { dbg.enterSubRule(73);

			loop73:
			while (true) {
				int alt73=2;
				try { dbg.enterDecision(73, decisionCanBacktrack[73]);

				int LA73_0 = input.LA(1);
				if ( (LA73_0==23) ) {
					int LA73_2 = input.LA(2);
					if ( (synpred11_InternalXAML()) ) {
						alt73=1;
					}

				}

				} finally {dbg.exitDecision(73);}

				switch (alt73) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
					{
					dbg.location(3082,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
					{
					dbg.location(3087,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3087:6: ( () ( ( ruleOpAnd ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3087:7: () ( ( ruleOpAnd ) )
					{
					dbg.location(3087,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3087:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3088:5: 
					{
					dbg.location(3088,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3093,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3093:2: ( ( ruleOpAnd ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3094:3: ( ruleOpAnd )
					{
					dbg.location(3094,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3094:3: ( ruleOpAnd )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3095:3: ruleOpAnd
					{
					dbg.location(3095,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXAndExpressionRule());
						        }
					        }dbg.location(3100,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(3103,3);
					pushFollow(FOLLOW_ruleOpAnd_in_ruleXAndExpression6634);
					ruleOpAnd();
					state._fsp--;
					if (state.failed) return current;dbg.location(3103,14);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3108,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3108:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3109:3: (lv_rightOperand_3_0= ruleXEqualityExpression )
					{
					dbg.location(3109,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3109:3: (lv_rightOperand_3_0= ruleXEqualityExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3110:3: lv_rightOperand_3_0= ruleXEqualityExpression
					{
					dbg.location(3110,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3113,22);
					pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression6657);
					lv_rightOperand_3_0=ruleXEqualityExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3113,48);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XEqualityExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop73;
				}
			}
			} finally {dbg.exitSubRule(73);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3127, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXAndExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXAndExpression"



	// $ANTLR start "entryRuleOpAnd"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3134:1: entryRuleOpAnd returns [String current=null] :iv_ruleOpAnd= ruleOpAnd EOF ;
	public final String entryRuleOpAnd() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpAnd =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpAnd");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3134, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3135:2: (iv_ruleOpAnd= ruleOpAnd EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3136:2: iv_ruleOpAnd= ruleOpAnd EOF
			{
			dbg.location(3136,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpAndRule()); }dbg.location(3137,15);
			pushFollow(FOLLOW_ruleOpAnd_in_entryRuleOpAnd6696);
			iv_ruleOpAnd=ruleOpAnd();
			state._fsp--;
			if (state.failed) return current;dbg.location(3138,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpAnd.getText(); }dbg.location(3139,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpAnd6707); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3140, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpAnd");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpAnd"



	// $ANTLR start "ruleOpAnd"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3143:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
	public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpAnd");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3143, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3146:28: (kw= '&&' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3148:2: kw= '&&'
			{
			dbg.location(3148,4);
			kw=(Token)match(input,23,FOLLOW_23_in_ruleOpAnd6744); if (state.failed) return current;dbg.location(3149,5);
			if ( state.backtracking==0 ) {
			        current.merge(kw);
			        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3154, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpAnd");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpAnd"



	// $ANTLR start "entryRuleXEqualityExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3161:1: entryRuleXEqualityExpression returns [EObject current=null] :iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
	public final EObject entryRuleXEqualityExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXEqualityExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXEqualityExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3161, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3162:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3163:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
			{
			dbg.location(3163,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }dbg.location(3164,29);
			pushFollow(FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression6783);
			iv_ruleXEqualityExpression=ruleXEqualityExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3165,3);
			if ( state.backtracking==0 ) { current =iv_ruleXEqualityExpression; }dbg.location(3166,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXEqualityExpression6793); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3167, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXEqualityExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXEqualityExpression"



	// $ANTLR start "ruleXEqualityExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3170:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
	public final EObject ruleXEqualityExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XRelationalExpression_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXEqualityExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3170, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3173:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3174:5: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
			{
			dbg.location(3174,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3174:5: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3175:5: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
			{
			dbg.location(3175,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
			    }dbg.location(3178,33);
			pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression6840);
			this_XRelationalExpression_0=ruleXRelationalExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3179,5);
			if ( state.backtracking==0 ) { 
			        current = this_XRelationalExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3183,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:2: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
			try { dbg.enterSubRule(74);

			loop74:
			while (true) {
				int alt74=2;
				try { dbg.enterDecision(74, decisionCanBacktrack[74]);

				switch ( input.LA(1) ) {
				case 49:
					{
					int LA74_2 = input.LA(2);
					if ( (synpred12_InternalXAML()) ) {
						alt74=1;
					}

					}
					break;
				case 19:
					{
					int LA74_3 = input.LA(2);
					if ( (synpred12_InternalXAML()) ) {
						alt74=1;
					}

					}
					break;
				case 50:
					{
					int LA74_4 = input.LA(2);
					if ( (synpred12_InternalXAML()) ) {
						alt74=1;
					}

					}
					break;
				case 20:
					{
					int LA74_5 = input.LA(2);
					if ( (synpred12_InternalXAML()) ) {
						alt74=1;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(74);}

				switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
					{
					dbg.location(3183,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
					{
					dbg.location(3188,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3188:6: ( () ( ( ruleOpEquality ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3188:7: () ( ( ruleOpEquality ) )
					{
					dbg.location(3188,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3188:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3189:5: 
					{
					dbg.location(3189,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3194,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3194:2: ( ( ruleOpEquality ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3195:3: ( ruleOpEquality )
					{
					dbg.location(3195,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3195:3: ( ruleOpEquality )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3196:3: ruleOpEquality
					{
					dbg.location(3196,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
						        }
					        }dbg.location(3201,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(3204,3);
					pushFollow(FOLLOW_ruleOpEquality_in_ruleXEqualityExpression6893);
					ruleOpEquality();
					state._fsp--;
					if (state.failed) return current;dbg.location(3204,19);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3209,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3209:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3210:3: (lv_rightOperand_3_0= ruleXRelationalExpression )
					{
					dbg.location(3210,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3210:3: (lv_rightOperand_3_0= ruleXRelationalExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3211:3: lv_rightOperand_3_0= ruleXRelationalExpression
					{
					dbg.location(3211,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3214,22);
					pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression6916);
					lv_rightOperand_3_0=ruleXRelationalExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3214,50);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XRelationalExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop74;
				}
			}
			} finally {dbg.exitSubRule(74);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3228, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXEqualityExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXEqualityExpression"



	// $ANTLR start "entryRuleOpEquality"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3235:1: entryRuleOpEquality returns [String current=null] :iv_ruleOpEquality= ruleOpEquality EOF ;
	public final String entryRuleOpEquality() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpEquality =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpEquality");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3235, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3236:2: (iv_ruleOpEquality= ruleOpEquality EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3237:2: iv_ruleOpEquality= ruleOpEquality EOF
			{
			dbg.location(3237,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpEqualityRule()); }dbg.location(3238,20);
			pushFollow(FOLLOW_ruleOpEquality_in_entryRuleOpEquality6955);
			iv_ruleOpEquality=ruleOpEquality();
			state._fsp--;
			if (state.failed) return current;dbg.location(3239,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpEquality.getText(); }dbg.location(3240,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpEquality6966); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3241, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpEquality");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpEquality"



	// $ANTLR start "ruleOpEquality"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3244:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' |kw= '!=' |kw= '===' |kw= '!==' ) ;
	public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpEquality");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3244, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3247:28: ( (kw= '==' |kw= '!=' |kw= '===' |kw= '!==' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3248:2: (kw= '==' |kw= '!=' |kw= '===' |kw= '!==' )
			{
			dbg.location(3248,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3248:2: (kw= '==' |kw= '!=' |kw= '===' |kw= '!==' )
			int alt75=4;
			try { dbg.enterSubRule(75);
			try { dbg.enterDecision(75, decisionCanBacktrack[75]);

			switch ( input.LA(1) ) {
			case 49:
				{
				alt75=1;
				}
				break;
			case 19:
				{
				alt75=2;
				}
				break;
			case 50:
				{
				alt75=3;
				}
				break;
			case 20:
				{
				alt75=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(75);}

			switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3249:2: kw= '=='
					{
					dbg.location(3249,4);
					kw=(Token)match(input,49,FOLLOW_49_in_ruleOpEquality7004); if (state.failed) return current;dbg.location(3250,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3256:2: kw= '!='
					{
					dbg.location(3256,4);
					kw=(Token)match(input,19,FOLLOW_19_in_ruleOpEquality7023); if (state.failed) return current;dbg.location(3257,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3263:2: kw= '==='
					{
					dbg.location(3263,4);
					kw=(Token)match(input,50,FOLLOW_50_in_ruleOpEquality7042); if (state.failed) return current;dbg.location(3264,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3270:2: kw= '!=='
					{
					dbg.location(3270,4);
					kw=(Token)match(input,20,FOLLOW_20_in_ruleOpEquality7061); if (state.failed) return current;dbg.location(3271,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(75);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3276, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpEquality");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpEquality"



	// $ANTLR start "entryRuleXRelationalExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3283:1: entryRuleXRelationalExpression returns [EObject current=null] :iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
	public final EObject entryRuleXRelationalExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXRelationalExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXRelationalExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3283, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3284:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3285:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
			{
			dbg.location(3285,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }dbg.location(3286,31);
			pushFollow(FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression7101);
			iv_ruleXRelationalExpression=ruleXRelationalExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3287,3);
			if ( state.backtracking==0 ) { current =iv_ruleXRelationalExpression; }dbg.location(3288,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXRelationalExpression7111); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3289, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXRelationalExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXRelationalExpression"



	// $ANTLR start "ruleXRelationalExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3292:1: ruleXRelationalExpression returns [EObject current=null] : (this_XBitwiseExpression_0= ruleXBitwiseExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) ) )* ) ;
	public final EObject ruleXRelationalExpression() throws RecognitionException {
		EObject current = null;


		Token otherlv_2=null;
		EObject this_XBitwiseExpression_0 =null;
		EObject lv_type_3_0 =null;
		EObject lv_rightOperand_6_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXRelationalExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3292, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3295:28: ( (this_XBitwiseExpression_0= ruleXBitwiseExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3296:5: (this_XBitwiseExpression_0= ruleXBitwiseExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) ) )* )
			{
			dbg.location(3296,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3296:5: (this_XBitwiseExpression_0= ruleXBitwiseExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3297:5: this_XBitwiseExpression_0= ruleXBitwiseExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) ) )*
			{
			dbg.location(3297,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXBitwiseExpressionParserRuleCall_0()); 
			    }dbg.location(3300,30);
			pushFollow(FOLLOW_ruleXBitwiseExpression_in_ruleXRelationalExpression7158);
			this_XBitwiseExpression_0=ruleXBitwiseExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3301,5);
			if ( state.backtracking==0 ) { 
			        current = this_XBitwiseExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3305,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:2: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) ) )*
			try { dbg.enterSubRule(76);

			loop76:
			while (true) {
				int alt76=3;
				try { dbg.enterDecision(76, decisionCanBacktrack[76]);

				switch ( input.LA(1) ) {
				case 52:
					{
					int LA76_2 = input.LA(2);
					if ( (synpred14_InternalXAML()) ) {
						alt76=2;
					}

					}
					break;
				case 45:
					{
					int LA76_3 = input.LA(2);
					if ( (synpred14_InternalXAML()) ) {
						alt76=2;
					}

					}
					break;
				case 76:
					{
					int LA76_4 = input.LA(2);
					if ( (synpred13_InternalXAML()) ) {
						alt76=1;
					}

					}
					break;
				case 53:
					{
					int LA76_5 = input.LA(2);
					if ( (synpred14_InternalXAML()) ) {
						alt76=2;
					}

					}
					break;
				case 47:
					{
					int LA76_6 = input.LA(2);
					if ( (synpred14_InternalXAML()) ) {
						alt76=2;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(76);}

				switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
					{
					dbg.location(3305,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
					{
					dbg.location(3305,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:4: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
					{
					dbg.location(3307,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3307:5: ( () otherlv_2= 'instanceof' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3307:6: () otherlv_2= 'instanceof'
					{
					dbg.location(3307,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3307:6: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3308:5: 
					{
					dbg.location(3308,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
					            current);
					    }
					}
					dbg.location(3313,12);
					otherlv_2=(Token)match(input,76,FOLLOW_76_in_ruleXRelationalExpression7194); if (state.failed) return current;dbg.location(3314,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
					    }
					}

					}
					dbg.location(3317,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3317:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3318:3: (lv_type_3_0= ruleJvmTypeReference )
					{
					dbg.location(3318,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3318:3: (lv_type_3_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3319:3: lv_type_3_0= ruleJvmTypeReference
					{
					dbg.location(3319,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
						    }dbg.location(3322,14);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression7217);
					lv_type_3_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(3322,37);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
						        }
					       		set(
					       			current, 
					       			"type",
					        		lv_type_3_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) )
					{
					dbg.location(3336,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) )
					{
					dbg.location(3336,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
					{
					dbg.location(3341,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3341:6: ( () ( ( ruleOpCompare ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3341:7: () ( ( ruleOpCompare ) )
					{
					dbg.location(3341,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3341:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3342:5: 
					{
					dbg.location(3342,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3347,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3347:2: ( ( ruleOpCompare ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3348:3: ( ruleOpCompare )
					{
					dbg.location(3348,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3348:3: ( ruleOpCompare )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3349:3: ruleOpCompare
					{
					dbg.location(3349,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
						        }
					        }dbg.location(3354,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
						    }dbg.location(3357,3);
					pushFollow(FOLLOW_ruleOpCompare_in_ruleXRelationalExpression7278);
					ruleOpCompare();
					state._fsp--;
					if (state.failed) return current;dbg.location(3357,18);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3362,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3362:4: ( (lv_rightOperand_6_0= ruleXBitwiseExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3363:3: (lv_rightOperand_6_0= ruleXBitwiseExpression )
					{
					dbg.location(3363,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3363:3: (lv_rightOperand_6_0= ruleXBitwiseExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3364:3: lv_rightOperand_6_0= ruleXBitwiseExpression
					{
					dbg.location(3364,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXBitwiseExpressionParserRuleCall_1_1_1_0()); 
						    }dbg.location(3367,22);
					pushFollow(FOLLOW_ruleXBitwiseExpression_in_ruleXRelationalExpression7301);
					lv_rightOperand_6_0=ruleXBitwiseExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3367,47);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_6_0, 
					        		"XBitwiseExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;

				default :
					break loop76;
				}
			}
			} finally {dbg.exitSubRule(76);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3381, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXRelationalExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXRelationalExpression"



	// $ANTLR start "entryRuleOpMultiAssign"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3388:1: entryRuleOpMultiAssign returns [String current=null] :iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
	public final String entryRuleOpMultiAssign() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpMultiAssign =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpMultiAssign");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3388, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3389:2: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3390:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
			{
			dbg.location(3390,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpMultiAssignRule()); }dbg.location(3391,23);
			pushFollow(FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign7341);
			iv_ruleOpMultiAssign=ruleOpMultiAssign();
			state._fsp--;
			if (state.failed) return current;dbg.location(3392,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpMultiAssign.getText(); }dbg.location(3393,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpMultiAssign7352); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3394, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpMultiAssign");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpMultiAssign"



	// $ANTLR start "ruleOpMultiAssign"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3397:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*=' |kw= '/=' |kw= '%=' |kw= '+=' |kw= '-=' | (kw= '>' ( ( '>=' )=>kw= '>=' ) ) | (kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) ) ) | (kw= '<' ( ( '<=' )=>kw= '<=' ) ) |kw= '&=' |kw= '^=' |kw= '|=' ) ;
	public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpMultiAssign");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3397, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3400:28: ( (kw= '*=' |kw= '/=' |kw= '%=' |kw= '+=' |kw= '-=' | (kw= '>' ( ( '>=' )=>kw= '>=' ) ) | (kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) ) ) | (kw= '<' ( ( '<=' )=>kw= '<=' ) ) |kw= '&=' |kw= '^=' |kw= '|=' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3401:2: (kw= '*=' |kw= '/=' |kw= '%=' |kw= '+=' |kw= '-=' | (kw= '>' ( ( '>=' )=>kw= '>=' ) ) | (kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) ) ) | (kw= '<' ( ( '<=' )=>kw= '<=' ) ) |kw= '&=' |kw= '^=' |kw= '|=' )
			{
			dbg.location(3401,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3401:2: (kw= '*=' |kw= '/=' |kw= '%=' |kw= '+=' |kw= '-=' | (kw= '>' ( ( '>=' )=>kw= '>=' ) ) | (kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) ) ) | (kw= '<' ( ( '<=' )=>kw= '<=' ) ) |kw= '&=' |kw= '^=' |kw= '|=' )
			int alt77=11;
			try { dbg.enterSubRule(77);
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			switch ( input.LA(1) ) {
			case 29:
				{
				alt77=1;
				}
				break;
			case 40:
				{
				alt77=2;
				}
				break;
			case 22:
				{
				alt77=3;
				}
				break;
			case 32:
				{
				alt77=4;
				}
				break;
			case 36:
				{
				alt77=5;
				}
				break;
			case 52:
				{
				int LA77_6 = input.LA(2);
				if ( (LA77_6==53) ) {
					alt77=6;
				}
				else if ( (LA77_6==52) ) {
					alt77=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 77, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 45:
				{
				alt77=8;
				}
				break;
			case 25:
				{
				alt77=9;
				}
				break;
			case 60:
				{
				alt77=10;
				}
				break;
			case 90:
				{
				alt77=11;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 77, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3402:2: kw= '*='
					{
					dbg.location(3402,4);
					kw=(Token)match(input,29,FOLLOW_29_in_ruleOpMultiAssign7390); if (state.failed) return current;dbg.location(3403,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3409:2: kw= '/='
					{
					dbg.location(3409,4);
					kw=(Token)match(input,40,FOLLOW_40_in_ruleOpMultiAssign7409); if (state.failed) return current;dbg.location(3410,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3416:2: kw= '%='
					{
					dbg.location(3416,4);
					kw=(Token)match(input,22,FOLLOW_22_in_ruleOpMultiAssign7428); if (state.failed) return current;dbg.location(3417,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_2()); 
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3423:2: kw= '+='
					{
					dbg.location(3423,4);
					kw=(Token)match(input,32,FOLLOW_32_in_ruleOpMultiAssign7447); if (state.failed) return current;dbg.location(3424,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_3()); 
					    }
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3430:2: kw= '-='
					{
					dbg.location(3430,4);
					kw=(Token)match(input,36,FOLLOW_36_in_ruleOpMultiAssign7466); if (state.failed) return current;dbg.location(3431,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_4()); 
					    }
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3436:6: (kw= '>' ( ( '>=' )=>kw= '>=' ) )
					{
					dbg.location(3436,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3436:6: (kw= '>' ( ( '>=' )=>kw= '>=' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3437:2: kw= '>' ( ( '>=' )=>kw= '>=' )
					{
					dbg.location(3437,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleOpMultiAssign7486); if (state.failed) return current;dbg.location(3438,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_5_0()); 
					    }dbg.location(3442,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3442:2: ( ( '>=' )=>kw= '>=' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3442:2: ( '>=' )=>kw= '>='
					{
					dbg.location(3445,4);
					kw=(Token)match(input,53,FOLLOW_53_in_ruleOpMultiAssign7508); if (state.failed) return current;dbg.location(3446,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_5_1()); 
					    }
					}

					}

					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3451:6: (kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) ) )
					{
					dbg.location(3451,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3451:6: (kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3452:2: kw= '>' ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) )
					{
					dbg.location(3452,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleOpMultiAssign7530); if (state.failed) return current;dbg.location(3453,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
					    }dbg.location(3457,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3457:2: ( ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3457:2: ( ( '>' '>=' ) )=> (kw= '>' kw= '>=' )
					{
					dbg.location(3461,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3461:5: (kw= '>' kw= '>=' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3462:2: kw= '>' kw= '>='
					{
					dbg.location(3462,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleOpMultiAssign7560); if (state.failed) return current;dbg.location(3463,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1_0_0()); 
					    }dbg.location(3468,4);
					kw=(Token)match(input,53,FOLLOW_53_in_ruleOpMultiAssign7573); if (state.failed) return current;dbg.location(3469,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_1_0_1()); 
					    }
					}

					}

					}

					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3474:6: (kw= '<' ( ( '<=' )=>kw= '<=' ) )
					{
					dbg.location(3474,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3474:6: (kw= '<' ( ( '<=' )=>kw= '<=' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3475:2: kw= '<' ( ( '<=' )=>kw= '<=' )
					{
					dbg.location(3475,4);
					kw=(Token)match(input,45,FOLLOW_45_in_ruleOpMultiAssign7596); if (state.failed) return current;dbg.location(3476,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_7_0()); 
					    }dbg.location(3480,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3480:2: ( ( '<=' )=>kw= '<=' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3480:2: ( '<=' )=>kw= '<='
					{
					dbg.location(3483,4);
					kw=(Token)match(input,47,FOLLOW_47_in_ruleOpMultiAssign7618); if (state.failed) return current;dbg.location(3484,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignEqualsSignKeyword_7_1()); 
					    }
					}

					}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3490:2: kw= '&='
					{
					dbg.location(3490,4);
					kw=(Token)match(input,25,FOLLOW_25_in_ruleOpMultiAssign7639); if (state.failed) return current;dbg.location(3491,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_8()); 
					    }
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3497:2: kw= '^='
					{
					dbg.location(3497,4);
					kw=(Token)match(input,60,FOLLOW_60_in_ruleOpMultiAssign7658); if (state.failed) return current;dbg.location(3498,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_9()); 
					    }
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3504:2: kw= '|='
					{
					dbg.location(3504,4);
					kw=(Token)match(input,90,FOLLOW_90_in_ruleOpMultiAssign7677); if (state.failed) return current;dbg.location(3505,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_10()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(77);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3510, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpMultiAssign");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpMultiAssign"



	// $ANTLR start "entryRuleShiftOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3517:1: entryRuleShiftOp returns [String current=null] :iv_ruleShiftOp= ruleShiftOp EOF ;
	public final String entryRuleShiftOp() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleShiftOp =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleShiftOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3517, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3518:2: (iv_ruleShiftOp= ruleShiftOp EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3519:2: iv_ruleShiftOp= ruleShiftOp EOF
			{
			dbg.location(3519,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getShiftOpRule()); }dbg.location(3520,17);
			pushFollow(FOLLOW_ruleShiftOp_in_entryRuleShiftOp7718);
			iv_ruleShiftOp=ruleShiftOp();
			state._fsp--;
			if (state.failed) return current;dbg.location(3521,3);
			if ( state.backtracking==0 ) { current =iv_ruleShiftOp.getText(); }dbg.location(3522,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleShiftOp7729); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3523, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleShiftOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleShiftOp"



	// $ANTLR start "ruleShiftOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3526:1: ruleShiftOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) ) | (kw= '>' ( ( '>' )=>kw= '>' ) ) | (kw= '<' ( ( '<' )=>kw= '<' ) ) ) ;
	public final AntlrDatatypeRuleToken ruleShiftOp() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleShiftOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3526, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3529:28: ( ( (kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) ) | (kw= '>' ( ( '>' )=>kw= '>' ) ) | (kw= '<' ( ( '<' )=>kw= '<' ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3530:2: ( (kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) ) | (kw= '>' ( ( '>' )=>kw= '>' ) ) | (kw= '<' ( ( '<' )=>kw= '<' ) ) )
			{
			dbg.location(3530,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3530:2: ( (kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) ) | (kw= '>' ( ( '>' )=>kw= '>' ) ) | (kw= '<' ( ( '<' )=>kw= '<' ) ) )
			int alt78=3;
			try { dbg.enterSubRule(78);
			try { dbg.enterDecision(78, decisionCanBacktrack[78]);

			int LA78_0 = input.LA(1);
			if ( (LA78_0==52) ) {
				int LA78_1 = input.LA(2);
				if ( (LA78_1==52) ) {
					int LA78_3 = input.LA(3);
					if ( (LA78_3==52) ) {
						alt78=1;
					}
					else if ( (LA78_3==EOF||LA78_3==RULE_STRING||LA78_3==18||LA78_3==26||(LA78_3 >= 30 && LA78_3 <= 31)||(LA78_3 >= 34 && LA78_3 <= 35)||LA78_3==88||LA78_3==93) ) {
						alt78=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 78, 3, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 78, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA78_0==45) ) {
				alt78=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 78, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(78);}

			switch (alt78) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3530:2: (kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) )
					{
					dbg.location(3530,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3530:2: (kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3531:2: kw= '>' ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
					{
					dbg.location(3531,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleShiftOp7768); if (state.failed) return current;dbg.location(3532,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_0_0()); 
					    }dbg.location(3536,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3536:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3536:2: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
					{
					dbg.location(3540,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3540:5: (kw= '>' kw= '>' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3541:2: kw= '>' kw= '>'
					{
					dbg.location(3541,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleShiftOp7798); if (state.failed) return current;dbg.location(3542,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_0_1_0_0()); 
					    }dbg.location(3547,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleShiftOp7811); if (state.failed) return current;dbg.location(3548,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_0_1_0_1()); 
					    }
					}

					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3553:6: (kw= '>' ( ( '>' )=>kw= '>' ) )
					{
					dbg.location(3553,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3553:6: (kw= '>' ( ( '>' )=>kw= '>' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3554:2: kw= '>' ( ( '>' )=>kw= '>' )
					{
					dbg.location(3554,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleShiftOp7834); if (state.failed) return current;dbg.location(3555,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_1_0()); 
					    }dbg.location(3559,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3559:2: ( ( '>' )=>kw= '>' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3559:2: ( '>' )=>kw= '>'
					{
					dbg.location(3562,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleShiftOp7856); if (state.failed) return current;dbg.location(3563,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getGreaterThanSignKeyword_1_1()); 
					    }
					}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3568:6: (kw= '<' ( ( '<' )=>kw= '<' ) )
					{
					dbg.location(3568,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3568:6: (kw= '<' ( ( '<' )=>kw= '<' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3569:2: kw= '<' ( ( '<' )=>kw= '<' )
					{
					dbg.location(3569,4);
					kw=(Token)match(input,45,FOLLOW_45_in_ruleShiftOp7878); if (state.failed) return current;dbg.location(3570,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getLessThanSignKeyword_2_0()); 
					    }dbg.location(3574,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3574:2: ( ( '<' )=>kw= '<' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3574:2: ( '<' )=>kw= '<'
					{
					dbg.location(3577,4);
					kw=(Token)match(input,45,FOLLOW_45_in_ruleShiftOp7900); if (state.failed) return current;dbg.location(3578,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getShiftOpAccess().getLessThanSignKeyword_2_1()); 
					    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(78);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3583, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleShiftOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleShiftOp"



	// $ANTLR start "entryRuleOpCompare"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3590:1: entryRuleOpCompare returns [String current=null] :iv_ruleOpCompare= ruleOpCompare EOF ;
	public final String entryRuleOpCompare() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpCompare =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpCompare");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3590, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3591:2: (iv_ruleOpCompare= ruleOpCompare EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3592:2: iv_ruleOpCompare= ruleOpCompare EOF
			{
			dbg.location(3592,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpCompareRule()); }dbg.location(3593,19);
			pushFollow(FOLLOW_ruleOpCompare_in_entryRuleOpCompare7943);
			iv_ruleOpCompare=ruleOpCompare();
			state._fsp--;
			if (state.failed) return current;dbg.location(3594,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpCompare.getText(); }dbg.location(3595,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpCompare7954); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3596, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpCompare");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpCompare"



	// $ANTLR start "ruleOpCompare"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3599:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' |kw= '<=' |kw= '>' |kw= '<' ) ;
	public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpCompare");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3599, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3602:28: ( (kw= '>=' |kw= '<=' |kw= '>' |kw= '<' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3603:2: (kw= '>=' |kw= '<=' |kw= '>' |kw= '<' )
			{
			dbg.location(3603,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3603:2: (kw= '>=' |kw= '<=' |kw= '>' |kw= '<' )
			int alt79=4;
			try { dbg.enterSubRule(79);
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			switch ( input.LA(1) ) {
			case 53:
				{
				alt79=1;
				}
				break;
			case 47:
				{
				alt79=2;
				}
				break;
			case 52:
				{
				alt79=3;
				}
				break;
			case 45:
				{
				alt79=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 79, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3604:2: kw= '>='
					{
					dbg.location(3604,4);
					kw=(Token)match(input,53,FOLLOW_53_in_ruleOpCompare7992); if (state.failed) return current;dbg.location(3605,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3611:2: kw= '<='
					{
					dbg.location(3611,4);
					kw=(Token)match(input,47,FOLLOW_47_in_ruleOpCompare8011); if (state.failed) return current;dbg.location(3612,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3618:2: kw= '>'
					{
					dbg.location(3618,4);
					kw=(Token)match(input,52,FOLLOW_52_in_ruleOpCompare8030); if (state.failed) return current;dbg.location(3619,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3625:2: kw= '<'
					{
					dbg.location(3625,4);
					kw=(Token)match(input,45,FOLLOW_45_in_ruleOpCompare8049); if (state.failed) return current;dbg.location(3626,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(79);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3631, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpCompare");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpCompare"



	// $ANTLR start "entryRuleXBitwiseExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3638:1: entryRuleXBitwiseExpression returns [EObject current=null] :iv_ruleXBitwiseExpression= ruleXBitwiseExpression EOF ;
	public final EObject entryRuleXBitwiseExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXBitwiseExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXBitwiseExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3638, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3639:2: (iv_ruleXBitwiseExpression= ruleXBitwiseExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3640:2: iv_ruleXBitwiseExpression= ruleXBitwiseExpression EOF
			{
			dbg.location(3640,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXBitwiseExpressionRule()); }dbg.location(3641,28);
			pushFollow(FOLLOW_ruleXBitwiseExpression_in_entryRuleXBitwiseExpression8089);
			iv_ruleXBitwiseExpression=ruleXBitwiseExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3642,3);
			if ( state.backtracking==0 ) { current =iv_ruleXBitwiseExpression; }dbg.location(3643,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXBitwiseExpression8099); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3644, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXBitwiseExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXBitwiseExpression"



	// $ANTLR start "ruleXBitwiseExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3647:1: ruleXBitwiseExpression returns [EObject current=null] : (this_XShiftExpression_0= ruleXShiftExpression ( ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) ) )* ) ;
	public final EObject ruleXBitwiseExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XShiftExpression_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXBitwiseExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3647, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3650:28: ( (this_XShiftExpression_0= ruleXShiftExpression ( ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3651:5: (this_XShiftExpression_0= ruleXShiftExpression ( ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) ) )* )
			{
			dbg.location(3651,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3651:5: (this_XShiftExpression_0= ruleXShiftExpression ( ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3652:5: this_XShiftExpression_0= ruleXShiftExpression ( ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) ) )*
			{
			dbg.location(3652,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXBitwiseExpressionAccess().getXShiftExpressionParserRuleCall_0()); 
			    }dbg.location(3655,28);
			pushFollow(FOLLOW_ruleXShiftExpression_in_ruleXBitwiseExpression8146);
			this_XShiftExpression_0=ruleXShiftExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3656,5);
			if ( state.backtracking==0 ) { 
			        current = this_XShiftExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3660,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:2: ( ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) ) )*
			try { dbg.enterSubRule(80);

			loop80:
			while (true) {
				int alt80=2;
				try { dbg.enterDecision(80, decisionCanBacktrack[80]);

				switch ( input.LA(1) ) {
				case 24:
					{
					int LA80_2 = input.LA(2);
					if ( (synpred21_InternalXAML()) ) {
						alt80=1;
					}

					}
					break;
				case 89:
					{
					int LA80_3 = input.LA(2);
					if ( (synpred21_InternalXAML()) ) {
						alt80=1;
					}

					}
					break;
				case 59:
					{
					int LA80_4 = input.LA(2);
					if ( (synpred21_InternalXAML()) ) {
						alt80=1;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(80);}

				switch (alt80) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:2: ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXShiftExpression ) )
					{
					dbg.location(3660,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:2: ( ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:3: ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )=> ( () ( ( ruleBinaryBitwiseOp ) ) )
					{
					dbg.location(3665,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3665:6: ( () ( ( ruleBinaryBitwiseOp ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3665:7: () ( ( ruleBinaryBitwiseOp ) )
					{
					dbg.location(3665,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3665:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3666:5: 
					{
					dbg.location(3666,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXBitwiseExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3671,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3671:2: ( ( ruleBinaryBitwiseOp ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3672:3: ( ruleBinaryBitwiseOp )
					{
					dbg.location(3672,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3672:3: ( ruleBinaryBitwiseOp )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3673:3: ruleBinaryBitwiseOp
					{
					dbg.location(3673,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXBitwiseExpressionRule());
						        }
					        }dbg.location(3678,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXBitwiseExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(3681,3);
					pushFollow(FOLLOW_ruleBinaryBitwiseOp_in_ruleXBitwiseExpression8199);
					ruleBinaryBitwiseOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(3681,24);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3686,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3686:4: ( (lv_rightOperand_3_0= ruleXShiftExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3687:3: (lv_rightOperand_3_0= ruleXShiftExpression )
					{
					dbg.location(3687,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3687:3: (lv_rightOperand_3_0= ruleXShiftExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3688:3: lv_rightOperand_3_0= ruleXShiftExpression
					{
					dbg.location(3688,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXBitwiseExpressionAccess().getRightOperandXShiftExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3691,22);
					pushFollow(FOLLOW_ruleXShiftExpression_in_ruleXBitwiseExpression8222);
					lv_rightOperand_3_0=ruleXShiftExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3691,45);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXBitwiseExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XShiftExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop80;
				}
			}
			} finally {dbg.exitSubRule(80);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3705, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXBitwiseExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXBitwiseExpression"



	// $ANTLR start "entryRuleBinaryBitwiseOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3712:1: entryRuleBinaryBitwiseOp returns [String current=null] :iv_ruleBinaryBitwiseOp= ruleBinaryBitwiseOp EOF ;
	public final String entryRuleBinaryBitwiseOp() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleBinaryBitwiseOp =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleBinaryBitwiseOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3712, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3713:2: (iv_ruleBinaryBitwiseOp= ruleBinaryBitwiseOp EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3714:2: iv_ruleBinaryBitwiseOp= ruleBinaryBitwiseOp EOF
			{
			dbg.location(3714,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getBinaryBitwiseOpRule()); }dbg.location(3715,25);
			pushFollow(FOLLOW_ruleBinaryBitwiseOp_in_entryRuleBinaryBitwiseOp8261);
			iv_ruleBinaryBitwiseOp=ruleBinaryBitwiseOp();
			state._fsp--;
			if (state.failed) return current;dbg.location(3716,3);
			if ( state.backtracking==0 ) { current =iv_ruleBinaryBitwiseOp.getText(); }dbg.location(3717,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleBinaryBitwiseOp8272); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3718, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleBinaryBitwiseOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleBinaryBitwiseOp"



	// $ANTLR start "ruleBinaryBitwiseOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3721:1: ruleBinaryBitwiseOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '&' |kw= '|' |kw= '^' ) ;
	public final AntlrDatatypeRuleToken ruleBinaryBitwiseOp() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleBinaryBitwiseOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3721, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3724:28: ( (kw= '&' |kw= '|' |kw= '^' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3725:2: (kw= '&' |kw= '|' |kw= '^' )
			{
			dbg.location(3725,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3725:2: (kw= '&' |kw= '|' |kw= '^' )
			int alt81=3;
			try { dbg.enterSubRule(81);
			try { dbg.enterDecision(81, decisionCanBacktrack[81]);

			switch ( input.LA(1) ) {
			case 24:
				{
				alt81=1;
				}
				break;
			case 89:
				{
				alt81=2;
				}
				break;
			case 59:
				{
				alt81=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 81, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(81);}

			switch (alt81) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3726:2: kw= '&'
					{
					dbg.location(3726,4);
					kw=(Token)match(input,24,FOLLOW_24_in_ruleBinaryBitwiseOp8310); if (state.failed) return current;dbg.location(3727,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getBinaryBitwiseOpAccess().getAmpersandKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3733:2: kw= '|'
					{
					dbg.location(3733,4);
					kw=(Token)match(input,89,FOLLOW_89_in_ruleBinaryBitwiseOp8329); if (state.failed) return current;dbg.location(3734,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getBinaryBitwiseOpAccess().getVerticalLineKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3740:2: kw= '^'
					{
					dbg.location(3740,4);
					kw=(Token)match(input,59,FOLLOW_59_in_ruleBinaryBitwiseOp8348); if (state.failed) return current;dbg.location(3741,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getBinaryBitwiseOpAccess().getCircumflexAccentKeyword_2()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(81);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3746, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleBinaryBitwiseOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleBinaryBitwiseOp"



	// $ANTLR start "entryRuleXShiftExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3753:1: entryRuleXShiftExpression returns [EObject current=null] :iv_ruleXShiftExpression= ruleXShiftExpression EOF ;
	public final EObject entryRuleXShiftExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXShiftExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXShiftExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3753, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3754:2: (iv_ruleXShiftExpression= ruleXShiftExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3755:2: iv_ruleXShiftExpression= ruleXShiftExpression EOF
			{
			dbg.location(3755,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXShiftExpressionRule()); }dbg.location(3756,26);
			pushFollow(FOLLOW_ruleXShiftExpression_in_entryRuleXShiftExpression8388);
			iv_ruleXShiftExpression=ruleXShiftExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3757,3);
			if ( state.backtracking==0 ) { current =iv_ruleXShiftExpression; }dbg.location(3758,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXShiftExpression8398); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3759, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXShiftExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXShiftExpression"



	// $ANTLR start "ruleXShiftExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3762:1: ruleXShiftExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
	public final EObject ruleXShiftExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XAdditiveExpression_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXShiftExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3762, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3765:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3766:5: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
			{
			dbg.location(3766,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3766:5: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3767:5: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
			{
			dbg.location(3767,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXShiftExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
			    }dbg.location(3770,31);
			pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXShiftExpression8445);
			this_XAdditiveExpression_0=ruleXAdditiveExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3771,5);
			if ( state.backtracking==0 ) { 
			        current = this_XAdditiveExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3775,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:2: ( ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
			try { dbg.enterSubRule(82);

			loop82:
			while (true) {
				int alt82=2;
				try { dbg.enterDecision(82, decisionCanBacktrack[82]);

				int LA82_0 = input.LA(1);
				if ( (LA82_0==52) ) {
					int LA82_2 = input.LA(2);
					if ( (synpred22_InternalXAML()) ) {
						alt82=1;
					}

				}
				else if ( (LA82_0==45) ) {
					int LA82_3 = input.LA(2);
					if ( (synpred22_InternalXAML()) ) {
						alt82=1;
					}

				}

				} finally {dbg.exitDecision(82);}

				switch (alt82) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:2: ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
					{
					dbg.location(3775,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:2: ( ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:3: ( ( () ( ( ruleShiftOp ) ) ) )=> ( () ( ( ruleShiftOp ) ) )
					{
					dbg.location(3780,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3780:6: ( () ( ( ruleShiftOp ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3780:7: () ( ( ruleShiftOp ) )
					{
					dbg.location(3780,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3780:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3781:5: 
					{
					dbg.location(3781,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXShiftExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3786,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3786:2: ( ( ruleShiftOp ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3787:3: ( ruleShiftOp )
					{
					dbg.location(3787,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3787:3: ( ruleShiftOp )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3788:3: ruleShiftOp
					{
					dbg.location(3788,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXShiftExpressionRule());
						        }
					        }dbg.location(3793,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXShiftExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(3796,3);
					pushFollow(FOLLOW_ruleShiftOp_in_ruleXShiftExpression8498);
					ruleShiftOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(3796,16);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3801,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3801:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3802:3: (lv_rightOperand_3_0= ruleXAdditiveExpression )
					{
					dbg.location(3802,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3802:3: (lv_rightOperand_3_0= ruleXAdditiveExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3803:3: lv_rightOperand_3_0= ruleXAdditiveExpression
					{
					dbg.location(3803,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXShiftExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3806,22);
					pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXShiftExpression8521);
					lv_rightOperand_3_0=ruleXAdditiveExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3806,48);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXShiftExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XAdditiveExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop82;
				}
			}
			} finally {dbg.exitSubRule(82);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3820, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXShiftExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXShiftExpression"



	// $ANTLR start "entryRuleXAdditiveExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3827:1: entryRuleXAdditiveExpression returns [EObject current=null] :iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
	public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXAdditiveExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXAdditiveExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3827, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3828:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3829:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
			{
			dbg.location(3829,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }dbg.location(3830,29);
			pushFollow(FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression8559);
			iv_ruleXAdditiveExpression=ruleXAdditiveExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3831,3);
			if ( state.backtracking==0 ) { current =iv_ruleXAdditiveExpression; }dbg.location(3832,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXAdditiveExpression8569); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3833, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXAdditiveExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXAdditiveExpression"



	// $ANTLR start "ruleXAdditiveExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3836:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XTernaryOperation_0= ruleXTernaryOperation ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
	public final EObject ruleXAdditiveExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XTernaryOperation_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXAdditiveExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3836, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3839:28: ( (this_XTernaryOperation_0= ruleXTernaryOperation ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3840:5: (this_XTernaryOperation_0= ruleXTernaryOperation ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
			{
			dbg.location(3840,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3840:5: (this_XTernaryOperation_0= ruleXTernaryOperation ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3841:5: this_XTernaryOperation_0= ruleXTernaryOperation ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
			{
			dbg.location(3841,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXTernaryOperationParserRuleCall_0()); 
			    }dbg.location(3844,29);
			pushFollow(FOLLOW_ruleXTernaryOperation_in_ruleXAdditiveExpression8616);
			this_XTernaryOperation_0=ruleXTernaryOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(3845,5);
			if ( state.backtracking==0 ) { 
			        current = this_XTernaryOperation_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3849,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:2: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
			try { dbg.enterSubRule(83);

			loop83:
			while (true) {
				int alt83=2;
				try { dbg.enterDecision(83, decisionCanBacktrack[83]);

				int LA83_0 = input.LA(1);
				if ( (LA83_0==34) ) {
					int LA83_2 = input.LA(2);
					if ( (synpred23_InternalXAML()) ) {
						alt83=1;
					}

				}
				else if ( (LA83_0==30) ) {
					int LA83_3 = input.LA(2);
					if ( (synpred23_InternalXAML()) ) {
						alt83=1;
					}

				}

				} finally {dbg.exitDecision(83);}

				switch (alt83) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
					{
					dbg.location(3849,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
					{
					dbg.location(3854,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3854:6: ( () ( ( ruleOpAdd ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3854:7: () ( ( ruleOpAdd ) )
					{
					dbg.location(3854,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3854:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3855:5: 
					{
					dbg.location(3855,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3860,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3860:2: ( ( ruleOpAdd ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3861:3: ( ruleOpAdd )
					{
					dbg.location(3861,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3861:3: ( ruleOpAdd )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3862:3: ruleOpAdd
					{
					dbg.location(3862,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
						        }
					        }dbg.location(3867,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(3870,3);
					pushFollow(FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression8669);
					ruleOpAdd();
					state._fsp--;
					if (state.failed) return current;dbg.location(3870,14);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(3875,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3875:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3876:3: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
					{
					dbg.location(3876,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3876:3: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3877:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
					{
					dbg.location(3877,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3880,22);
					pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression8692);
					lv_rightOperand_3_0=ruleXMultiplicativeExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3880,54);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XMultiplicativeExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop83;
				}
			}
			} finally {dbg.exitSubRule(83);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3894, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXAdditiveExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXAdditiveExpression"



	// $ANTLR start "entryRuleOpAdd"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3901:1: entryRuleOpAdd returns [String current=null] :iv_ruleOpAdd= ruleOpAdd EOF ;
	public final String entryRuleOpAdd() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpAdd =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpAdd");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3901, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3902:2: (iv_ruleOpAdd= ruleOpAdd EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3903:2: iv_ruleOpAdd= ruleOpAdd EOF
			{
			dbg.location(3903,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpAddRule()); }dbg.location(3904,15);
			pushFollow(FOLLOW_ruleOpAdd_in_entryRuleOpAdd8731);
			iv_ruleOpAdd=ruleOpAdd();
			state._fsp--;
			if (state.failed) return current;dbg.location(3905,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpAdd.getText(); }dbg.location(3906,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpAdd8742); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3907, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpAdd");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpAdd"



	// $ANTLR start "ruleOpAdd"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3910:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' |kw= '-' ) ;
	public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpAdd");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3910, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3913:28: ( (kw= '+' |kw= '-' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3914:2: (kw= '+' |kw= '-' )
			{
			dbg.location(3914,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3914:2: (kw= '+' |kw= '-' )
			int alt84=2;
			try { dbg.enterSubRule(84);
			try { dbg.enterDecision(84, decisionCanBacktrack[84]);

			int LA84_0 = input.LA(1);
			if ( (LA84_0==30) ) {
				alt84=1;
			}
			else if ( (LA84_0==34) ) {
				alt84=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 84, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(84);}

			switch (alt84) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3915:2: kw= '+'
					{
					dbg.location(3915,4);
					kw=(Token)match(input,30,FOLLOW_30_in_ruleOpAdd8780); if (state.failed) return current;dbg.location(3916,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3922:2: kw= '-'
					{
					dbg.location(3922,4);
					kw=(Token)match(input,34,FOLLOW_34_in_ruleOpAdd8799); if (state.failed) return current;dbg.location(3923,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(84);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3928, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpAdd");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpAdd"



	// $ANTLR start "entryRuleXTernaryOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3935:1: entryRuleXTernaryOperation returns [EObject current=null] :iv_ruleXTernaryOperation= ruleXTernaryOperation EOF ;
	public final EObject entryRuleXTernaryOperation() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXTernaryOperation =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXTernaryOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3935, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3936:2: (iv_ruleXTernaryOperation= ruleXTernaryOperation EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3937:2: iv_ruleXTernaryOperation= ruleXTernaryOperation EOF
			{
			dbg.location(3937,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXTernaryOperationRule()); }dbg.location(3938,27);
			pushFollow(FOLLOW_ruleXTernaryOperation_in_entryRuleXTernaryOperation8839);
			iv_ruleXTernaryOperation=ruleXTernaryOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(3939,3);
			if ( state.backtracking==0 ) { current =iv_ruleXTernaryOperation; }dbg.location(3940,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXTernaryOperation8849); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(3941, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXTernaryOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXTernaryOperation"



	// $ANTLR start "ruleXTernaryOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3944:1: ruleXTernaryOperation returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) ) )* ) ;
	public final EObject ruleXTernaryOperation() throws RecognitionException {
		EObject current = null;


		Token otherlv_2=null;
		Token otherlv_4=null;
		EObject this_XMultiplicativeExpression_0 =null;
		EObject lv_trueOperand_3_0 =null;
		EObject lv_falseOperand_5_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXTernaryOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(3944, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3947:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3948:5: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) ) )* )
			{
			dbg.location(3948,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3948:5: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3949:5: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) ) )*
			{
			dbg.location(3949,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXTernaryOperationAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
			    }dbg.location(3952,37);
			pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXTernaryOperation8896);
			this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(3953,5);
			if ( state.backtracking==0 ) { 
			        current = this_XMultiplicativeExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(3957,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:2: ( ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) ) )*
			try { dbg.enterSubRule(85);

			loop85:
			while (true) {
				int alt85=2;
				try { dbg.enterDecision(85, decisionCanBacktrack[85]);

				int LA85_0 = input.LA(1);
				if ( (LA85_0==54) ) {
					int LA85_2 = input.LA(2);
					if ( (synpred24_InternalXAML()) ) {
						alt85=1;
					}

				}

				} finally {dbg.exitDecision(85);}

				switch (alt85) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:2: ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) ) ( (lv_trueOperand_3_0= ruleXExpression ) ) otherlv_4= ':' ( (lv_falseOperand_5_0= ruleXExpression ) )
					{
					dbg.location(3957,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:2: ( ( ( () '?' ) )=> ( () otherlv_2= '?' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:3: ( ( () '?' ) )=> ( () otherlv_2= '?' )
					{
					dbg.location(3959,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3959:5: ( () otherlv_2= '?' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3959:6: () otherlv_2= '?'
					{
					dbg.location(3959,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3959:6: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3960:5: 
					{
					dbg.location(3960,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXTernaryOperationAccess().getXTernaryOperationConditionAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(3965,12);
					otherlv_2=(Token)match(input,54,FOLLOW_54_in_ruleXTernaryOperation8931); if (state.failed) return current;dbg.location(3966,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_2, grammarAccess.getXTernaryOperationAccess().getQuestionMarkKeyword_1_0_0_1());
					    }
					}

					}
					dbg.location(3969,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3969:3: ( (lv_trueOperand_3_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3970:3: (lv_trueOperand_3_0= ruleXExpression )
					{
					dbg.location(3970,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3970:3: (lv_trueOperand_3_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3971:3: lv_trueOperand_3_0= ruleXExpression
					{
					dbg.location(3971,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXTernaryOperationAccess().getTrueOperandXExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(3974,21);
					pushFollow(FOLLOW_ruleXExpression_in_ruleXTernaryOperation8954);
					lv_trueOperand_3_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3974,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXTernaryOperationRule());
						        }
					       		set(
					       			current, 
					       			"trueOperand",
					        		lv_trueOperand_3_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(3987,12);
					otherlv_4=(Token)match(input,42,FOLLOW_42_in_ruleXTernaryOperation8966); if (state.failed) return current;dbg.location(3988,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_4, grammarAccess.getXTernaryOperationAccess().getColonKeyword_1_2());
					    }dbg.location(3991,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3991:3: ( (lv_falseOperand_5_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3992:3: (lv_falseOperand_5_0= ruleXExpression )
					{
					dbg.location(3992,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3992:3: (lv_falseOperand_5_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3993:3: lv_falseOperand_5_0= ruleXExpression
					{
					dbg.location(3993,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXTernaryOperationAccess().getFalseOperandXExpressionParserRuleCall_1_3_0()); 
						    }dbg.location(3996,22);
					pushFollow(FOLLOW_ruleXExpression_in_ruleXTernaryOperation8987);
					lv_falseOperand_5_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(3996,40);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXTernaryOperationRule());
						        }
					       		set(
					       			current, 
					       			"falseOperand",
					        		lv_falseOperand_5_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop85;
				}
			}
			} finally {dbg.exitSubRule(85);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4010, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXTernaryOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXTernaryOperation"



	// $ANTLR start "entryRuleXMultiplicativeExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4017:1: entryRuleXMultiplicativeExpression returns [EObject current=null] :iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
	public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXMultiplicativeExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXMultiplicativeExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4017, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4018:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4019:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
			{
			dbg.location(4019,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }dbg.location(4020,35);
			pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression9025);
			iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(4021,3);
			if ( state.backtracking==0 ) { current =iv_ruleXMultiplicativeExpression; }dbg.location(4022,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXMultiplicativeExpression9035); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4023, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXMultiplicativeExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXMultiplicativeExpression"



	// $ANTLR start "ruleXMultiplicativeExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4026:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) ) )* ) ;
	public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
		EObject current = null;


		EObject this_XPostfixOperation_0 =null;
		EObject lv_rightOperand_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXMultiplicativeExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4026, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4029:28: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4030:5: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) ) )* )
			{
			dbg.location(4030,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4030:5: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4031:5: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) ) )*
			{
			dbg.location(4031,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
			    }dbg.location(4034,29);
			pushFollow(FOLLOW_ruleXPostfixOperation_in_ruleXMultiplicativeExpression9082);
			this_XPostfixOperation_0=ruleXPostfixOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(4035,5);
			if ( state.backtracking==0 ) { 
			        current = this_XPostfixOperation_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(4039,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:2: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) ) )*
			try { dbg.enterSubRule(86);

			loop86:
			while (true) {
				int alt86=2;
				try { dbg.enterDecision(86, decisionCanBacktrack[86]);

				switch ( input.LA(1) ) {
				case 28:
					{
					int LA86_2 = input.LA(2);
					if ( (synpred25_InternalXAML()) ) {
						alt86=1;
					}

					}
					break;
				case 39:
					{
					int LA86_3 = input.LA(2);
					if ( (synpred25_InternalXAML()) ) {
						alt86=1;
					}

					}
					break;
				case 21:
					{
					int LA86_4 = input.LA(2);
					if ( (synpred25_InternalXAML()) ) {
						alt86=1;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(86);}

				switch (alt86) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXPostfixOperation ) )
					{
					dbg.location(4039,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
					{
					dbg.location(4044,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4044:6: ( () ( ( ruleOpMulti ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4044:7: () ( ( ruleOpMulti ) )
					{
					dbg.location(4044,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4044:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4045:5: 
					{
					dbg.location(4045,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(4050,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4050:2: ( ( ruleOpMulti ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4051:3: ( ruleOpMulti )
					{
					dbg.location(4051,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4051:3: ( ruleOpMulti )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4052:3: ruleOpMulti
					{
					dbg.location(4052,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
						        }
					        }dbg.location(4057,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(4060,3);
					pushFollow(FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression9135);
					ruleOpMulti();
					state._fsp--;
					if (state.failed) return current;dbg.location(4060,16);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(4065,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4065:4: ( (lv_rightOperand_3_0= ruleXPostfixOperation ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4066:3: (lv_rightOperand_3_0= ruleXPostfixOperation )
					{
					dbg.location(4066,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4066:3: (lv_rightOperand_3_0= ruleXPostfixOperation )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4067:3: lv_rightOperand_3_0= ruleXPostfixOperation
					{
					dbg.location(4067,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXPostfixOperationParserRuleCall_1_1_0()); 
						    }dbg.location(4070,22);
					pushFollow(FOLLOW_ruleXPostfixOperation_in_ruleXMultiplicativeExpression9158);
					lv_rightOperand_3_0=ruleXPostfixOperation();
					state._fsp--;
					if (state.failed) return current;dbg.location(4070,46);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
						        }
					       		set(
					       			current, 
					       			"rightOperand",
					        		lv_rightOperand_3_0, 
					        		"XPostfixOperation");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop86;
				}
			}
			} finally {dbg.exitSubRule(86);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4084, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXMultiplicativeExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXMultiplicativeExpression"



	// $ANTLR start "entryRuleOpMulti"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4091:1: entryRuleOpMulti returns [String current=null] :iv_ruleOpMulti= ruleOpMulti EOF ;
	public final String entryRuleOpMulti() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpMulti =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpMulti");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4091, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4092:2: (iv_ruleOpMulti= ruleOpMulti EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4093:2: iv_ruleOpMulti= ruleOpMulti EOF
			{
			dbg.location(4093,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpMultiRule()); }dbg.location(4094,17);
			pushFollow(FOLLOW_ruleOpMulti_in_entryRuleOpMulti9197);
			iv_ruleOpMulti=ruleOpMulti();
			state._fsp--;
			if (state.failed) return current;dbg.location(4095,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpMulti.getText(); }dbg.location(4096,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpMulti9208); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4097, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpMulti");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpMulti"



	// $ANTLR start "ruleOpMulti"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4100:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' |kw= '/' |kw= '%' ) ;
	public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpMulti");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4100, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4103:28: ( (kw= '*' |kw= '/' |kw= '%' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4104:2: (kw= '*' |kw= '/' |kw= '%' )
			{
			dbg.location(4104,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4104:2: (kw= '*' |kw= '/' |kw= '%' )
			int alt87=3;
			try { dbg.enterSubRule(87);
			try { dbg.enterDecision(87, decisionCanBacktrack[87]);

			switch ( input.LA(1) ) {
			case 28:
				{
				alt87=1;
				}
				break;
			case 39:
				{
				alt87=2;
				}
				break;
			case 21:
				{
				alt87=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 87, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(87);}

			switch (alt87) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4105:2: kw= '*'
					{
					dbg.location(4105,4);
					kw=(Token)match(input,28,FOLLOW_28_in_ruleOpMulti9246); if (state.failed) return current;dbg.location(4106,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4112:2: kw= '/'
					{
					dbg.location(4112,4);
					kw=(Token)match(input,39,FOLLOW_39_in_ruleOpMulti9265); if (state.failed) return current;dbg.location(4113,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4119:2: kw= '%'
					{
					dbg.location(4119,4);
					kw=(Token)match(input,21,FOLLOW_21_in_ruleOpMulti9284); if (state.failed) return current;dbg.location(4120,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(87);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4125, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpMulti");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpMulti"



	// $ANTLR start "entryRuleXPostfixOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4132:1: entryRuleXPostfixOperation returns [EObject current=null] :iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
	public final EObject entryRuleXPostfixOperation() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXPostfixOperation =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXPostfixOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4132, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4133:2: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4134:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
			{
			dbg.location(4134,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXPostfixOperationRule()); }dbg.location(4135,27);
			pushFollow(FOLLOW_ruleXPostfixOperation_in_entryRuleXPostfixOperation9324);
			iv_ruleXPostfixOperation=ruleXPostfixOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(4136,3);
			if ( state.backtracking==0 ) { current =iv_ruleXPostfixOperation; }dbg.location(4137,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXPostfixOperation9334); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4138, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXPostfixOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXPostfixOperation"



	// $ANTLR start "ruleXPostfixOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4141:1: ruleXPostfixOperation returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) ) )* ) ;
	public final EObject ruleXPostfixOperation() throws RecognitionException {
		EObject current = null;


		EObject this_XUnaryOperation_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXPostfixOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4141, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4144:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4145:5: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) ) )* )
			{
			dbg.location(4145,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4145:5: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4146:5: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) ) )*
			{
			dbg.location(4146,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXUnaryOperationParserRuleCall_0()); 
			    }dbg.location(4149,27);
			pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXPostfixOperation9381);
			this_XUnaryOperation_0=ruleXUnaryOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(4150,5);
			if ( state.backtracking==0 ) { 
			        current = this_XUnaryOperation_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(4154,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:2: ( ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) ) )*
			try { dbg.enterSubRule(88);

			loop88:
			while (true) {
				int alt88=2;
				try { dbg.enterDecision(88, decisionCanBacktrack[88]);

				int LA88_0 = input.LA(1);
				if ( (LA88_0==31) ) {
					int LA88_2 = input.LA(2);
					if ( (synpred26_InternalXAML()) ) {
						alt88=1;
					}

				}
				else if ( (LA88_0==35) ) {
					int LA88_3 = input.LA(2);
					if ( (synpred26_InternalXAML()) ) {
						alt88=1;
					}

				}

				} finally {dbg.exitDecision(88);}

				switch (alt88) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:2: ( ( () ( ( rulePrefixOp ) ) ) )=> ( () ( ( rulePrefixOp ) ) )
					{
					dbg.location(4159,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4159:6: ( () ( ( rulePrefixOp ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4159:7: () ( ( rulePrefixOp ) )
					{
					dbg.location(4159,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4159:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4160:5: 
					{
					dbg.location(4160,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
					            current);
					    }
					}
					dbg.location(4165,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4165:2: ( ( rulePrefixOp ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4166:3: ( rulePrefixOp )
					{
					dbg.location(4166,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4166:3: ( rulePrefixOp )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4167:3: rulePrefixOp
					{
					dbg.location(4167,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXPostfixOperationRule());
						        }
					        }dbg.location(4172,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
						    }dbg.location(4175,3);
					pushFollow(FOLLOW_rulePrefixOp_in_ruleXPostfixOperation9433);
					rulePrefixOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(4175,17);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;

				default :
					break loop88;
				}
			}
			} finally {dbg.exitSubRule(88);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4181, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXPostfixOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXPostfixOperation"



	// $ANTLR start "entryRulePrefixOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4188:1: entryRulePrefixOp returns [String current=null] :iv_rulePrefixOp= rulePrefixOp EOF ;
	public final String entryRulePrefixOp() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_rulePrefixOp =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRulePrefixOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4188, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4189:2: (iv_rulePrefixOp= rulePrefixOp EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4190:2: iv_rulePrefixOp= rulePrefixOp EOF
			{
			dbg.location(4190,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getPrefixOpRule()); }dbg.location(4191,18);
			pushFollow(FOLLOW_rulePrefixOp_in_entryRulePrefixOp9473);
			iv_rulePrefixOp=rulePrefixOp();
			state._fsp--;
			if (state.failed) return current;dbg.location(4192,3);
			if ( state.backtracking==0 ) { current =iv_rulePrefixOp.getText(); }dbg.location(4193,3);
			match(input,EOF,FOLLOW_EOF_in_entryRulePrefixOp9484); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4194, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRulePrefixOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRulePrefixOp"



	// $ANTLR start "rulePrefixOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4197:1: rulePrefixOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' |kw= '--' ) ;
	public final AntlrDatatypeRuleToken rulePrefixOp() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "rulePrefixOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4197, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4200:28: ( (kw= '++' |kw= '--' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4201:2: (kw= '++' |kw= '--' )
			{
			dbg.location(4201,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4201:2: (kw= '++' |kw= '--' )
			int alt89=2;
			try { dbg.enterSubRule(89);
			try { dbg.enterDecision(89, decisionCanBacktrack[89]);

			int LA89_0 = input.LA(1);
			if ( (LA89_0==31) ) {
				alt89=1;
			}
			else if ( (LA89_0==35) ) {
				alt89=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 89, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(89);}

			switch (alt89) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4202:2: kw= '++'
					{
					dbg.location(4202,4);
					kw=(Token)match(input,31,FOLLOW_31_in_rulePrefixOp9522); if (state.failed) return current;dbg.location(4203,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getPrefixOpAccess().getPlusSignPlusSignKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4209:2: kw= '--'
					{
					dbg.location(4209,4);
					kw=(Token)match(input,35,FOLLOW_35_in_rulePrefixOp9541); if (state.failed) return current;dbg.location(4210,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getPrefixOpAccess().getHyphenMinusHyphenMinusKeyword_1()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(89);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4215, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rulePrefixOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "rulePrefixOp"



	// $ANTLR start "entryRuleXUnaryOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4222:1: entryRuleXUnaryOperation returns [EObject current=null] :iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
	public final EObject entryRuleXUnaryOperation() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXUnaryOperation =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXUnaryOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4222, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4223:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4224:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
			{
			dbg.location(4224,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXUnaryOperationRule()); }dbg.location(4225,25);
			pushFollow(FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation9581);
			iv_ruleXUnaryOperation=ruleXUnaryOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(4226,3);
			if ( state.backtracking==0 ) { current =iv_ruleXUnaryOperation; }dbg.location(4227,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXUnaryOperation9591); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4228, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXUnaryOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXUnaryOperation"



	// $ANTLR start "ruleXUnaryOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4231:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) |this_XCastedExpression_3= ruleXCastedExpression ) ;
	public final EObject ruleXUnaryOperation() throws RecognitionException {
		EObject current = null;


		EObject lv_operand_2_0 =null;
		EObject this_XCastedExpression_3 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXUnaryOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4231, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4234:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) |this_XCastedExpression_3= ruleXCastedExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4235:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) |this_XCastedExpression_3= ruleXCastedExpression )
			{
			dbg.location(4235,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4235:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) |this_XCastedExpression_3= ruleXCastedExpression )
			int alt90=2;
			try { dbg.enterSubRule(90);
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==18||(LA90_0 >= 30 && LA90_0 <= 31)||(LA90_0 >= 34 && LA90_0 <= 35)||LA90_0==93) ) {
				alt90=1;
			}
			else if ( (LA90_0==RULE_STRING||LA90_0==88) ) {
				alt90=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4235:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
					{
					dbg.location(4235,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4235:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4235:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
					{
					dbg.location(4235,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4235:3: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4236:5: 
					{
					dbg.location(4236,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElement(
					            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
					            current);
					    }
					}
					dbg.location(4241,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4241:2: ( ( ruleOpUnary ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4242:3: ( ruleOpUnary )
					{
					dbg.location(4242,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4242:3: ( ruleOpUnary )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4243:3: ruleOpUnary
					{
					dbg.location(4243,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXUnaryOperationRule());
						        }
					        }dbg.location(4248,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
						    }dbg.location(4251,3);
					pushFollow(FOLLOW_ruleOpUnary_in_ruleXUnaryOperation9649);
					ruleOpUnary();
					state._fsp--;
					if (state.failed) return current;dbg.location(4251,16);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(4256,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4256:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4257:3: (lv_operand_2_0= ruleXUnaryOperation )
					{
					dbg.location(4257,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4257:3: (lv_operand_2_0= ruleXUnaryOperation )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4258:3: lv_operand_2_0= ruleXUnaryOperation
					{
					dbg.location(4258,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
						    }dbg.location(4261,17);
					pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation9670);
					lv_operand_2_0=ruleXUnaryOperation();
					state._fsp--;
					if (state.failed) return current;dbg.location(4261,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
						        }
					       		set(
					       			current, 
					       			"operand",
					        		lv_operand_2_0, 
					        		"XUnaryOperation");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4276:5: this_XCastedExpression_3= ruleXCastedExpression
					{
					dbg.location(4276,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
					    }dbg.location(4279,29);
					pushFollow(FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation9699);
					this_XCastedExpression_3=ruleXCastedExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(4280,5);
					if ( state.backtracking==0 ) { 
					        current = this_XCastedExpression_3; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(90);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4285, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXUnaryOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXUnaryOperation"



	// $ANTLR start "entryRuleOpUnary"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4292:1: entryRuleOpUnary returns [String current=null] :iv_ruleOpUnary= ruleOpUnary EOF ;
	public final String entryRuleOpUnary() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleOpUnary =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleOpUnary");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4292, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4293:2: (iv_ruleOpUnary= ruleOpUnary EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4294:2: iv_ruleOpUnary= ruleOpUnary EOF
			{
			dbg.location(4294,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getOpUnaryRule()); }dbg.location(4295,17);
			pushFollow(FOLLOW_ruleOpUnary_in_entryRuleOpUnary9735);
			iv_ruleOpUnary=ruleOpUnary();
			state._fsp--;
			if (state.failed) return current;dbg.location(4296,3);
			if ( state.backtracking==0 ) { current =iv_ruleOpUnary.getText(); }dbg.location(4297,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleOpUnary9746); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4298, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleOpUnary");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleOpUnary"



	// $ANTLR start "ruleOpUnary"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4301:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' |kw= '-' |kw= '+' |kw= '~' |kw= '++' |kw= '--' ) ;
	public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleOpUnary");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4301, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4304:28: ( (kw= '!' |kw= '-' |kw= '+' |kw= '~' |kw= '++' |kw= '--' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4305:2: (kw= '!' |kw= '-' |kw= '+' |kw= '~' |kw= '++' |kw= '--' )
			{
			dbg.location(4305,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4305:2: (kw= '!' |kw= '-' |kw= '+' |kw= '~' |kw= '++' |kw= '--' )
			int alt91=6;
			try { dbg.enterSubRule(91);
			try { dbg.enterDecision(91, decisionCanBacktrack[91]);

			switch ( input.LA(1) ) {
			case 18:
				{
				alt91=1;
				}
				break;
			case 34:
				{
				alt91=2;
				}
				break;
			case 30:
				{
				alt91=3;
				}
				break;
			case 93:
				{
				alt91=4;
				}
				break;
			case 31:
				{
				alt91=5;
				}
				break;
			case 35:
				{
				alt91=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 91, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(91);}

			switch (alt91) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4306:2: kw= '!'
					{
					dbg.location(4306,4);
					kw=(Token)match(input,18,FOLLOW_18_in_ruleOpUnary9784); if (state.failed) return current;dbg.location(4307,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4313:2: kw= '-'
					{
					dbg.location(4313,4);
					kw=(Token)match(input,34,FOLLOW_34_in_ruleOpUnary9803); if (state.failed) return current;dbg.location(4314,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4320:2: kw= '+'
					{
					dbg.location(4320,4);
					kw=(Token)match(input,30,FOLLOW_30_in_ruleOpUnary9822); if (state.failed) return current;dbg.location(4321,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4327:2: kw= '~'
					{
					dbg.location(4327,4);
					kw=(Token)match(input,93,FOLLOW_93_in_ruleOpUnary9841); if (state.failed) return current;dbg.location(4328,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getTildeKeyword_3()); 
					    }
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4334:2: kw= '++'
					{
					dbg.location(4334,4);
					kw=(Token)match(input,31,FOLLOW_31_in_ruleOpUnary9860); if (state.failed) return current;dbg.location(4335,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignPlusSignKeyword_4()); 
					    }
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4341:2: kw= '--'
					{
					dbg.location(4341,4);
					kw=(Token)match(input,35,FOLLOW_35_in_ruleOpUnary9879); if (state.failed) return current;dbg.location(4342,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusHyphenMinusKeyword_5()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(91);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4347, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleOpUnary");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleOpUnary"



	// $ANTLR start "entryRuleXCastedExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4354:1: entryRuleXCastedExpression returns [EObject current=null] :iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
	public final EObject entryRuleXCastedExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXCastedExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXCastedExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4354, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4355:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4356:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
			{
			dbg.location(4356,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXCastedExpressionRule()); }dbg.location(4357,27);
			pushFollow(FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression9919);
			iv_ruleXCastedExpression=ruleXCastedExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(4358,3);
			if ( state.backtracking==0 ) { current =iv_ruleXCastedExpression; }dbg.location(4359,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXCastedExpression9929); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4360, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXCastedExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXCastedExpression"



	// $ANTLR start "ruleXCastedExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4363:1: ruleXCastedExpression returns [EObject current=null] : (this_XIndexOperation_0= ruleXIndexOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
	public final EObject ruleXCastedExpression() throws RecognitionException {
		EObject current = null;


		Token otherlv_2=null;
		EObject this_XIndexOperation_0 =null;
		EObject lv_type_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXCastedExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4363, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4366:28: ( (this_XIndexOperation_0= ruleXIndexOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4367:5: (this_XIndexOperation_0= ruleXIndexOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
			{
			dbg.location(4367,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4367:5: (this_XIndexOperation_0= ruleXIndexOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4368:5: this_XIndexOperation_0= ruleXIndexOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
			{
			dbg.location(4368,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXIndexOperationParserRuleCall_0()); 
			    }dbg.location(4371,27);
			pushFollow(FOLLOW_ruleXIndexOperation_in_ruleXCastedExpression9976);
			this_XIndexOperation_0=ruleXIndexOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(4372,5);
			if ( state.backtracking==0 ) { 
			        current = this_XIndexOperation_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(4376,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:2: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
			try { dbg.enterSubRule(92);

			loop92:
			while (true) {
				int alt92=2;
				try { dbg.enterDecision(92, decisionCanBacktrack[92]);

				int LA92_0 = input.LA(1);
				if ( (LA92_0==62) ) {
					int LA92_2 = input.LA(2);
					if ( (synpred27_InternalXAML()) ) {
						alt92=1;
					}

				}

				} finally {dbg.exitDecision(92);}

				switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
					{
					dbg.location(4376,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:3: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
					{
					dbg.location(4378,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4378:5: ( () otherlv_2= 'as' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4378:6: () otherlv_2= 'as'
					{
					dbg.location(4378,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4378:6: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4379:5: 
					{
					dbg.location(4379,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(4384,12);
					otherlv_2=(Token)match(input,62,FOLLOW_62_in_ruleXCastedExpression10011); if (state.failed) return current;dbg.location(4385,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
					    }
					}

					}
					dbg.location(4388,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4388:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4389:3: (lv_type_3_0= ruleJvmTypeReference )
					{
					dbg.location(4389,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4389:3: (lv_type_3_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4390:3: lv_type_3_0= ruleJvmTypeReference
					{
					dbg.location(4390,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
						    }dbg.location(4393,14);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression10034);
					lv_type_3_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(4393,37);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
						        }
					       		set(
					       			current, 
					       			"type",
					        		lv_type_3_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop92;
				}
			}
			} finally {dbg.exitSubRule(92);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4407, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXCastedExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXCastedExpression"



	// $ANTLR start "entryRuleXIndexOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4414:1: entryRuleXIndexOperation returns [EObject current=null] :iv_ruleXIndexOperation= ruleXIndexOperation EOF ;
	public final EObject entryRuleXIndexOperation() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXIndexOperation =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXIndexOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4414, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4415:2: (iv_ruleXIndexOperation= ruleXIndexOperation EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4416:2: iv_ruleXIndexOperation= ruleXIndexOperation EOF
			{
			dbg.location(4416,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXIndexOperationRule()); }dbg.location(4417,25);
			pushFollow(FOLLOW_ruleXIndexOperation_in_entryRuleXIndexOperation10072);
			iv_ruleXIndexOperation=ruleXIndexOperation();
			state._fsp--;
			if (state.failed) return current;dbg.location(4418,3);
			if ( state.backtracking==0 ) { current =iv_ruleXIndexOperation; }dbg.location(4419,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXIndexOperation10082); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4420, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXIndexOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXIndexOperation"



	// $ANTLR start "ruleXIndexOperation"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4423:1: ruleXIndexOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']' )* ) ;
	public final EObject ruleXIndexOperation() throws RecognitionException {
		EObject current = null;


		Token otherlv_4=null;
		EObject this_XMemberFeatureCall_0 =null;
		EObject lv_index_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXIndexOperation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4423, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4426:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']' )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4427:5: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']' )* )
			{
			dbg.location(4427,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4427:5: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']' )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4428:5: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']' )*
			{
			dbg.location(4428,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXIndexOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
			    }dbg.location(4431,30);
			pushFollow(FOLLOW_ruleXMemberFeatureCall_in_ruleXIndexOperation10129);
			this_XMemberFeatureCall_0=ruleXMemberFeatureCall();
			state._fsp--;
			if (state.failed) return current;dbg.location(4432,5);
			if ( state.backtracking==0 ) { 
			        current = this_XMemberFeatureCall_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(4436,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:2: ( ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']' )*
			try { dbg.enterSubRule(93);

			loop93:
			while (true) {
				int alt93=2;
				try { dbg.enterDecision(93, decisionCanBacktrack[93]);

				int LA93_0 = input.LA(1);
				if ( (LA93_0==57) ) {
					int LA93_2 = input.LA(2);
					if ( (synpred28_InternalXAML()) ) {
						alt93=1;
					}

				}

				} finally {dbg.exitDecision(93);}

				switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:2: ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) ) ( (lv_index_3_0= ruleXExpression ) ) otherlv_4= ']'
					{
					dbg.location(4436,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:2: ( ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:3: ( ( () ( ( ruleIndexOp ) ) ) )=> ( () ( ( ruleIndexOp ) ) )
					{
					dbg.location(4441,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4441:6: ( () ( ( ruleIndexOp ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4441:7: () ( ( ruleIndexOp ) )
					{
					dbg.location(4441,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4441:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4442:5: 
					{
					dbg.location(4442,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXIndexOperationAccess().getXIndexOperationExpressionAction_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(4447,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4447:2: ( ( ruleIndexOp ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4448:3: ( ruleIndexOp )
					{
					dbg.location(4448,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4448:3: ( ruleIndexOp )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4449:3: ruleIndexOp
					{
					dbg.location(4449,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXIndexOperationRule());
						        }
					        }dbg.location(4454,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXIndexOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
						    }dbg.location(4457,3);
					pushFollow(FOLLOW_ruleIndexOp_in_ruleXIndexOperation10182);
					ruleIndexOp();
					state._fsp--;
					if (state.failed) return current;dbg.location(4457,16);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					dbg.location(4462,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4462:4: ( (lv_index_3_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4463:3: (lv_index_3_0= ruleXExpression )
					{
					dbg.location(4463,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4463:3: (lv_index_3_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4464:3: lv_index_3_0= ruleXExpression
					{
					dbg.location(4464,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXIndexOperationAccess().getIndexXExpressionParserRuleCall_1_1_0()); 
						    }dbg.location(4467,15);
					pushFollow(FOLLOW_ruleXExpression_in_ruleXIndexOperation10205);
					lv_index_3_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(4467,33);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXIndexOperationRule());
						        }
					       		set(
					       			current, 
					       			"index",
					        		lv_index_3_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(4480,12);
					otherlv_4=(Token)match(input,58,FOLLOW_58_in_ruleXIndexOperation10217); if (state.failed) return current;dbg.location(4481,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_4, grammarAccess.getXIndexOperationAccess().getRightSquareBracketKeyword_1_2());
					    }
					}
					break;

				default :
					break loop93;
				}
			}
			} finally {dbg.exitSubRule(93);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4485, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXIndexOperation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXIndexOperation"



	// $ANTLR start "entryRuleIndexOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4492:1: entryRuleIndexOp returns [String current=null] :iv_ruleIndexOp= ruleIndexOp EOF ;
	public final String entryRuleIndexOp() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleIndexOp =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleIndexOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4492, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4493:2: (iv_ruleIndexOp= ruleIndexOp EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4494:2: iv_ruleIndexOp= ruleIndexOp EOF
			{
			dbg.location(4494,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getIndexOpRule()); }dbg.location(4495,17);
			pushFollow(FOLLOW_ruleIndexOp_in_entryRuleIndexOp10256);
			iv_ruleIndexOp=ruleIndexOp();
			state._fsp--;
			if (state.failed) return current;dbg.location(4496,3);
			if ( state.backtracking==0 ) { current =iv_ruleIndexOp.getText(); }dbg.location(4497,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleIndexOp10267); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4498, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleIndexOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleIndexOp"



	// $ANTLR start "ruleIndexOp"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4501:1: ruleIndexOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '[' ;
	public final AntlrDatatypeRuleToken ruleIndexOp() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleIndexOp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4501, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4504:28: (kw= '[' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4506:2: kw= '['
			{
			dbg.location(4506,4);
			kw=(Token)match(input,57,FOLLOW_57_in_ruleIndexOp10304); if (state.failed) return current;dbg.location(4507,5);
			if ( state.backtracking==0 ) {
			        current.merge(kw);
			        newLeafNode(kw, grammarAccess.getIndexOpAccess().getLeftSquareBracketKeyword()); 
			    }
			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4512, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleIndexOp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleIndexOp"



	// $ANTLR start "entryRuleXMemberFeatureCall"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4519:1: entryRuleXMemberFeatureCall returns [EObject current=null] :iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
	public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXMemberFeatureCall =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXMemberFeatureCall");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4519, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4520:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4521:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
			{
			dbg.location(4521,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }dbg.location(4522,28);
			pushFollow(FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall10343);
			iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();
			state._fsp--;
			if (state.failed) return current;dbg.location(4523,3);
			if ( state.backtracking==0 ) { current =iv_ruleXMemberFeatureCall; }dbg.location(4524,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXMemberFeatureCall10353); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4525, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXMemberFeatureCall");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXMemberFeatureCall"



	// $ANTLR start "ruleXMemberFeatureCall"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4528:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' ) | ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? ) )* ) ;
	public final EObject ruleXMemberFeatureCall() throws RecognitionException {
		EObject current = null;


		Token lv_explicitOperationCall_2_0=null;
		Token otherlv_4=null;
		Token otherlv_6=null;
		Token otherlv_8=null;
		Token lv_explicitStatic_9_0=null;
		Token otherlv_14=null;
		Token lv_nullSafe_15_0=null;
		Token lv_explicitStatic_16_0=null;
		Token otherlv_17=null;
		Token otherlv_19=null;
		Token otherlv_21=null;
		Token lv_explicitOperationCall_23_0=null;
		Token otherlv_25=null;
		Token otherlv_27=null;
		EObject this_XPrimaryExpression_0 =null;
		EObject lv_memberCallArguments_3_0 =null;
		EObject lv_memberCallArguments_5_0 =null;
		EObject lv_value_12_0 =null;
		EObject lv_typeArguments_18_0 =null;
		EObject lv_typeArguments_20_0 =null;
		EObject lv_memberCallArguments_24_0 =null;
		EObject lv_memberCallArguments_26_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXMemberFeatureCall");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4528, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4531:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' ) | ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4532:5: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' ) | ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? ) )* )
			{
			dbg.location(4532,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4532:5: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' ) | ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4533:5: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' ) | ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? ) )*
			{
			dbg.location(4533,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
			    }dbg.location(4536,30);
			pushFollow(FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall10400);
			this_XPrimaryExpression_0=ruleXPrimaryExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(4537,5);
			if ( state.backtracking==0 ) { 
			        current = this_XPrimaryExpression_0; 
			        afterParserOrEnumRuleCall();
			    }dbg.location(4541,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:2: ( ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' ) | ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? ) )*
			try { dbg.enterSubRule(103);

			loop103:
			while (true) {
				int alt103=4;
				try { dbg.enterDecision(103, decisionCanBacktrack[103]);

				switch ( input.LA(1) ) {
				case 26:
					{
					int LA103_2 = input.LA(2);
					if ( (synpred29_InternalXAML()) ) {
						alt103=1;
					}

					}
					break;
				case 37:
					{
					int LA103_3 = input.LA(2);
					if ( (synpred30_InternalXAML()) ) {
						alt103=2;
					}
					else if ( (synpred31_InternalXAML()) ) {
						alt103=3;
					}

					}
					break;
				case 43:
					{
					int LA103_4 = input.LA(2);
					if ( (synpred30_InternalXAML()) ) {
						alt103=2;
					}
					else if ( (synpred31_InternalXAML()) ) {
						alt103=3;
					}

					}
					break;
				case 55:
					{
					int LA103_5 = input.LA(2);
					if ( (synpred31_InternalXAML()) ) {
						alt103=3;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(103);}

				switch (alt103) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:2: ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )
					{
					dbg.location(4541,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:2: ( ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:3: ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) ) ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')'
					{
					dbg.location(4541,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:3: ( ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:4: ( ( () ( ( '(' ) ) ) )=> ( () ( (lv_explicitOperationCall_2_0= '(' ) ) )
					{
					dbg.location(4548,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4548:6: ( () ( (lv_explicitOperationCall_2_0= '(' ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4548:7: () ( (lv_explicitOperationCall_2_0= '(' ) )
					{
					dbg.location(4548,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4548:7: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4549:5: 
					{
					dbg.location(4549,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCall1MemberCallTargetAction_1_0_0_0_0(),
					            current);
					    }
					}
					dbg.location(4554,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4554:2: ( (lv_explicitOperationCall_2_0= '(' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4555:3: (lv_explicitOperationCall_2_0= '(' )
					{
					dbg.location(4555,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4555:3: (lv_explicitOperationCall_2_0= '(' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4556:3: lv_explicitOperationCall_2_0= '('
					{
					dbg.location(4556,31);
					lv_explicitOperationCall_2_0=(Token)match(input,26,FOLLOW_26_in_ruleXMemberFeatureCall10452); if (state.failed) return current;dbg.location(4557,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_explicitOperationCall_2_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_0_0_0_1_0());
					    }dbg.location(4561,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
						        }
					       		setWithLastConsumed(current, "explicitOperationCall", true, "(");
						    }
					}

					}

					}

					}
					dbg.location(4569,4);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4569:4: ( ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )* )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==RULE_STRING||LA95_0==18||(LA95_0 >= 30 && LA95_0 <= 31)||(LA95_0 >= 34 && LA95_0 <= 35)||LA95_0==88||LA95_0==93) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4569:5: ( (lv_memberCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )*
							{
							dbg.location(4569,5);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4569:5: ( (lv_memberCallArguments_3_0= ruleXExpression ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4570:3: (lv_memberCallArguments_3_0= ruleXExpression )
							{
							dbg.location(4570,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4570:3: (lv_memberCallArguments_3_0= ruleXExpression )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4571:3: lv_memberCallArguments_3_0= ruleXExpression
							{
							dbg.location(4571,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_0_1_0_0()); 
								    }dbg.location(4574,29);
							pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall10489);
							lv_memberCallArguments_3_0=ruleXExpression();
							state._fsp--;
							if (state.failed) return current;dbg.location(4574,47);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
								        }
							       		add(
							       			current, 
							       			"memberCallArguments",
							        		lv_memberCallArguments_3_0, 
							        		"XExpression");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(4587,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4587:2: (otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) ) )*
							try { dbg.enterSubRule(94);

							loop94:
							while (true) {
								int alt94=2;
								try { dbg.enterDecision(94, decisionCanBacktrack[94]);

								int LA94_0 = input.LA(1);
								if ( (LA94_0==33) ) {
									alt94=1;
								}

								} finally {dbg.exitDecision(94);}

								switch (alt94) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4587:4: otherlv_4= ',' ( (lv_memberCallArguments_5_0= ruleXExpression ) )
									{
									dbg.location(4587,13);
									otherlv_4=(Token)match(input,33,FOLLOW_33_in_ruleXMemberFeatureCall10502); if (state.failed) return current;dbg.location(4588,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_4, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_0_1_1_0());
									    }dbg.location(4591,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4591:3: ( (lv_memberCallArguments_5_0= ruleXExpression ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4592:3: (lv_memberCallArguments_5_0= ruleXExpression )
									{
									dbg.location(4592,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4592:3: (lv_memberCallArguments_5_0= ruleXExpression )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4593:3: lv_memberCallArguments_5_0= ruleXExpression
									{
									dbg.location(4593,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_0_1_1_1_0()); 
										    }dbg.location(4596,29);
									pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall10523);
									lv_memberCallArguments_5_0=ruleXExpression();
									state._fsp--;
									if (state.failed) return current;dbg.location(4596,47);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
										        }
									       		add(
									       			current, 
									       			"memberCallArguments",
									        		lv_memberCallArguments_5_0, 
									        		"XExpression");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop94;
								}
							}
							} finally {dbg.exitSubRule(94);}

							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(4609,16);
					otherlv_6=(Token)match(input,27,FOLLOW_27_in_ruleXMemberFeatureCall10539); if (state.failed) return current;dbg.location(4610,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_6, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_0_2());
					    }
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:6: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) )
					{
					dbg.location(4614,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:6: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:7: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_12_0= ruleXAssignment ) )
					{
					dbg.location(4614,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:7: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:8: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
					{
					dbg.location(4627,25);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4627:25: ( () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4627:26: () (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
					{
					dbg.location(4627,26);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4627:26: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4628:5: 
					{
					dbg.location(4628,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_1_0_0_0(),
					            current);
					    }
					}
					dbg.location(4633,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4633:2: (otherlv_8= '.' | ( (lv_explicitStatic_9_0= '::' ) ) )
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==37) ) {
						alt96=1;
					}
					else if ( (LA96_0==43) ) {
						alt96=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						NoViableAltException nvae =
							new NoViableAltException("", 96, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4633:4: otherlv_8= '.'
							{
							dbg.location(4633,13);
							otherlv_8=(Token)match(input,37,FOLLOW_37_in_ruleXMemberFeatureCall10618); if (state.failed) return current;dbg.location(4634,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
							    }
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4638:6: ( (lv_explicitStatic_9_0= '::' ) )
							{
							dbg.location(4638,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4638:6: ( (lv_explicitStatic_9_0= '::' ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4639:3: (lv_explicitStatic_9_0= '::' )
							{
							dbg.location(4639,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4639:3: (lv_explicitStatic_9_0= '::' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4640:3: lv_explicitStatic_9_0= '::'
							{
							dbg.location(4640,24);
							lv_explicitStatic_9_0=(Token)match(input,43,FOLLOW_43_in_ruleXMemberFeatureCall10642); if (state.failed) return current;dbg.location(4641,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_explicitStatic_9_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_1_0());
							    }dbg.location(4645,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
								        }
							       		setWithLastConsumed(current, "explicitStatic", true, "::");
								    }
							}

							}

							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(4653,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4653:3: ( ( ruleFeatureCallID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4654:3: ( ruleFeatureCallID )
					{
					dbg.location(4654,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4654:3: ( ruleFeatureCallID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4655:3: ruleFeatureCallID
					{
					dbg.location(4655,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
						        }
					        }dbg.location(4660,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_2_0()); 
						    }dbg.location(4663,3);
					pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall10679);
					ruleFeatureCallID();
					state._fsp--;
					if (state.failed) return current;dbg.location(4663,22);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(4669,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_1_0_0_3()); 
					    }dbg.location(4672,1);
					pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall10695);
					ruleOpSingleAssign();
					state._fsp--;
					if (state.failed) return current;dbg.location(4673,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}

					}
					dbg.location(4676,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4676:3: ( (lv_value_12_0= ruleXAssignment ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4677:3: (lv_value_12_0= ruleXAssignment )
					{
					dbg.location(4677,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4677:3: (lv_value_12_0= ruleXAssignment )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4678:3: lv_value_12_0= ruleXAssignment
					{
					dbg.location(4678,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_1_1_0()); 
						    }dbg.location(4681,16);
					pushFollow(FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall10717);
					lv_value_12_0=ruleXAssignment();
					state._fsp--;
					if (state.failed) return current;dbg.location(4681,34);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
						        }
					       		set(
					       			current, 
					       			"value",
					        		lv_value_12_0, 
					        		"XAssignment");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? )
					{
					dbg.location(4695,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )? )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) ) (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )?
					{
					dbg.location(4695,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) )
					{
					dbg.location(4711,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4711:7: ( () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4711:8: () (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) )
					{
					dbg.location(4711,8);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4711:8: ()
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4712:5: 
					{
					dbg.location(4712,5);
					if ( state.backtracking==0 ) {
					        current = forceCreateModelElementAndSet(
					            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_2_0_0_0(),
					            current);
					    }
					}
					dbg.location(4717,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4717:2: (otherlv_14= '.' | ( (lv_nullSafe_15_0= '?.' ) ) | ( (lv_explicitStatic_16_0= '::' ) ) )
					int alt97=3;
					try { dbg.enterSubRule(97);
					try { dbg.enterDecision(97, decisionCanBacktrack[97]);

					switch ( input.LA(1) ) {
					case 37:
						{
						alt97=1;
						}
						break;
					case 55:
						{
						alt97=2;
						}
						break;
					case 43:
						{
						alt97=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return current;}
						NoViableAltException nvae =
							new NoViableAltException("", 97, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(97);}

					switch (alt97) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4717:4: otherlv_14= '.'
							{
							dbg.location(4717,14);
							otherlv_14=(Token)match(input,37,FOLLOW_37_in_ruleXMemberFeatureCall10803); if (state.failed) return current;dbg.location(4718,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_14, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1_0());
							    }
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4722:6: ( (lv_nullSafe_15_0= '?.' ) )
							{
							dbg.location(4722,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4722:6: ( (lv_nullSafe_15_0= '?.' ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4723:3: (lv_nullSafe_15_0= '?.' )
							{
							dbg.location(4723,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4723:3: (lv_nullSafe_15_0= '?.' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4724:3: lv_nullSafe_15_0= '?.'
							{
							dbg.location(4724,19);
							lv_nullSafe_15_0=(Token)match(input,55,FOLLOW_55_in_ruleXMemberFeatureCall10827); if (state.failed) return current;dbg.location(4725,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_nullSafe_15_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_2_0_0_1_1_0());
							    }dbg.location(4729,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
								        }
							       		setWithLastConsumed(current, "nullSafe", true, "?.");
								    }
							}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4738:6: ( (lv_explicitStatic_16_0= '::' ) )
							{
							dbg.location(4738,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4738:6: ( (lv_explicitStatic_16_0= '::' ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4739:3: (lv_explicitStatic_16_0= '::' )
							{
							dbg.location(4739,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4739:3: (lv_explicitStatic_16_0= '::' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4740:3: lv_explicitStatic_16_0= '::'
							{
							dbg.location(4740,25);
							lv_explicitStatic_16_0=(Token)match(input,43,FOLLOW_43_in_ruleXMemberFeatureCall10864); if (state.failed) return current;dbg.location(4741,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_explicitStatic_16_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_2_0_0_1_2_0());
							    }dbg.location(4745,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
								        }
							       		setWithLastConsumed(current, "explicitStatic", true, "::");
								    }
							}

							}

							}
							break;

					}
					} finally {dbg.exitSubRule(97);}

					}

					}
					dbg.location(4753,5);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4753:5: (otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>' )?
					int alt99=2;
					try { dbg.enterSubRule(99);
					try { dbg.enterDecision(99, decisionCanBacktrack[99]);

					int LA99_0 = input.LA(1);
					if ( (LA99_0==45) ) {
						alt99=1;
					}
					} finally {dbg.exitDecision(99);}

					switch (alt99) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4753:7: otherlv_17= '<' ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) ) (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )* otherlv_21= '>'
							{
							dbg.location(4753,17);
							otherlv_17=(Token)match(input,45,FOLLOW_45_in_ruleXMemberFeatureCall10893); if (state.failed) return current;dbg.location(4754,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_17, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_2_1_0());
							    }dbg.location(4757,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4757:3: ( (lv_typeArguments_18_0= ruleJvmArgumentTypeReference ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4758:3: (lv_typeArguments_18_0= ruleJvmArgumentTypeReference )
							{
							dbg.location(4758,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4758:3: (lv_typeArguments_18_0= ruleJvmArgumentTypeReference )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4759:3: lv_typeArguments_18_0= ruleJvmArgumentTypeReference
							{
							dbg.location(4759,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_1_0()); 
								    }dbg.location(4762,24);
							pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall10914);
							lv_typeArguments_18_0=ruleJvmArgumentTypeReference();
							state._fsp--;
							if (state.failed) return current;dbg.location(4762,55);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
								        }
							       		add(
							       			current, 
							       			"typeArguments",
							        		lv_typeArguments_18_0, 
							        		"JvmArgumentTypeReference");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(4775,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4775:2: (otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) ) )*
							try { dbg.enterSubRule(98);

							loop98:
							while (true) {
								int alt98=2;
								try { dbg.enterDecision(98, decisionCanBacktrack[98]);

								int LA98_0 = input.LA(1);
								if ( (LA98_0==33) ) {
									alt98=1;
								}

								} finally {dbg.exitDecision(98);}

								switch (alt98) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4775:4: otherlv_19= ',' ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) )
									{
									dbg.location(4775,14);
									otherlv_19=(Token)match(input,33,FOLLOW_33_in_ruleXMemberFeatureCall10927); if (state.failed) return current;dbg.location(4776,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_19, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_2_1_2_0());
									    }dbg.location(4779,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4779:3: ( (lv_typeArguments_20_0= ruleJvmArgumentTypeReference ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4780:3: (lv_typeArguments_20_0= ruleJvmArgumentTypeReference )
									{
									dbg.location(4780,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4780:3: (lv_typeArguments_20_0= ruleJvmArgumentTypeReference )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4781:3: lv_typeArguments_20_0= ruleJvmArgumentTypeReference
									{
									dbg.location(4781,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_2_1_0()); 
										    }dbg.location(4784,24);
									pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall10948);
									lv_typeArguments_20_0=ruleJvmArgumentTypeReference();
									state._fsp--;
									if (state.failed) return current;dbg.location(4784,55);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
										        }
									       		add(
									       			current, 
									       			"typeArguments",
									        		lv_typeArguments_20_0, 
									        		"JvmArgumentTypeReference");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop98;
								}
							}
							} finally {dbg.exitSubRule(98);}
							dbg.location(4797,15);
							otherlv_21=(Token)match(input,52,FOLLOW_52_in_ruleXMemberFeatureCall10962); if (state.failed) return current;dbg.location(4798,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_21, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_2_1_3());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(99);}
					dbg.location(4801,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4801:3: ( ( ruleFeatureCallID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4802:3: ( ruleFeatureCallID )
					{
					dbg.location(4802,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4802:3: ( ruleFeatureCallID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4803:3: ruleFeatureCallID
					{
					dbg.location(4803,3);
					if ( state.backtracking==0 ) {
								if (current==null) {
						            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
						        }
					        }dbg.location(4808,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_2_2_0()); 
						    }dbg.location(4811,3);
					pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall10987);
					ruleFeatureCallID();
					state._fsp--;
					if (state.failed) return current;dbg.location(4811,22);
					if ( state.backtracking==0 ) { 
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(4816,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4816:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )?
					int alt102=2;
					try { dbg.enterSubRule(102);
					try { dbg.enterDecision(102, decisionCanBacktrack[102]);

					try {
						isCyclicDecision = true;
						alt102 = dfa102.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(102);}

					switch (alt102) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4816:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')'
							{
							dbg.location(4816,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4816:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4816:4: ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' )
							{
							dbg.location(4823,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4823:3: (lv_explicitOperationCall_23_0= '(' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4824:3: lv_explicitOperationCall_23_0= '('
							{
							dbg.location(4824,32);
							lv_explicitOperationCall_23_0=(Token)match(input,26,FOLLOW_26_in_ruleXMemberFeatureCall11021); if (state.failed) return current;dbg.location(4825,5);
							if ( state.backtracking==0 ) {
							        newLeafNode(lv_explicitOperationCall_23_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_3_0_0());
							    }dbg.location(4829,6);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
								        }
							       		setWithLastConsumed(current, "explicitOperationCall", true, "(");
								    }
							}

							}
							dbg.location(4837,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4837:2: ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )?
							int alt101=2;
							try { dbg.enterSubRule(101);
							try { dbg.enterDecision(101, decisionCanBacktrack[101]);

							int LA101_0 = input.LA(1);
							if ( (LA101_0==RULE_STRING||LA101_0==18||(LA101_0 >= 30 && LA101_0 <= 31)||(LA101_0 >= 34 && LA101_0 <= 35)||LA101_0==88||LA101_0==93) ) {
								alt101=1;
							}
							} finally {dbg.exitDecision(101);}

							switch (alt101) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4837:3: ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )*
									{
									dbg.location(4837,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4837:3: ( (lv_memberCallArguments_24_0= ruleXExpression ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4838:3: (lv_memberCallArguments_24_0= ruleXExpression )
									{
									dbg.location(4838,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4838:3: (lv_memberCallArguments_24_0= ruleXExpression )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4839:3: lv_memberCallArguments_24_0= ruleXExpression
									{
									dbg.location(4839,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_3_1_0_0()); 
										    }dbg.location(4842,30);
									pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall11056);
									lv_memberCallArguments_24_0=ruleXExpression();
									state._fsp--;
									if (state.failed) return current;dbg.location(4842,48);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
										        }
									       		add(
									       			current, 
									       			"memberCallArguments",
									        		lv_memberCallArguments_24_0, 
									        		"XExpression");
										        afterParserOrEnumRuleCall();
										    }
									}

									}
									dbg.location(4855,2);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4855:2: (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )*
									try { dbg.enterSubRule(100);

									loop100:
									while (true) {
										int alt100=2;
										try { dbg.enterDecision(100, decisionCanBacktrack[100]);

										int LA100_0 = input.LA(1);
										if ( (LA100_0==33) ) {
											alt100=1;
										}

										} finally {dbg.exitDecision(100);}

										switch (alt100) {
										case 1 :
											dbg.enterAlt(1);

											// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4855:4: otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) )
											{
											dbg.location(4855,14);
											otherlv_25=(Token)match(input,33,FOLLOW_33_in_ruleXMemberFeatureCall11069); if (state.failed) return current;dbg.location(4856,5);
											if ( state.backtracking==0 ) {
											    	newLeafNode(otherlv_25, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_2_3_1_1_0());
											    }dbg.location(4859,3);
											// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4859:3: ( (lv_memberCallArguments_26_0= ruleXExpression ) )
											dbg.enterAlt(1);

											// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4860:3: (lv_memberCallArguments_26_0= ruleXExpression )
											{
											dbg.location(4860,3);
											// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4860:3: (lv_memberCallArguments_26_0= ruleXExpression )
											dbg.enterAlt(1);

											// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4861:3: lv_memberCallArguments_26_0= ruleXExpression
											{
											dbg.location(4861,3);
											if ( state.backtracking==0 ) { 
												        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_3_1_1_1_0()); 
												    }dbg.location(4864,30);
											pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall11090);
											lv_memberCallArguments_26_0=ruleXExpression();
											state._fsp--;
											if (state.failed) return current;dbg.location(4864,48);
											if ( state.backtracking==0 ) {
												        if (current==null) {
												            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
												        }
											       		add(
											       			current, 
											       			"memberCallArguments",
											        		lv_memberCallArguments_26_0, 
											        		"XExpression");
												        afterParserOrEnumRuleCall();
												    }
											}

											}

											}
											break;

										default :
											break loop100;
										}
									}
									} finally {dbg.exitSubRule(100);}

									}
									break;

							}
							} finally {dbg.exitSubRule(101);}
							dbg.location(4877,17);
							otherlv_27=(Token)match(input,27,FOLLOW_27_in_ruleXMemberFeatureCall11106); if (state.failed) return current;dbg.location(4878,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_27, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_2_3_2());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(102);}

					}

					}
					break;

				default :
					break loop103;
				}
			}
			} finally {dbg.exitSubRule(103);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4882, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXMemberFeatureCall");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXMemberFeatureCall"



	// $ANTLR start "entryRuleXLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4889:1: entryRuleXLiteral returns [EObject current=null] :iv_ruleXLiteral= ruleXLiteral EOF ;
	public final EObject entryRuleXLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4889, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4890:2: (iv_ruleXLiteral= ruleXLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4891:2: iv_ruleXLiteral= ruleXLiteral EOF
			{
			dbg.location(4891,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXLiteralRule()); }dbg.location(4892,18);
			pushFollow(FOLLOW_ruleXLiteral_in_entryRuleXLiteral11147);
			iv_ruleXLiteral=ruleXLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(4893,3);
			if ( state.backtracking==0 ) { current =iv_ruleXLiteral; }dbg.location(4894,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXLiteral11157); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4895, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXLiteral"



	// $ANTLR start "ruleXLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4898:1: ruleXLiteral returns [EObject current=null] : (this_XObjectLiteral_0= ruleXObjectLiteral |this_XArrayLiteral_1= ruleXArrayLiteral |this_XClosure_2= ruleXClosure |this_XBooleanLiteral_3= ruleXBooleanLiteral |this_XNumberLiteral_4= ruleXNumberLiteral |this_XNullLiteral_5= ruleXNullLiteral |this_XStringLiteral_6= ruleXStringLiteral |this_XTypeLiteral_7= ruleXTypeLiteral ) ;
	public final EObject ruleXLiteral() throws RecognitionException {
		EObject current = null;


		EObject this_XObjectLiteral_0 =null;
		EObject this_XArrayLiteral_1 =null;
		EObject this_XClosure_2 =null;
		EObject this_XBooleanLiteral_3 =null;
		EObject this_XNumberLiteral_4 =null;
		EObject this_XNullLiteral_5 =null;
		EObject this_XStringLiteral_6 =null;
		EObject this_XTypeLiteral_7 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4898, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4901:28: ( (this_XObjectLiteral_0= ruleXObjectLiteral |this_XArrayLiteral_1= ruleXArrayLiteral |this_XClosure_2= ruleXClosure |this_XBooleanLiteral_3= ruleXBooleanLiteral |this_XNumberLiteral_4= ruleXNumberLiteral |this_XNullLiteral_5= ruleXNullLiteral |this_XStringLiteral_6= ruleXStringLiteral |this_XTypeLiteral_7= ruleXTypeLiteral ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4902:5: (this_XObjectLiteral_0= ruleXObjectLiteral |this_XArrayLiteral_1= ruleXArrayLiteral |this_XClosure_2= ruleXClosure |this_XBooleanLiteral_3= ruleXBooleanLiteral |this_XNumberLiteral_4= ruleXNumberLiteral |this_XNullLiteral_5= ruleXNullLiteral |this_XStringLiteral_6= ruleXStringLiteral |this_XTypeLiteral_7= ruleXTypeLiteral )
			{
			dbg.location(4902,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4902:5: (this_XObjectLiteral_0= ruleXObjectLiteral |this_XArrayLiteral_1= ruleXArrayLiteral |this_XClosure_2= ruleXClosure |this_XBooleanLiteral_3= ruleXBooleanLiteral |this_XNumberLiteral_4= ruleXNumberLiteral |this_XNullLiteral_5= ruleXNullLiteral |this_XStringLiteral_6= ruleXStringLiteral |this_XTypeLiteral_7= ruleXTypeLiteral )
			int alt104=8;
			try { dbg.enterSubRule(104);
			try { dbg.enterDecision(104, decisionCanBacktrack[104]);

			switch ( input.LA(1) ) {
			case 78:
				{
				int LA104_1 = input.LA(2);
				if ( (LA104_1==88) ) {
					alt104=1;
				}
				else if ( (LA104_1==57) ) {
					alt104=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return current;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 104, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 68:
			case 72:
				{
				alt104=3;
				}
				break;
			case 70:
			case 85:
				{
				alt104=4;
				}
				break;
			case RULE_DECIMAL:
			case RULE_HEX:
			case RULE_INT:
				{
				alt104=5;
				}
				break;
			case 79:
				{
				alt104=6;
				}
				break;
			case RULE_STRING:
				{
				alt104=7;
				}
				break;
			case 86:
				{
				alt104=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 104, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(104);}

			switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4903:5: this_XObjectLiteral_0= ruleXObjectLiteral
					{
					dbg.location(4903,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXObjectLiteralParserRuleCall_0()); 
					    }dbg.location(4906,26);
					pushFollow(FOLLOW_ruleXObjectLiteral_in_ruleXLiteral11204);
					this_XObjectLiteral_0=ruleXObjectLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4907,5);
					if ( state.backtracking==0 ) { 
					        current = this_XObjectLiteral_0; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4913:5: this_XArrayLiteral_1= ruleXArrayLiteral
					{
					dbg.location(4913,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXArrayLiteralParserRuleCall_1()); 
					    }dbg.location(4916,25);
					pushFollow(FOLLOW_ruleXArrayLiteral_in_ruleXLiteral11231);
					this_XArrayLiteral_1=ruleXArrayLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4917,5);
					if ( state.backtracking==0 ) { 
					        current = this_XArrayLiteral_1; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4923:5: this_XClosure_2= ruleXClosure
					{
					dbg.location(4923,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_2()); 
					    }dbg.location(4926,20);
					pushFollow(FOLLOW_ruleXClosure_in_ruleXLiteral11258);
					this_XClosure_2=ruleXClosure();
					state._fsp--;
					if (state.failed) return current;dbg.location(4927,5);
					if ( state.backtracking==0 ) { 
					        current = this_XClosure_2; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4933:5: this_XBooleanLiteral_3= ruleXBooleanLiteral
					{
					dbg.location(4933,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_3()); 
					    }dbg.location(4936,27);
					pushFollow(FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral11285);
					this_XBooleanLiteral_3=ruleXBooleanLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4937,5);
					if ( state.backtracking==0 ) { 
					        current = this_XBooleanLiteral_3; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4943:5: this_XNumberLiteral_4= ruleXNumberLiteral
					{
					dbg.location(4943,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_4()); 
					    }dbg.location(4946,26);
					pushFollow(FOLLOW_ruleXNumberLiteral_in_ruleXLiteral11312);
					this_XNumberLiteral_4=ruleXNumberLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4947,5);
					if ( state.backtracking==0 ) { 
					        current = this_XNumberLiteral_4; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4953:5: this_XNullLiteral_5= ruleXNullLiteral
					{
					dbg.location(4953,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_5()); 
					    }dbg.location(4956,24);
					pushFollow(FOLLOW_ruleXNullLiteral_in_ruleXLiteral11339);
					this_XNullLiteral_5=ruleXNullLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4957,5);
					if ( state.backtracking==0 ) { 
					        current = this_XNullLiteral_5; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4963:5: this_XStringLiteral_6= ruleXStringLiteral
					{
					dbg.location(4963,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_6()); 
					    }dbg.location(4966,26);
					pushFollow(FOLLOW_ruleXStringLiteral_in_ruleXLiteral11366);
					this_XStringLiteral_6=ruleXStringLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4967,5);
					if ( state.backtracking==0 ) { 
					        current = this_XStringLiteral_6; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4973:5: this_XTypeLiteral_7= ruleXTypeLiteral
					{
					dbg.location(4973,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_7()); 
					    }dbg.location(4976,24);
					pushFollow(FOLLOW_ruleXTypeLiteral_in_ruleXLiteral11393);
					this_XTypeLiteral_7=ruleXTypeLiteral();
					state._fsp--;
					if (state.failed) return current;dbg.location(4977,5);
					if ( state.backtracking==0 ) { 
					        current = this_XTypeLiteral_7; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(104);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(4982, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXLiteral"



	// $ANTLR start "entryRuleXCasePart"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4995:1: entryRuleXCasePart returns [EObject current=null] :iv_ruleXCasePart= ruleXCasePart EOF ;
	public final EObject entryRuleXCasePart() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXCasePart =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXCasePart");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(4995, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4996:2: (iv_ruleXCasePart= ruleXCasePart EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4997:2: iv_ruleXCasePart= ruleXCasePart EOF
			{
			dbg.location(4997,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXCasePartRule()); }dbg.location(4998,19);
			pushFollow(FOLLOW_ruleXCasePart_in_entryRuleXCasePart11434);
			iv_ruleXCasePart=ruleXCasePart();
			state._fsp--;
			if (state.failed) return current;dbg.location(4999,3);
			if ( state.backtracking==0 ) { current =iv_ruleXCasePart; }dbg.location(5000,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXCasePart11444); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5001, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXCasePart");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXCasePart"



	// $ANTLR start "ruleXCasePart"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5004:1: ruleXCasePart returns [EObject current=null] : (otherlv_0= 'case' ( (lv_case_1_0= ruleXExpression ) ) otherlv_2= ':' ( (lv_then_3_0= ruleXExpression ) ) ) ;
	public final EObject ruleXCasePart() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_2=null;
		EObject lv_case_1_0 =null;
		EObject lv_then_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXCasePart");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5004, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5007:28: ( (otherlv_0= 'case' ( (lv_case_1_0= ruleXExpression ) ) otherlv_2= ':' ( (lv_then_3_0= ruleXExpression ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5008:3: (otherlv_0= 'case' ( (lv_case_1_0= ruleXExpression ) ) otherlv_2= ':' ( (lv_then_3_0= ruleXExpression ) ) )
			{
			dbg.location(5008,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5008:3: (otherlv_0= 'case' ( (lv_case_1_0= ruleXExpression ) ) otherlv_2= ':' ( (lv_then_3_0= ruleXExpression ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5008:3: otherlv_0= 'case' ( (lv_case_1_0= ruleXExpression ) ) otherlv_2= ':' ( (lv_then_3_0= ruleXExpression ) )
			{
			dbg.location(5008,12);
			otherlv_0=(Token)match(input,63,FOLLOW_63_in_ruleXCasePart11481); if (state.failed) return current;dbg.location(5009,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getXCasePartAccess().getCaseKeyword_0());
			    }dbg.location(5012,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5012:3: ( (lv_case_1_0= ruleXExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5013:3: (lv_case_1_0= ruleXExpression )
			{
			dbg.location(5013,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5013:3: (lv_case_1_0= ruleXExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5014:3: lv_case_1_0= ruleXExpression
			{
			dbg.location(5014,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_0()); 
				    }dbg.location(5017,14);
			pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart11502);
			lv_case_1_0=ruleXExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(5017,32);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXCasePartRule());
				        }
			       		set(
			       			current, 
			       			"case",
			        		lv_case_1_0, 
			        		"XExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5030,12);
			otherlv_2=(Token)match(input,42,FOLLOW_42_in_ruleXCasePart11514); if (state.failed) return current;dbg.location(5031,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getColonKeyword_2());
			    }dbg.location(5034,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5034:3: ( (lv_then_3_0= ruleXExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5035:3: (lv_then_3_0= ruleXExpression )
			{
			dbg.location(5035,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5035:3: (lv_then_3_0= ruleXExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5036:3: lv_then_3_0= ruleXExpression
			{
			dbg.location(5036,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
				    }dbg.location(5039,14);
			pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart11535);
			lv_then_3_0=ruleXExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(5039,32);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXCasePartRule());
				        }
			       		set(
			       			current, 
			       			"then",
			        		lv_then_3_0, 
			        		"XExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5053, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXCasePart");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXCasePart"



	// $ANTLR start "entryRuleXBlockExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5068:1: entryRuleXBlockExpression returns [EObject current=null] :iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
	public final EObject entryRuleXBlockExpression() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXBlockExpression =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXBlockExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5068, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5069:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5070:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
			{
			dbg.location(5070,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXBlockExpressionRule()); }dbg.location(5071,26);
			pushFollow(FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression11579);
			iv_ruleXBlockExpression=ruleXBlockExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(5072,3);
			if ( state.backtracking==0 ) { current =iv_ruleXBlockExpression; }dbg.location(5073,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXBlockExpression11589); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5074, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXBlockExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXBlockExpression"



	// $ANTLR start "ruleXBlockExpression"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5077:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
	public final EObject ruleXBlockExpression() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_3=null;
		Token otherlv_4=null;
		EObject lv_expressions_2_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXBlockExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5077, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5080:28: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5081:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
			{
			dbg.location(5081,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5081:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5081:2: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
			{
			dbg.location(5081,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5081:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5082:5: 
			{
			dbg.location(5082,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
			            current);
			    }
			}
			dbg.location(5087,12);
			otherlv_1=(Token)match(input,88,FOLLOW_88_in_ruleXBlockExpression11635); if (state.failed) return current;dbg.location(5088,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
			    }dbg.location(5091,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5091:2: ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )*
			try { dbg.enterSubRule(106);

			loop106:
			while (true) {
				int alt106=2;
				try { dbg.enterDecision(106, decisionCanBacktrack[106]);

				int LA106_0 = input.LA(1);
				if ( (LA106_0==RULE_STRING||LA106_0==18||(LA106_0 >= 30 && LA106_0 <= 31)||(LA106_0 >= 34 && LA106_0 <= 35)||(LA106_0 >= 87 && LA106_0 <= 88)||LA106_0==93) ) {
					alt106=1;
				}

				} finally {dbg.exitDecision(106);}

				switch (alt106) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5091:2: ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )?
					{
					dbg.location(5091,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5091:2: ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5092:3: (lv_expressions_2_0= ruleXExpressionInsideBlock )
					{
					dbg.location(5092,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5092:3: (lv_expressions_2_0= ruleXExpressionInsideBlock )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5093:3: lv_expressions_2_0= ruleXExpressionInsideBlock
					{
					dbg.location(5093,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
						    }dbg.location(5096,21);
					pushFollow(FOLLOW_ruleXExpressionInsideBlock_in_ruleXBlockExpression11657);
					lv_expressions_2_0=ruleXExpressionInsideBlock();
					state._fsp--;
					if (state.failed) return current;dbg.location(5096,50);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
						        }
					       		add(
					       			current, 
					       			"expressions",
					        		lv_expressions_2_0, 
					        		"XExpressionInsideBlock");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(5109,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5109:2: (otherlv_3= ';' )?
					int alt105=2;
					try { dbg.enterSubRule(105);
					try { dbg.enterDecision(105, decisionCanBacktrack[105]);

					int LA105_0 = input.LA(1);
					if ( (LA105_0==44) ) {
						alt105=1;
					}
					} finally {dbg.exitDecision(105);}

					switch (alt105) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5109:4: otherlv_3= ';'
							{
							dbg.location(5109,13);
							otherlv_3=(Token)match(input,44,FOLLOW_44_in_ruleXBlockExpression11670); if (state.failed) return current;dbg.location(5110,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(105);}

					}
					break;

				default :
					break loop106;
				}
			}
			} finally {dbg.exitSubRule(106);}
			dbg.location(5113,15);
			otherlv_4=(Token)match(input,92,FOLLOW_92_in_ruleXBlockExpression11686); if (state.failed) return current;dbg.location(5114,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5118, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXBlockExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXBlockExpression"



	// $ANTLR start "entryRuleXExpressionInsideBlock"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5125:1: entryRuleXExpressionInsideBlock returns [EObject current=null] :iv_ruleXExpressionInsideBlock= ruleXExpressionInsideBlock EOF ;
	public final EObject entryRuleXExpressionInsideBlock() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXExpressionInsideBlock =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXExpressionInsideBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5125, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5126:2: (iv_ruleXExpressionInsideBlock= ruleXExpressionInsideBlock EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5127:2: iv_ruleXExpressionInsideBlock= ruleXExpressionInsideBlock EOF
			{
			dbg.location(5127,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); }dbg.location(5128,32);
			pushFollow(FOLLOW_ruleXExpressionInsideBlock_in_entryRuleXExpressionInsideBlock11722);
			iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock();
			state._fsp--;
			if (state.failed) return current;dbg.location(5129,3);
			if ( state.backtracking==0 ) { current =iv_ruleXExpressionInsideBlock; }dbg.location(5130,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionInsideBlock11732); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5131, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXExpressionInsideBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXExpressionInsideBlock"



	// $ANTLR start "ruleXExpressionInsideBlock"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5134:1: ruleXExpressionInsideBlock returns [EObject current=null] : (this_XVariableDeclarationList_0= ruleXVariableDeclarationList |this_XExpression_1= ruleXExpression ) ;
	public final EObject ruleXExpressionInsideBlock() throws RecognitionException {
		EObject current = null;


		EObject this_XVariableDeclarationList_0 =null;
		EObject this_XExpression_1 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXExpressionInsideBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5134, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5137:28: ( (this_XVariableDeclarationList_0= ruleXVariableDeclarationList |this_XExpression_1= ruleXExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5138:5: (this_XVariableDeclarationList_0= ruleXVariableDeclarationList |this_XExpression_1= ruleXExpression )
			{
			dbg.location(5138,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5138:5: (this_XVariableDeclarationList_0= ruleXVariableDeclarationList |this_XExpression_1= ruleXExpression )
			int alt107=2;
			try { dbg.enterSubRule(107);
			try { dbg.enterDecision(107, decisionCanBacktrack[107]);

			int LA107_0 = input.LA(1);
			if ( (LA107_0==87) ) {
				alt107=1;
			}
			else if ( (LA107_0==RULE_STRING||LA107_0==18||(LA107_0 >= 30 && LA107_0 <= 31)||(LA107_0 >= 34 && LA107_0 <= 35)||LA107_0==88||LA107_0==93) ) {
				alt107=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 107, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(107);}

			switch (alt107) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5139:5: this_XVariableDeclarationList_0= ruleXVariableDeclarationList
					{
					dbg.location(5139,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationListParserRuleCall_0()); 
					    }dbg.location(5142,36);
					pushFollow(FOLLOW_ruleXVariableDeclarationList_in_ruleXExpressionInsideBlock11779);
					this_XVariableDeclarationList_0=ruleXVariableDeclarationList();
					state._fsp--;
					if (state.failed) return current;dbg.location(5143,5);
					if ( state.backtracking==0 ) { 
					        current = this_XVariableDeclarationList_0; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5149:5: this_XExpression_1= ruleXExpression
					{
					dbg.location(5149,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
					    }dbg.location(5152,23);
					pushFollow(FOLLOW_ruleXExpression_in_ruleXExpressionInsideBlock11806);
					this_XExpression_1=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(5153,5);
					if ( state.backtracking==0 ) { 
					        current = this_XExpression_1; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(107);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5158, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXExpressionInsideBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXExpressionInsideBlock"



	// $ANTLR start "entryRuleXVariableDeclarationList"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5165:1: entryRuleXVariableDeclarationList returns [EObject current=null] :iv_ruleXVariableDeclarationList= ruleXVariableDeclarationList EOF ;
	public final EObject entryRuleXVariableDeclarationList() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXVariableDeclarationList =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXVariableDeclarationList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5165, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5166:2: (iv_ruleXVariableDeclarationList= ruleXVariableDeclarationList EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5167:2: iv_ruleXVariableDeclarationList= ruleXVariableDeclarationList EOF
			{
			dbg.location(5167,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXVariableDeclarationListRule()); }dbg.location(5168,34);
			pushFollow(FOLLOW_ruleXVariableDeclarationList_in_entryRuleXVariableDeclarationList11841);
			iv_ruleXVariableDeclarationList=ruleXVariableDeclarationList();
			state._fsp--;
			if (state.failed) return current;dbg.location(5169,3);
			if ( state.backtracking==0 ) { current =iv_ruleXVariableDeclarationList; }dbg.location(5170,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXVariableDeclarationList11851); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5171, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXVariableDeclarationList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXVariableDeclarationList"



	// $ANTLR start "ruleXVariableDeclarationList"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5174:1: ruleXVariableDeclarationList returns [EObject current=null] : ( () otherlv_1= 'var' ( (lv_declarations_2_0= ruleXVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) ) )* ) ;
	public final EObject ruleXVariableDeclarationList() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_3=null;
		EObject lv_declarations_2_0 =null;
		EObject lv_declarations_4_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXVariableDeclarationList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5174, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5177:28: ( ( () otherlv_1= 'var' ( (lv_declarations_2_0= ruleXVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) ) )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5178:2: ( () otherlv_1= 'var' ( (lv_declarations_2_0= ruleXVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) ) )* )
			{
			dbg.location(5178,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5178:2: ( () otherlv_1= 'var' ( (lv_declarations_2_0= ruleXVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) ) )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5178:2: () otherlv_1= 'var' ( (lv_declarations_2_0= ruleXVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) ) )*
			{
			dbg.location(5178,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5178:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5179:5: 
			{
			dbg.location(5179,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXVariableDeclarationListAccess().getXVariableDeclarationListAction_0(),
			            current);
			    }
			}
			dbg.location(5184,12);
			otherlv_1=(Token)match(input,87,FOLLOW_87_in_ruleXVariableDeclarationList11897); if (state.failed) return current;dbg.location(5185,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXVariableDeclarationListAccess().getVarKeyword_1());
			    }dbg.location(5188,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5188:3: ( (lv_declarations_2_0= ruleXVariableDeclaration ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5189:3: (lv_declarations_2_0= ruleXVariableDeclaration )
			{
			dbg.location(5189,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5189:3: (lv_declarations_2_0= ruleXVariableDeclaration )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5190:3: lv_declarations_2_0= ruleXVariableDeclaration
			{
			dbg.location(5190,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXVariableDeclarationListAccess().getDeclarationsXVariableDeclarationParserRuleCall_2_0()); 
				    }dbg.location(5193,22);
			pushFollow(FOLLOW_ruleXVariableDeclaration_in_ruleXVariableDeclarationList11918);
			lv_declarations_2_0=ruleXVariableDeclaration();
			state._fsp--;
			if (state.failed) return current;dbg.location(5193,49);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXVariableDeclarationListRule());
				        }
			       		add(
			       			current, 
			       			"declarations",
			        		lv_declarations_2_0, 
			        		"XVariableDeclaration");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5206,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5206:2: (otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) ) )*
			try { dbg.enterSubRule(108);

			loop108:
			while (true) {
				int alt108=2;
				try { dbg.enterDecision(108, decisionCanBacktrack[108]);

				int LA108_0 = input.LA(1);
				if ( (LA108_0==33) ) {
					alt108=1;
				}

				} finally {dbg.exitDecision(108);}

				switch (alt108) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5206:4: otherlv_3= ',' ( (lv_declarations_4_0= ruleXVariableDeclaration ) )
					{
					dbg.location(5206,13);
					otherlv_3=(Token)match(input,33,FOLLOW_33_in_ruleXVariableDeclarationList11931); if (state.failed) return current;dbg.location(5207,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_3, grammarAccess.getXVariableDeclarationListAccess().getCommaKeyword_3_0());
					    }dbg.location(5210,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5210:3: ( (lv_declarations_4_0= ruleXVariableDeclaration ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5211:3: (lv_declarations_4_0= ruleXVariableDeclaration )
					{
					dbg.location(5211,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5211:3: (lv_declarations_4_0= ruleXVariableDeclaration )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5212:3: lv_declarations_4_0= ruleXVariableDeclaration
					{
					dbg.location(5212,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXVariableDeclarationListAccess().getDeclarationsXVariableDeclarationParserRuleCall_3_1_0()); 
						    }dbg.location(5215,22);
					pushFollow(FOLLOW_ruleXVariableDeclaration_in_ruleXVariableDeclarationList11952);
					lv_declarations_4_0=ruleXVariableDeclaration();
					state._fsp--;
					if (state.failed) return current;dbg.location(5215,49);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXVariableDeclarationListRule());
						        }
					       		add(
					       			current, 
					       			"declarations",
					        		lv_declarations_4_0, 
					        		"XVariableDeclaration");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop108;
				}
			}
			} finally {dbg.exitSubRule(108);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5229, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXVariableDeclarationList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXVariableDeclarationList"



	// $ANTLR start "entryRuleJvmFormalParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5236:1: entryRuleJvmFormalParameter returns [EObject current=null] :iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
	public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmFormalParameter =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmFormalParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5236, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5237:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5238:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
			{
			dbg.location(5238,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }dbg.location(5239,28);
			pushFollow(FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter11990);
			iv_ruleJvmFormalParameter=ruleJvmFormalParameter();
			state._fsp--;
			if (state.failed) return current;dbg.location(5240,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmFormalParameter; }dbg.location(5241,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmFormalParameter12000); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5242, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmFormalParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmFormalParameter"



	// $ANTLR start "ruleJvmFormalParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5245:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? ) ;
	public final EObject ruleJvmFormalParameter() throws RecognitionException {
		EObject current = null;


		Token otherlv_2=null;
		EObject lv_parameterType_0_0 =null;
		AntlrDatatypeRuleToken lv_name_1_0 =null;
		EObject lv_defaultValue_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmFormalParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5245, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5248:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5249:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? )
			{
			dbg.location(5249,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5249:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5249:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )?
			{
			dbg.location(5249,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5249:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==RULE_ID) ) {
				int LA109_1 = input.LA(2);
				if ( (LA109_1==RULE_ID||LA109_1==37||LA109_1==45||LA109_1==57) ) {
					alt109=1;
				}
			}
			else if ( (LA109_0==26||LA109_0==51) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5250:3: (lv_parameterType_0_0= ruleJvmTypeReference )
					{
					dbg.location(5250,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5250:3: (lv_parameterType_0_0= ruleJvmTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5251:3: lv_parameterType_0_0= ruleJvmTypeReference
					{
					dbg.location(5251,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
						    }dbg.location(5254,23);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter12046);
					lv_parameterType_0_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(5254,46);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
						        }
					       		set(
					       			current, 
					       			"parameterType",
					        		lv_parameterType_0_0, 
					        		"JvmTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(5267,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5267:3: ( (lv_name_1_0= ruleValidID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5268:3: (lv_name_1_0= ruleValidID )
			{
			dbg.location(5268,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5268:3: (lv_name_1_0= ruleValidID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5269:3: lv_name_1_0= ruleValidID
			{
			dbg.location(5269,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
				    }dbg.location(5272,14);
			pushFollow(FOLLOW_ruleValidID_in_ruleJvmFormalParameter12068);
			lv_name_1_0=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(5272,28);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
				        }
			       		set(
			       			current, 
			       			"name",
			        		lv_name_1_0, 
			        		"ValidID");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5285,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5285:2: ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==48) && (synpred33_InternalXAML())) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5285:3: ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) )
					{
					dbg.location(5285,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5285:3: ( ( '=' )=>otherlv_2= '=' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5285:4: ( '=' )=>otherlv_2= '='
					{
					dbg.location(5286,14);
					otherlv_2=(Token)match(input,48,FOLLOW_48_in_ruleJvmFormalParameter12089); if (state.failed) return current;dbg.location(5287,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_2, grammarAccess.getJvmFormalParameterAccess().getEqualsSignKeyword_2_0());
					    }
					}
					dbg.location(5290,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5290:2: ( (lv_defaultValue_3_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5291:3: (lv_defaultValue_3_0= ruleXExpression )
					{
					dbg.location(5291,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5291:3: (lv_defaultValue_3_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5292:3: lv_defaultValue_3_0= ruleXExpression
					{
					dbg.location(5292,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getDefaultValueXExpressionParserRuleCall_2_1_0()); 
						    }dbg.location(5295,22);
					pushFollow(FOLLOW_ruleXExpression_in_ruleJvmFormalParameter12111);
					lv_defaultValue_3_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(5295,40);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
						        }
					       		set(
					       			current, 
					       			"defaultValue",
					        		lv_defaultValue_3_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(110);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5309, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmFormalParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmFormalParameter"



	// $ANTLR start "entryRuleFullJvmFormalParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5316:1: entryRuleFullJvmFormalParameter returns [EObject current=null] :iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
	public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleFullJvmFormalParameter =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleFullJvmFormalParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5316, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5317:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5318:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
			{
			dbg.location(5318,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }dbg.location(5319,32);
			pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter12149);
			iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();
			state._fsp--;
			if (state.failed) return current;dbg.location(5320,3);
			if ( state.backtracking==0 ) { current =iv_ruleFullJvmFormalParameter; }dbg.location(5321,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleFullJvmFormalParameter12159); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5322, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleFullJvmFormalParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleFullJvmFormalParameter"



	// $ANTLR start "ruleFullJvmFormalParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5325:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? ) ;
	public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
		EObject current = null;


		Token otherlv_2=null;
		EObject lv_parameterType_0_0 =null;
		AntlrDatatypeRuleToken lv_name_1_0 =null;
		EObject lv_defaultValue_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleFullJvmFormalParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5325, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5328:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5329:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? )
			{
			dbg.location(5329,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5329:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5329:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )?
			{
			dbg.location(5329,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5329:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5330:3: (lv_parameterType_0_0= ruleJvmTypeReference )
			{
			dbg.location(5330,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5330:3: (lv_parameterType_0_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5331:3: lv_parameterType_0_0= ruleJvmTypeReference
			{
			dbg.location(5331,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
				    }dbg.location(5334,23);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter12205);
			lv_parameterType_0_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(5334,46);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
				        }
			       		set(
			       			current, 
			       			"parameterType",
			        		lv_parameterType_0_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5347,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5347:2: ( (lv_name_1_0= ruleValidID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5348:3: (lv_name_1_0= ruleValidID )
			{
			dbg.location(5348,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5348:3: (lv_name_1_0= ruleValidID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5349:3: lv_name_1_0= ruleValidID
			{
			dbg.location(5349,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
				    }dbg.location(5352,14);
			pushFollow(FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter12226);
			lv_name_1_0=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(5352,28);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
				        }
			       		set(
			       			current, 
			       			"name",
			        		lv_name_1_0, 
			        		"ValidID");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5365,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5365:2: ( ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) ) )?
			int alt111=2;
			try { dbg.enterSubRule(111);
			try { dbg.enterDecision(111, decisionCanBacktrack[111]);

			int LA111_0 = input.LA(1);
			if ( (LA111_0==48) && (synpred34_InternalXAML())) {
				alt111=1;
			}
			} finally {dbg.exitDecision(111);}

			switch (alt111) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5365:3: ( ( '=' )=>otherlv_2= '=' ) ( (lv_defaultValue_3_0= ruleXExpression ) )
					{
					dbg.location(5365,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5365:3: ( ( '=' )=>otherlv_2= '=' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5365:4: ( '=' )=>otherlv_2= '='
					{
					dbg.location(5366,14);
					otherlv_2=(Token)match(input,48,FOLLOW_48_in_ruleFullJvmFormalParameter12247); if (state.failed) return current;dbg.location(5367,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_2, grammarAccess.getFullJvmFormalParameterAccess().getEqualsSignKeyword_2_0());
					    }
					}
					dbg.location(5370,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5370:2: ( (lv_defaultValue_3_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5371:3: (lv_defaultValue_3_0= ruleXExpression )
					{
					dbg.location(5371,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5371:3: (lv_defaultValue_3_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5372:3: lv_defaultValue_3_0= ruleXExpression
					{
					dbg.location(5372,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getDefaultValueXExpressionParserRuleCall_2_1_0()); 
						    }dbg.location(5375,22);
					pushFollow(FOLLOW_ruleXExpression_in_ruleFullJvmFormalParameter12269);
					lv_defaultValue_3_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(5375,40);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
						        }
					       		set(
					       			current, 
					       			"defaultValue",
					        		lv_defaultValue_3_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(111);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5389, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleFullJvmFormalParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleFullJvmFormalParameter"



	// $ANTLR start "entryRuleIdOrSuper"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5398:1: entryRuleIdOrSuper returns [String current=null] :iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
	public final String entryRuleIdOrSuper() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleIdOrSuper =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleIdOrSuper");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5398, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5399:2: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5400:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
			{
			dbg.location(5400,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getIdOrSuperRule()); }dbg.location(5401,19);
			pushFollow(FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper12310);
			iv_ruleIdOrSuper=ruleIdOrSuper();
			state._fsp--;
			if (state.failed) return current;dbg.location(5402,3);
			if ( state.backtracking==0 ) { current =iv_ruleIdOrSuper.getText(); }dbg.location(5403,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleIdOrSuper12321); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5404, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleIdOrSuper");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleIdOrSuper"



	// $ANTLR start "ruleIdOrSuper"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5407:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID |kw= 'super' ) ;
	public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;
		AntlrDatatypeRuleToken this_FeatureCallID_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleIdOrSuper");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5407, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5410:28: ( (this_FeatureCallID_0= ruleFeatureCallID |kw= 'super' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5411:5: (this_FeatureCallID_0= ruleFeatureCallID |kw= 'super' )
			{
			dbg.location(5411,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5411:5: (this_FeatureCallID_0= ruleFeatureCallID |kw= 'super' )
			int alt112=2;
			try { dbg.enterSubRule(112);
			try { dbg.enterDecision(112, decisionCanBacktrack[112]);

			int LA112_0 = input.LA(1);
			if ( (LA112_0==RULE_ID) ) {
				alt112=1;
			}
			else if ( (LA112_0==84) ) {
				alt112=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 112, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(112);}

			switch (alt112) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5412:5: this_FeatureCallID_0= ruleFeatureCallID
					{
					dbg.location(5412,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
					    }dbg.location(5415,25);
					pushFollow(FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper12368);
					this_FeatureCallID_0=ruleFeatureCallID();
					state._fsp--;
					if (state.failed) return current;dbg.location(5415,47);
					if ( state.backtracking==0 ) {
							current.merge(this_FeatureCallID_0);
					    }dbg.location(5419,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5424:2: kw= 'super'
					{
					dbg.location(5424,4);
					kw=(Token)match(input,84,FOLLOW_84_in_ruleIdOrSuper12392); if (state.failed) return current;dbg.location(5425,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(112);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5430, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleIdOrSuper");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleIdOrSuper"



	// $ANTLR start "entryRuleXObjectLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5439:1: entryRuleXObjectLiteral returns [EObject current=null] :iv_ruleXObjectLiteral= ruleXObjectLiteral EOF ;
	public final EObject entryRuleXObjectLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXObjectLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXObjectLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5439, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5440:2: (iv_ruleXObjectLiteral= ruleXObjectLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5441:2: iv_ruleXObjectLiteral= ruleXObjectLiteral EOF
			{
			dbg.location(5441,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXObjectLiteralRule()); }dbg.location(5442,24);
			pushFollow(FOLLOW_ruleXObjectLiteral_in_entryRuleXObjectLiteral12434);
			iv_ruleXObjectLiteral=ruleXObjectLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(5443,3);
			if ( state.backtracking==0 ) { current =iv_ruleXObjectLiteral; }dbg.location(5444,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXObjectLiteral12444); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5445, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXObjectLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXObjectLiteral"



	// $ANTLR start "ruleXObjectLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5448:1: ruleXObjectLiteral returns [EObject current=null] : ( () otherlv_1= 'new' otherlv_2= '{' ( (lv_properties_3_0= ruleXObjectLiteralPart ) ) (otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) ) )* otherlv_6= '}' ) ;
	public final EObject ruleXObjectLiteral() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_2=null;
		Token otherlv_4=null;
		Token otherlv_6=null;
		EObject lv_properties_3_0 =null;
		EObject lv_properties_5_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXObjectLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5448, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5451:28: ( ( () otherlv_1= 'new' otherlv_2= '{' ( (lv_properties_3_0= ruleXObjectLiteralPart ) ) (otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) ) )* otherlv_6= '}' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5452:2: ( () otherlv_1= 'new' otherlv_2= '{' ( (lv_properties_3_0= ruleXObjectLiteralPart ) ) (otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) ) )* otherlv_6= '}' )
			{
			dbg.location(5452,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5452:2: ( () otherlv_1= 'new' otherlv_2= '{' ( (lv_properties_3_0= ruleXObjectLiteralPart ) ) (otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) ) )* otherlv_6= '}' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5452:2: () otherlv_1= 'new' otherlv_2= '{' ( (lv_properties_3_0= ruleXObjectLiteralPart ) ) (otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) ) )* otherlv_6= '}'
			{
			dbg.location(5452,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5452:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5453:5: 
			{
			dbg.location(5453,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXObjectLiteralAccess().getXObjectLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(5458,12);
			otherlv_1=(Token)match(input,78,FOLLOW_78_in_ruleXObjectLiteral12490); if (state.failed) return current;dbg.location(5459,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXObjectLiteralAccess().getNewKeyword_1());
			    }dbg.location(5462,11);
			otherlv_2=(Token)match(input,88,FOLLOW_88_in_ruleXObjectLiteral12502); if (state.failed) return current;dbg.location(5463,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_2, grammarAccess.getXObjectLiteralAccess().getLeftCurlyBracketKeyword_2());
			    }dbg.location(5466,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5466:3: ( (lv_properties_3_0= ruleXObjectLiteralPart ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5467:3: (lv_properties_3_0= ruleXObjectLiteralPart )
			{
			dbg.location(5467,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5467:3: (lv_properties_3_0= ruleXObjectLiteralPart )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5468:3: lv_properties_3_0= ruleXObjectLiteralPart
			{
			dbg.location(5468,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXObjectLiteralAccess().getPropertiesXObjectLiteralPartParserRuleCall_3_0()); 
				    }dbg.location(5471,20);
			pushFollow(FOLLOW_ruleXObjectLiteralPart_in_ruleXObjectLiteral12523);
			lv_properties_3_0=ruleXObjectLiteralPart();
			state._fsp--;
			if (state.failed) return current;dbg.location(5471,45);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXObjectLiteralRule());
				        }
			       		add(
			       			current, 
			       			"properties",
			        		lv_properties_3_0, 
			        		"XObjectLiteralPart");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5484,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5484:2: (otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) ) )*
			try { dbg.enterSubRule(113);

			loop113:
			while (true) {
				int alt113=2;
				try { dbg.enterDecision(113, decisionCanBacktrack[113]);

				int LA113_0 = input.LA(1);
				if ( (LA113_0==33) ) {
					alt113=1;
				}

				} finally {dbg.exitDecision(113);}

				switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5484:4: otherlv_4= ',' ( (lv_properties_5_0= ruleXObjectLiteralPart ) )
					{
					dbg.location(5484,13);
					otherlv_4=(Token)match(input,33,FOLLOW_33_in_ruleXObjectLiteral12536); if (state.failed) return current;dbg.location(5485,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_4, grammarAccess.getXObjectLiteralAccess().getCommaKeyword_4_0());
					    }dbg.location(5488,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5488:3: ( (lv_properties_5_0= ruleXObjectLiteralPart ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5489:3: (lv_properties_5_0= ruleXObjectLiteralPart )
					{
					dbg.location(5489,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5489:3: (lv_properties_5_0= ruleXObjectLiteralPart )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5490:3: lv_properties_5_0= ruleXObjectLiteralPart
					{
					dbg.location(5490,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXObjectLiteralAccess().getPropertiesXObjectLiteralPartParserRuleCall_4_1_0()); 
						    }dbg.location(5493,20);
					pushFollow(FOLLOW_ruleXObjectLiteralPart_in_ruleXObjectLiteral12557);
					lv_properties_5_0=ruleXObjectLiteralPart();
					state._fsp--;
					if (state.failed) return current;dbg.location(5493,45);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXObjectLiteralRule());
						        }
					       		add(
					       			current, 
					       			"properties",
					        		lv_properties_5_0, 
					        		"XObjectLiteralPart");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop113;
				}
			}
			} finally {dbg.exitSubRule(113);}
			dbg.location(5506,14);
			otherlv_6=(Token)match(input,92,FOLLOW_92_in_ruleXObjectLiteral12571); if (state.failed) return current;dbg.location(5507,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_6, grammarAccess.getXObjectLiteralAccess().getRightCurlyBracketKeyword_5());
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5511, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXObjectLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXObjectLiteral"



	// $ANTLR start "entryRuleXObjectLiteralPart"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5518:1: entryRuleXObjectLiteralPart returns [EObject current=null] :iv_ruleXObjectLiteralPart= ruleXObjectLiteralPart EOF ;
	public final EObject entryRuleXObjectLiteralPart() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXObjectLiteralPart =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXObjectLiteralPart");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5518, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5519:2: (iv_ruleXObjectLiteralPart= ruleXObjectLiteralPart EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5520:2: iv_ruleXObjectLiteralPart= ruleXObjectLiteralPart EOF
			{
			dbg.location(5520,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXObjectLiteralPartRule()); }dbg.location(5521,28);
			pushFollow(FOLLOW_ruleXObjectLiteralPart_in_entryRuleXObjectLiteralPart12607);
			iv_ruleXObjectLiteralPart=ruleXObjectLiteralPart();
			state._fsp--;
			if (state.failed) return current;dbg.location(5522,3);
			if ( state.backtracking==0 ) { current =iv_ruleXObjectLiteralPart; }dbg.location(5523,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXObjectLiteralPart12617); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5524, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXObjectLiteralPart");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXObjectLiteralPart"



	// $ANTLR start "ruleXObjectLiteralPart"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5527:1: ruleXObjectLiteralPart returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= ruleXExpression ) ) ) ;
	public final EObject ruleXObjectLiteralPart() throws RecognitionException {
		EObject current = null;


		Token lv_name_0_0=null;
		Token otherlv_1=null;
		EObject lv_value_2_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXObjectLiteralPart");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5527, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5530:28: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= ruleXExpression ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5531:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= ruleXExpression ) ) )
			{
			dbg.location(5531,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5531:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= ruleXExpression ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5531:2: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= ruleXExpression ) )
			{
			dbg.location(5531,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5531:2: ( (lv_name_0_0= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5532:3: (lv_name_0_0= RULE_ID )
			{
			dbg.location(5532,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5532:3: (lv_name_0_0= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5533:3: lv_name_0_0= RULE_ID
			{
			dbg.location(5533,14);
			lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXObjectLiteralPart12659); if (state.failed) return current;dbg.location(5534,3);
			if ( state.backtracking==0 ) {
						newLeafNode(lv_name_0_0, grammarAccess.getXObjectLiteralPartAccess().getNameIDTerminalRuleCall_0_0()); 
					}dbg.location(5537,3);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElement(grammarAccess.getXObjectLiteralPartRule());
				        }
			       		setWithLastConsumed(
			       			current, 
			       			"name",
			        		lv_name_0_0, 
			        		"ID");
				    }
			}

			}
			dbg.location(5549,12);
			otherlv_1=(Token)match(input,42,FOLLOW_42_in_ruleXObjectLiteralPart12676); if (state.failed) return current;dbg.location(5550,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXObjectLiteralPartAccess().getColonKeyword_1());
			    }dbg.location(5553,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5553:3: ( (lv_value_2_0= ruleXExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5554:3: (lv_value_2_0= ruleXExpression )
			{
			dbg.location(5554,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5554:3: (lv_value_2_0= ruleXExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5555:3: lv_value_2_0= ruleXExpression
			{
			dbg.location(5555,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXObjectLiteralPartAccess().getValueXExpressionParserRuleCall_2_0()); 
				    }dbg.location(5558,15);
			pushFollow(FOLLOW_ruleXExpression_in_ruleXObjectLiteralPart12697);
			lv_value_2_0=ruleXExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(5558,33);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXObjectLiteralPartRule());
				        }
			       		set(
			       			current, 
			       			"value",
			        		lv_value_2_0, 
			        		"XExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5572, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXObjectLiteralPart");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXObjectLiteralPart"



	// $ANTLR start "entryRuleXArrayLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5579:1: entryRuleXArrayLiteral returns [EObject current=null] :iv_ruleXArrayLiteral= ruleXArrayLiteral EOF ;
	public final EObject entryRuleXArrayLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXArrayLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXArrayLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5579, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5580:2: (iv_ruleXArrayLiteral= ruleXArrayLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5581:2: iv_ruleXArrayLiteral= ruleXArrayLiteral EOF
			{
			dbg.location(5581,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXArrayLiteralRule()); }dbg.location(5582,23);
			pushFollow(FOLLOW_ruleXArrayLiteral_in_entryRuleXArrayLiteral12733);
			iv_ruleXArrayLiteral=ruleXArrayLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(5583,3);
			if ( state.backtracking==0 ) { current =iv_ruleXArrayLiteral; }dbg.location(5584,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXArrayLiteral12743); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5585, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXArrayLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXArrayLiteral"



	// $ANTLR start "ruleXArrayLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5588:1: ruleXArrayLiteral returns [EObject current=null] : ( () otherlv_1= 'new' otherlv_2= '[' ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* otherlv_6= ']' ) ;
	public final EObject ruleXArrayLiteral() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_2=null;
		Token otherlv_4=null;
		Token otherlv_6=null;
		EObject lv_elements_3_0 =null;
		EObject lv_elements_5_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXArrayLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5588, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5591:28: ( ( () otherlv_1= 'new' otherlv_2= '[' ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* otherlv_6= ']' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5592:2: ( () otherlv_1= 'new' otherlv_2= '[' ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* otherlv_6= ']' )
			{
			dbg.location(5592,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5592:2: ( () otherlv_1= 'new' otherlv_2= '[' ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* otherlv_6= ']' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5592:2: () otherlv_1= 'new' otherlv_2= '[' ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* otherlv_6= ']'
			{
			dbg.location(5592,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5592:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5593:5: 
			{
			dbg.location(5593,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXArrayLiteralAccess().getXArrayLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(5598,12);
			otherlv_1=(Token)match(input,78,FOLLOW_78_in_ruleXArrayLiteral12789); if (state.failed) return current;dbg.location(5599,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXArrayLiteralAccess().getNewKeyword_1());
			    }dbg.location(5602,11);
			otherlv_2=(Token)match(input,57,FOLLOW_57_in_ruleXArrayLiteral12801); if (state.failed) return current;dbg.location(5603,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_2, grammarAccess.getXArrayLiteralAccess().getLeftSquareBracketKeyword_2());
			    }dbg.location(5606,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5606:3: ( (lv_elements_3_0= ruleXExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5607:3: (lv_elements_3_0= ruleXExpression )
			{
			dbg.location(5607,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5607:3: (lv_elements_3_0= ruleXExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5608:3: lv_elements_3_0= ruleXExpression
			{
			dbg.location(5608,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXArrayLiteralAccess().getElementsXExpressionParserRuleCall_3_0()); 
				    }dbg.location(5611,18);
			pushFollow(FOLLOW_ruleXExpression_in_ruleXArrayLiteral12822);
			lv_elements_3_0=ruleXExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(5611,36);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXArrayLiteralRule());
				        }
			       		add(
			       			current, 
			       			"elements",
			        		lv_elements_3_0, 
			        		"XExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5624,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5624:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
			try { dbg.enterSubRule(114);

			loop114:
			while (true) {
				int alt114=2;
				try { dbg.enterDecision(114, decisionCanBacktrack[114]);

				int LA114_0 = input.LA(1);
				if ( (LA114_0==33) ) {
					alt114=1;
				}

				} finally {dbg.exitDecision(114);}

				switch (alt114) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5624:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
					{
					dbg.location(5624,13);
					otherlv_4=(Token)match(input,33,FOLLOW_33_in_ruleXArrayLiteral12835); if (state.failed) return current;dbg.location(5625,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_4, grammarAccess.getXArrayLiteralAccess().getCommaKeyword_4_0());
					    }dbg.location(5628,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5628:3: ( (lv_elements_5_0= ruleXExpression ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5629:3: (lv_elements_5_0= ruleXExpression )
					{
					dbg.location(5629,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5629:3: (lv_elements_5_0= ruleXExpression )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5630:3: lv_elements_5_0= ruleXExpression
					{
					dbg.location(5630,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXArrayLiteralAccess().getElementsXExpressionParserRuleCall_4_1_0()); 
						    }dbg.location(5633,18);
					pushFollow(FOLLOW_ruleXExpression_in_ruleXArrayLiteral12856);
					lv_elements_5_0=ruleXExpression();
					state._fsp--;
					if (state.failed) return current;dbg.location(5633,36);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXArrayLiteralRule());
						        }
					       		add(
					       			current, 
					       			"elements",
					        		lv_elements_5_0, 
					        		"XExpression");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

				default :
					break loop114;
				}
			}
			} finally {dbg.exitSubRule(114);}
			dbg.location(5646,14);
			otherlv_6=(Token)match(input,58,FOLLOW_58_in_ruleXArrayLiteral12870); if (state.failed) return current;dbg.location(5647,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_6, grammarAccess.getXArrayLiteralAccess().getRightSquareBracketKeyword_5());
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5651, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXArrayLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXArrayLiteral"



	// $ANTLR start "entryRuleXBooleanLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5658:1: entryRuleXBooleanLiteral returns [EObject current=null] :iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
	public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXBooleanLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXBooleanLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5658, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5659:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5660:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
			{
			dbg.location(5660,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }dbg.location(5661,25);
			pushFollow(FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral12906);
			iv_ruleXBooleanLiteral=ruleXBooleanLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(5662,3);
			if ( state.backtracking==0 ) { current =iv_ruleXBooleanLiteral; }dbg.location(5663,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXBooleanLiteral12916); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5664, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXBooleanLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXBooleanLiteral"



	// $ANTLR start "ruleXBooleanLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5667:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
	public final EObject ruleXBooleanLiteral() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token lv_isTrue_2_0=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXBooleanLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5667, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5670:28: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5671:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
			{
			dbg.location(5671,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5671:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5671:2: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
			{
			dbg.location(5671,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5671:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5672:5: 
			{
			dbg.location(5672,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(5677,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5677:2: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
			int alt115=2;
			try { dbg.enterSubRule(115);
			try { dbg.enterDecision(115, decisionCanBacktrack[115]);

			int LA115_0 = input.LA(1);
			if ( (LA115_0==70) ) {
				alt115=1;
			}
			else if ( (LA115_0==85) ) {
				alt115=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 115, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(115);}

			switch (alt115) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5677:4: otherlv_1= 'false'
					{
					dbg.location(5677,13);
					otherlv_1=(Token)match(input,70,FOLLOW_70_in_ruleXBooleanLiteral12963); if (state.failed) return current;dbg.location(5678,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5682:6: ( (lv_isTrue_2_0= 'true' ) )
					{
					dbg.location(5682,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5682:6: ( (lv_isTrue_2_0= 'true' ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5683:3: (lv_isTrue_2_0= 'true' )
					{
					dbg.location(5683,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5683:3: (lv_isTrue_2_0= 'true' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5684:3: lv_isTrue_2_0= 'true'
					{
					dbg.location(5684,16);
					lv_isTrue_2_0=(Token)match(input,85,FOLLOW_85_in_ruleXBooleanLiteral12987); if (state.failed) return current;dbg.location(5685,5);
					if ( state.backtracking==0 ) {
					        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
					    }dbg.location(5689,6);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
						        }
					       		setWithLastConsumed(current, "isTrue", true, "true");
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(115);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5698, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXBooleanLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXBooleanLiteral"



	// $ANTLR start "entryRuleXNullLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5705:1: entryRuleXNullLiteral returns [EObject current=null] :iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
	public final EObject entryRuleXNullLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXNullLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXNullLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5705, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5706:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5707:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
			{
			dbg.location(5707,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXNullLiteralRule()); }dbg.location(5708,22);
			pushFollow(FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral13037);
			iv_ruleXNullLiteral=ruleXNullLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(5709,3);
			if ( state.backtracking==0 ) { current =iv_ruleXNullLiteral; }dbg.location(5710,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXNullLiteral13047); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5711, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXNullLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXNullLiteral"



	// $ANTLR start "ruleXNullLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5714:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
	public final EObject ruleXNullLiteral() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXNullLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5714, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5717:28: ( ( () otherlv_1= 'null' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5718:2: ( () otherlv_1= 'null' )
			{
			dbg.location(5718,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5718:2: ( () otherlv_1= 'null' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5718:2: () otherlv_1= 'null'
			{
			dbg.location(5718,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5718:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5719:5: 
			{
			dbg.location(5719,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(5724,12);
			otherlv_1=(Token)match(input,79,FOLLOW_79_in_ruleXNullLiteral13093); if (state.failed) return current;dbg.location(5725,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5729, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXNullLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXNullLiteral"



	// $ANTLR start "entryRuleXNumberLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5736:1: entryRuleXNumberLiteral returns [EObject current=null] :iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
	public final EObject entryRuleXNumberLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXNumberLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXNumberLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5736, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5737:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5738:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
			{
			dbg.location(5738,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXNumberLiteralRule()); }dbg.location(5739,24);
			pushFollow(FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral13129);
			iv_ruleXNumberLiteral=ruleXNumberLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(5740,3);
			if ( state.backtracking==0 ) { current =iv_ruleXNumberLiteral; }dbg.location(5741,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXNumberLiteral13139); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5742, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXNumberLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXNumberLiteral"



	// $ANTLR start "ruleXNumberLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5745:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
	public final EObject ruleXNumberLiteral() throws RecognitionException {
		EObject current = null;


		AntlrDatatypeRuleToken lv_value_1_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXNumberLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5745, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5748:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5749:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
			{
			dbg.location(5749,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5749:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5749:2: () ( (lv_value_1_0= ruleNumber ) )
			{
			dbg.location(5749,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5749:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5750:5: 
			{
			dbg.location(5750,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(5755,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5755:2: ( (lv_value_1_0= ruleNumber ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5756:3: (lv_value_1_0= ruleNumber )
			{
			dbg.location(5756,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5756:3: (lv_value_1_0= ruleNumber )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5757:3: lv_value_1_0= ruleNumber
			{
			dbg.location(5757,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
				    }dbg.location(5760,15);
			pushFollow(FOLLOW_ruleNumber_in_ruleXNumberLiteral13194);
			lv_value_1_0=ruleNumber();
			state._fsp--;
			if (state.failed) return current;dbg.location(5760,28);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
				        }
			       		set(
			       			current, 
			       			"value",
			        		lv_value_1_0, 
			        		"Number");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5774, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXNumberLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXNumberLiteral"



	// $ANTLR start "entryRuleXTypeLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5781:1: entryRuleXTypeLiteral returns [EObject current=null] :iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
	public final EObject entryRuleXTypeLiteral() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXTypeLiteral =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXTypeLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5781, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5782:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5783:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
			{
			dbg.location(5783,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXTypeLiteralRule()); }dbg.location(5784,22);
			pushFollow(FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral13230);
			iv_ruleXTypeLiteral=ruleXTypeLiteral();
			state._fsp--;
			if (state.failed) return current;dbg.location(5785,3);
			if ( state.backtracking==0 ) { current =iv_ruleXTypeLiteral; }dbg.location(5786,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXTypeLiteral13240); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5787, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXTypeLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXTypeLiteral"



	// $ANTLR start "ruleXTypeLiteral"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5790:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
	public final EObject ruleXTypeLiteral() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_2=null;
		Token otherlv_5=null;
		AntlrDatatypeRuleToken lv_arrayDimensions_4_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXTypeLiteral");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5790, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5793:28: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5794:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
			{
			dbg.location(5794,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5794:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5794:2: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
			{
			dbg.location(5794,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5794:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5795:5: 
			{
			dbg.location(5795,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
			            current);
			    }
			}
			dbg.location(5800,12);
			otherlv_1=(Token)match(input,86,FOLLOW_86_in_ruleXTypeLiteral13286); if (state.failed) return current;dbg.location(5801,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
			    }dbg.location(5804,11);
			otherlv_2=(Token)match(input,26,FOLLOW_26_in_ruleXTypeLiteral13298); if (state.failed) return current;dbg.location(5805,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
			    }dbg.location(5808,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5808:3: ( ( ruleQualifiedName ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5809:3: ( ruleQualifiedName )
			{
			dbg.location(5809,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5809:3: ( ruleQualifiedName )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5810:3: ruleQualifiedName
			{
			dbg.location(5810,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getXTypeLiteralRule());
				        }
			        }dbg.location(5815,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
				    }dbg.location(5818,3);
			pushFollow(FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral13321);
			ruleQualifiedName();
			state._fsp--;
			if (state.failed) return current;dbg.location(5818,22);
			if ( state.backtracking==0 ) { 
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5823,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5823:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
			try { dbg.enterSubRule(116);

			loop116:
			while (true) {
				int alt116=2;
				try { dbg.enterDecision(116, decisionCanBacktrack[116]);

				int LA116_0 = input.LA(1);
				if ( (LA116_0==57) ) {
					alt116=1;
				}

				} finally {dbg.exitDecision(116);}

				switch (alt116) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5824:3: (lv_arrayDimensions_4_0= ruleArrayBrackets )
					{
					dbg.location(5824,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5824:3: (lv_arrayDimensions_4_0= ruleArrayBrackets )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5825:3: lv_arrayDimensions_4_0= ruleArrayBrackets
					{
					dbg.location(5825,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
						    }dbg.location(5828,25);
					pushFollow(FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral13342);
					lv_arrayDimensions_4_0=ruleArrayBrackets();
					state._fsp--;
					if (state.failed) return current;dbg.location(5828,45);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
						        }
					       		add(
					       			current, 
					       			"arrayDimensions",
					        		lv_arrayDimensions_4_0, 
					        		"ArrayBrackets");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					break;

				default :
					break loop116;
				}
			}
			} finally {dbg.exitSubRule(116);}
			dbg.location(5841,13);
			otherlv_5=(Token)match(input,27,FOLLOW_27_in_ruleXTypeLiteral13355); if (state.failed) return current;dbg.location(5842,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5846, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXTypeLiteral");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXTypeLiteral"



	// $ANTLR start "entryRuleXCatchClause"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5863:1: entryRuleXCatchClause returns [EObject current=null] :iv_ruleXCatchClause= ruleXCatchClause EOF ;
	public final EObject entryRuleXCatchClause() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXCatchClause =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXCatchClause");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5863, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5864:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5865:2: iv_ruleXCatchClause= ruleXCatchClause EOF
			{
			dbg.location(5865,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXCatchClauseRule()); }dbg.location(5866,22);
			pushFollow(FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause13401);
			iv_ruleXCatchClause=ruleXCatchClause();
			state._fsp--;
			if (state.failed) return current;dbg.location(5867,3);
			if ( state.backtracking==0 ) { current =iv_ruleXCatchClause; }dbg.location(5868,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXCatchClause13411); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5869, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXCatchClause");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXCatchClause"



	// $ANTLR start "ruleXCatchClause"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5872:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
	public final EObject ruleXCatchClause() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		Token otherlv_3=null;
		EObject lv_declaredParam_2_0 =null;
		EObject lv_expression_4_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXCatchClause");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5872, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5875:28: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5876:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
			{
			dbg.location(5876,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5876:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5876:2: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
			{
			dbg.location(5876,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5876:2: ( ( 'catch' )=>otherlv_0= 'catch' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5876:3: ( 'catch' )=>otherlv_0= 'catch'
			{
			dbg.location(5877,14);
			otherlv_0=(Token)match(input,64,FOLLOW_64_in_ruleXCatchClause13456); if (state.failed) return current;dbg.location(5878,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
			    }
			}
			dbg.location(5881,12);
			otherlv_1=(Token)match(input,26,FOLLOW_26_in_ruleXCatchClause13469); if (state.failed) return current;dbg.location(5882,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
			    }dbg.location(5885,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5885:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5886:3: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
			{
			dbg.location(5886,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5886:3: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5887:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
			{
			dbg.location(5887,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
				    }dbg.location(5890,23);
			pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause13490);
			lv_declaredParam_2_0=ruleFullJvmFormalParameter();
			state._fsp--;
			if (state.failed) return current;dbg.location(5890,52);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
				        }
			       		set(
			       			current, 
			       			"declaredParam",
			        		lv_declaredParam_2_0, 
			        		"FullJvmFormalParameter");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(5903,12);
			otherlv_3=(Token)match(input,27,FOLLOW_27_in_ruleXCatchClause13502); if (state.failed) return current;dbg.location(5904,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
			    }dbg.location(5907,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5907:3: ( (lv_expression_4_0= ruleXExpression ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5908:3: (lv_expression_4_0= ruleXExpression )
			{
			dbg.location(5908,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5908:3: (lv_expression_4_0= ruleXExpression )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5909:3: lv_expression_4_0= ruleXExpression
			{
			dbg.location(5909,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
				    }dbg.location(5912,20);
			pushFollow(FOLLOW_ruleXExpression_in_ruleXCatchClause13523);
			lv_expression_4_0=ruleXExpression();
			state._fsp--;
			if (state.failed) return current;dbg.location(5912,38);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
				        }
			       		set(
			       			current, 
			       			"expression",
			        		lv_expression_4_0, 
			        		"XExpression");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5926, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXCatchClause");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXCatchClause"



	// $ANTLR start "entryRuleQualifiedName"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5933:1: entryRuleQualifiedName returns [String current=null] :iv_ruleQualifiedName= ruleQualifiedName EOF ;
	public final String entryRuleQualifiedName() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleQualifiedName =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleQualifiedName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5933, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5934:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5935:2: iv_ruleQualifiedName= ruleQualifiedName EOF
			{
			dbg.location(5935,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getQualifiedNameRule()); }dbg.location(5936,23);
			pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName13560);
			iv_ruleQualifiedName=ruleQualifiedName();
			state._fsp--;
			if (state.failed) return current;dbg.location(5937,3);
			if ( state.backtracking==0 ) { current =iv_ruleQualifiedName.getText(); }dbg.location(5938,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName13571); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5939, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleQualifiedName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleQualifiedName"



	// $ANTLR start "ruleQualifiedName"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5942:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
	public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;
		AntlrDatatypeRuleToken this_ValidID_0 =null;
		AntlrDatatypeRuleToken this_ValidID_2 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleQualifiedName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5942, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5945:28: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5946:5: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
			{
			dbg.location(5946,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5946:5: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5947:5: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
			{
			dbg.location(5947,5);
			if ( state.backtracking==0 ) { 
			        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
			    }dbg.location(5950,19);
			pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName13618);
			this_ValidID_0=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(5950,35);
			if ( state.backtracking==0 ) {
					current.merge(this_ValidID_0);
			    }dbg.location(5954,5);
			if ( state.backtracking==0 ) { 
			        afterParserOrEnumRuleCall();
			    }dbg.location(5957,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5957:2: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
			try { dbg.enterSubRule(117);

			loop117:
			while (true) {
				int alt117=2;
				try { dbg.enterDecision(117, decisionCanBacktrack[117]);

				int LA117_0 = input.LA(1);
				if ( (LA117_0==37) ) {
					int LA117_2 = input.LA(2);
					if ( (LA117_2==RULE_ID) ) {
						int LA117_3 = input.LA(3);
						if ( (synpred36_InternalXAML()) ) {
							alt117=1;
						}

					}

				}

				} finally {dbg.exitDecision(117);}

				switch (alt117) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5957:2: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
					{
					dbg.location(5957,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5957:2: ( ( '.' )=>kw= '.' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5957:3: ( '.' )=>kw= '.'
					{
					dbg.location(5960,4);
					kw=(Token)match(input,37,FOLLOW_37_in_ruleQualifiedName13646); if (state.failed) return current;dbg.location(5961,5);
					if ( state.backtracking==0 ) {
					        current.merge(kw);
					        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
					    }
					}
					dbg.location(5966,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
					    }dbg.location(5969,19);
					pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName13669);
					this_ValidID_2=ruleValidID();
					state._fsp--;
					if (state.failed) return current;dbg.location(5969,35);
					if ( state.backtracking==0 ) {
							current.merge(this_ValidID_2);
					    }dbg.location(5973,5);
					if ( state.backtracking==0 ) { 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

				default :
					break loop117;
				}
			}
			} finally {dbg.exitSubRule(117);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(5977, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleQualifiedName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleQualifiedName"



	// $ANTLR start "entryRuleNumber"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5984:1: entryRuleNumber returns [String current=null] :iv_ruleNumber= ruleNumber EOF ;
	public final String entryRuleNumber() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleNumber =null;

		 
				HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
			
		try { dbg.enterRule(getGrammarFileName(), "entryRuleNumber");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5984, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5988:2: (iv_ruleNumber= ruleNumber EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5989:2: iv_ruleNumber= ruleNumber EOF
			{
			dbg.location(5989,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getNumberRule()); }dbg.location(5990,16);
			pushFollow(FOLLOW_ruleNumber_in_entryRuleNumber13723);
			iv_ruleNumber=ruleNumber();
			state._fsp--;
			if (state.failed) return current;dbg.location(5991,3);
			if ( state.backtracking==0 ) { current =iv_ruleNumber.getText(); }dbg.location(5992,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleNumber13734); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving

				myHiddenTokenState.restore();

		}
		dbg.location(5993, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleNumber");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleNumber"



	// $ANTLR start "ruleNumber"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5999:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
	public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token this_HEX_0=null;
		Token this_INT_1=null;
		Token this_DECIMAL_2=null;
		Token kw=null;
		Token this_INT_4=null;
		Token this_DECIMAL_5=null;

		 enterRule(); 
				HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleNumber");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(5999, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6003:28: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6004:6: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )? ) )
			{
			dbg.location(6004,6);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6004:6: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )? ) )
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==RULE_HEX) ) {
				alt121=1;
			}
			else if ( (LA121_0==RULE_DECIMAL||LA121_0==RULE_INT) ) {
				alt121=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 121, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6004:6: this_HEX_0= RULE_HEX
					{
					dbg.location(6004,16);
					this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleNumber13778); if (state.failed) return current;dbg.location(6004,29);
					if ( state.backtracking==0 ) {
							current.merge(this_HEX_0);
					    }dbg.location(6008,5);
					if ( state.backtracking==0 ) { 
					    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6012:6: ( (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )? )
					{
					dbg.location(6012,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6012:6: ( (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )? )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6012:7: (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )?
					{
					dbg.location(6012,7);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6012:7: (this_INT_1= RULE_INT |this_DECIMAL_2= RULE_DECIMAL )
					int alt118=2;
					try { dbg.enterSubRule(118);
					try { dbg.enterDecision(118, decisionCanBacktrack[118]);

					int LA118_0 = input.LA(1);
					if ( (LA118_0==RULE_INT) ) {
						alt118=1;
					}
					else if ( (LA118_0==RULE_DECIMAL) ) {
						alt118=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						NoViableAltException nvae =
							new NoViableAltException("", 118, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(118);}

					switch (alt118) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6012:12: this_INT_1= RULE_INT
							{
							dbg.location(6012,22);
							this_INT_1=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber13806); if (state.failed) return current;dbg.location(6012,35);
							if ( state.backtracking==0 ) {
									current.merge(this_INT_1);
							    }dbg.location(6016,5);
							if ( state.backtracking==0 ) { 
							    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
							    }
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6020:10: this_DECIMAL_2= RULE_DECIMAL
							{
							dbg.location(6020,24);
							this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber13832); if (state.failed) return current;dbg.location(6020,41);
							if ( state.backtracking==0 ) {
									current.merge(this_DECIMAL_2);
							    }dbg.location(6024,5);
							if ( state.backtracking==0 ) { 
							    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(118);}
					dbg.location(6027,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6027:2: (kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL ) )?
					int alt120=2;
					try { dbg.enterSubRule(120);
					try { dbg.enterDecision(120, decisionCanBacktrack[120]);

					int LA120_0 = input.LA(1);
					if ( (LA120_0==37) ) {
						alt120=1;
					}
					} finally {dbg.exitDecision(120);}

					switch (alt120) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6028:2: kw= '.' (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL )
							{
							dbg.location(6028,4);
							kw=(Token)match(input,37,FOLLOW_37_in_ruleNumber13852); if (state.failed) return current;dbg.location(6029,5);
							if ( state.backtracking==0 ) {
							        current.merge(kw);
							        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
							    }dbg.location(6033,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6033:6: (this_INT_4= RULE_INT |this_DECIMAL_5= RULE_DECIMAL )
							int alt119=2;
							try { dbg.enterSubRule(119);
							try { dbg.enterDecision(119, decisionCanBacktrack[119]);

							int LA119_0 = input.LA(1);
							if ( (LA119_0==RULE_INT) ) {
								alt119=1;
							}
							else if ( (LA119_0==RULE_DECIMAL) ) {
								alt119=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return current;}
								NoViableAltException nvae =
									new NoViableAltException("", 119, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(119);}

							switch (alt119) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6033:6: this_INT_4= RULE_INT
									{
									dbg.location(6033,16);
									this_INT_4=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber13868); if (state.failed) return current;dbg.location(6033,29);
									if ( state.backtracking==0 ) {
											current.merge(this_INT_4);
									    }dbg.location(6037,5);
									if ( state.backtracking==0 ) { 
									    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
									    }
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6041:10: this_DECIMAL_5= RULE_DECIMAL
									{
									dbg.location(6041,24);
									this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber13894); if (state.failed) return current;dbg.location(6041,41);
									if ( state.backtracking==0 ) {
											current.merge(this_DECIMAL_5);
									    }dbg.location(6045,5);
									if ( state.backtracking==0 ) { 
									    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
									    }
									}
									break;

							}
							} finally {dbg.exitSubRule(119);}

							}
							break;

					}
					} finally {dbg.exitSubRule(120);}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(121);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving

				myHiddenTokenState.restore();

		}
		dbg.location(6049, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleNumber");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleNumber"



	// $ANTLR start "entryRuleJvmTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6061:1: entryRuleJvmTypeReference returns [EObject current=null] :iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
	public final EObject entryRuleJvmTypeReference() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmTypeReference =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6061, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6062:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6063:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
			{
			dbg.location(6063,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }dbg.location(6064,26);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference13949);
			iv_ruleJvmTypeReference=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6065,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmTypeReference; }dbg.location(6066,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmTypeReference13959); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6067, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmTypeReference"



	// $ANTLR start "ruleJvmTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6070:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) |this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
	public final EObject ruleJvmTypeReference() throws RecognitionException {
		EObject current = null;


		EObject this_JvmParameterizedTypeReference_0 =null;
		EObject this_XFunctionTypeRef_3 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6070, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6073:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) |this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6074:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) |this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
			{
			dbg.location(6074,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6074:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) |this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( (LA123_0==RULE_ID) ) {
				alt123=1;
			}
			else if ( (LA123_0==26||LA123_0==51) ) {
				alt123=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 123, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6074:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
					{
					dbg.location(6074,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6074:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6075:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
					{
					dbg.location(6075,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
					    }dbg.location(6078,41);
					pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference14007);
					this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(6079,5);
					if ( state.backtracking==0 ) { 
					        current = this_JvmParameterizedTypeReference_0; 
					        afterParserOrEnumRuleCall();
					    }dbg.location(6083,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:2: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
					try { dbg.enterSubRule(122);

					loop122:
					while (true) {
						int alt122=2;
						try { dbg.enterDecision(122, decisionCanBacktrack[122]);

						int LA122_0 = input.LA(1);
						if ( (LA122_0==57) ) {
							int LA122_2 = input.LA(2);
							if ( (LA122_2==58) && (synpred37_InternalXAML())) {
								alt122=1;
							}

						}

						} finally {dbg.exitDecision(122);}

						switch (alt122) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
							{
							dbg.location(6084,24);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6084:24: ( () ruleArrayBrackets )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6084:25: () ruleArrayBrackets
							{
							dbg.location(6084,25);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6084:25: ()
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6085:5: 
							{
							dbg.location(6085,5);
							if ( state.backtracking==0 ) {
							        current = forceCreateModelElementAndSet(
							            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
							            current);
							    }
							}
							dbg.location(6091,5);
							if ( state.backtracking==0 ) { 
							        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
							    }dbg.location(6094,1);
							pushFollow(FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference14043);
							ruleArrayBrackets();
							state._fsp--;
							if (state.failed) return current;dbg.location(6095,5);
							if ( state.backtracking==0 ) { 
							        afterParserOrEnumRuleCall();
							    }
							}

							}
							break;

						default :
							break loop122;
						}
					}
					} finally {dbg.exitSubRule(122);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6100:5: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
					{
					dbg.location(6100,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
					    }dbg.location(6103,28);
					pushFollow(FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference14074);
					this_XFunctionTypeRef_3=ruleXFunctionTypeRef();
					state._fsp--;
					if (state.failed) return current;dbg.location(6104,5);
					if ( state.backtracking==0 ) { 
					        current = this_XFunctionTypeRef_3; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6109, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmTypeReference"



	// $ANTLR start "entryRuleArrayBrackets"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6116:1: entryRuleArrayBrackets returns [String current=null] :iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
	public final String entryRuleArrayBrackets() throws RecognitionException {
		String current = null;


		AntlrDatatypeRuleToken iv_ruleArrayBrackets =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleArrayBrackets");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6116, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6117:2: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6118:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
			{
			dbg.location(6118,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getArrayBracketsRule()); }dbg.location(6119,23);
			pushFollow(FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets14110);
			iv_ruleArrayBrackets=ruleArrayBrackets();
			state._fsp--;
			if (state.failed) return current;dbg.location(6120,3);
			if ( state.backtracking==0 ) { current =iv_ruleArrayBrackets.getText(); }dbg.location(6121,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleArrayBrackets14121); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6122, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleArrayBrackets");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleArrayBrackets"



	// $ANTLR start "ruleArrayBrackets"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6125:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
	public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
		AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();


		Token kw=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleArrayBrackets");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6125, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6128:28: ( (kw= '[' kw= ']' ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6129:2: (kw= '[' kw= ']' )
			{
			dbg.location(6129,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6129:2: (kw= '[' kw= ']' )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6130:2: kw= '[' kw= ']'
			{
			dbg.location(6130,4);
			kw=(Token)match(input,57,FOLLOW_57_in_ruleArrayBrackets14159); if (state.failed) return current;dbg.location(6131,5);
			if ( state.backtracking==0 ) {
			        current.merge(kw);
			        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
			    }dbg.location(6136,4);
			kw=(Token)match(input,58,FOLLOW_58_in_ruleArrayBrackets14172); if (state.failed) return current;dbg.location(6137,5);
			if ( state.backtracking==0 ) {
			        current.merge(kw);
			        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
			    }
			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6142, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleArrayBrackets");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleArrayBrackets"



	// $ANTLR start "entryRuleXFunctionTypeRef"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6149:1: entryRuleXFunctionTypeRef returns [EObject current=null] :iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
	public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXFunctionTypeRef =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXFunctionTypeRef");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6149, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6150:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6151:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
			{
			dbg.location(6151,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }dbg.location(6152,26);
			pushFollow(FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef14212);
			iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();
			state._fsp--;
			if (state.failed) return current;dbg.location(6153,3);
			if ( state.backtracking==0 ) { current =iv_ruleXFunctionTypeRef; }dbg.location(6154,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXFunctionTypeRef14222); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6155, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXFunctionTypeRef");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXFunctionTypeRef"



	// $ANTLR start "ruleXFunctionTypeRef"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6158:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
	public final EObject ruleXFunctionTypeRef() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_2=null;
		Token otherlv_4=null;
		Token otherlv_5=null;
		EObject lv_paramTypes_1_0 =null;
		EObject lv_paramTypes_3_0 =null;
		EObject lv_returnType_6_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXFunctionTypeRef");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6158, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6161:28: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6162:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
			{
			dbg.location(6162,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6162:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6162:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
			{
			dbg.location(6162,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6162:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
			int alt126=2;
			try { dbg.enterSubRule(126);
			try { dbg.enterDecision(126, decisionCanBacktrack[126]);

			int LA126_0 = input.LA(1);
			if ( (LA126_0==26) ) {
				alt126=1;
			}
			} finally {dbg.exitDecision(126);}

			switch (alt126) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6162:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
					{
					dbg.location(6162,13);
					otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleXFunctionTypeRef14260); if (state.failed) return current;dbg.location(6163,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
					    }dbg.location(6166,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6166:2: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
					int alt125=2;
					try { dbg.enterSubRule(125);
					try { dbg.enterDecision(125, decisionCanBacktrack[125]);

					int LA125_0 = input.LA(1);
					if ( (LA125_0==RULE_ID||LA125_0==26||LA125_0==51) ) {
						alt125=1;
					}
					} finally {dbg.exitDecision(125);}

					switch (alt125) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6166:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
							{
							dbg.location(6166,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6166:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6167:3: (lv_paramTypes_1_0= ruleJvmTypeReference )
							{
							dbg.location(6167,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6167:3: (lv_paramTypes_1_0= ruleJvmTypeReference )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6168:3: lv_paramTypes_1_0= ruleJvmTypeReference
							{
							dbg.location(6168,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
								    }dbg.location(6171,20);
							pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef14282);
							lv_paramTypes_1_0=ruleJvmTypeReference();
							state._fsp--;
							if (state.failed) return current;dbg.location(6171,43);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
								        }
							       		add(
							       			current, 
							       			"paramTypes",
							        		lv_paramTypes_1_0, 
							        		"JvmTypeReference");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(6184,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6184:2: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
							try { dbg.enterSubRule(124);

							loop124:
							while (true) {
								int alt124=2;
								try { dbg.enterDecision(124, decisionCanBacktrack[124]);

								int LA124_0 = input.LA(1);
								if ( (LA124_0==33) ) {
									alt124=1;
								}

								} finally {dbg.exitDecision(124);}

								switch (alt124) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6184:4: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
									{
									dbg.location(6184,13);
									otherlv_2=(Token)match(input,33,FOLLOW_33_in_ruleXFunctionTypeRef14295); if (state.failed) return current;dbg.location(6185,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
									    }dbg.location(6188,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6188:3: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6189:3: (lv_paramTypes_3_0= ruleJvmTypeReference )
									{
									dbg.location(6189,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6189:3: (lv_paramTypes_3_0= ruleJvmTypeReference )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6190:3: lv_paramTypes_3_0= ruleJvmTypeReference
									{
									dbg.location(6190,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
										    }dbg.location(6193,20);
									pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef14316);
									lv_paramTypes_3_0=ruleJvmTypeReference();
									state._fsp--;
									if (state.failed) return current;dbg.location(6193,43);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
										        }
									       		add(
									       			current, 
									       			"paramTypes",
									        		lv_paramTypes_3_0, 
									        		"JvmTypeReference");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop124;
								}
							}
							} finally {dbg.exitSubRule(124);}

							}
							break;

					}
					} finally {dbg.exitSubRule(125);}
					dbg.location(6206,16);
					otherlv_4=(Token)match(input,27,FOLLOW_27_in_ruleXFunctionTypeRef14332); if (state.failed) return current;dbg.location(6207,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(126);}
			dbg.location(6210,13);
			otherlv_5=(Token)match(input,51,FOLLOW_51_in_ruleXFunctionTypeRef14346); if (state.failed) return current;dbg.location(6211,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
			    }dbg.location(6214,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6214:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6215:3: (lv_returnType_6_0= ruleJvmTypeReference )
			{
			dbg.location(6215,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6215:3: (lv_returnType_6_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6216:3: lv_returnType_6_0= ruleJvmTypeReference
			{
			dbg.location(6216,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
				    }dbg.location(6219,20);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef14367);
			lv_returnType_6_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6219,43);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
				        }
			       		set(
			       			current, 
			       			"returnType",
			        		lv_returnType_6_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6233, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXFunctionTypeRef");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXFunctionTypeRef"



	// $ANTLR start "entryRuleJvmParameterizedTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6240:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] :iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
	public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmParameterizedTypeReference =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmParameterizedTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6240, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6241:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6242:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
			{
			dbg.location(6242,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }dbg.location(6243,39);
			pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference14403);
			iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6244,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmParameterizedTypeReference; }dbg.location(6245,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference14413); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6246, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmParameterizedTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmParameterizedTypeReference"



	// $ANTLR start "ruleJvmParameterizedTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6249:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ) ;
	public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_3=null;
		Token otherlv_5=null;
		EObject lv_arguments_2_0 =null;
		EObject lv_arguments_4_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmParameterizedTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6249, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6252:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6253:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? )
			{
			dbg.location(6253,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6253:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6253:2: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
			{
			dbg.location(6253,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6253:2: ( ( ruleQualifiedName ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6254:3: ( ruleQualifiedName )
			{
			dbg.location(6254,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6254:3: ( ruleQualifiedName )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6255:3: ruleQualifiedName
			{
			dbg.location(6255,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
				        }
			        }dbg.location(6260,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
				    }dbg.location(6263,3);
			pushFollow(FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference14461);
			ruleQualifiedName();
			state._fsp--;
			if (state.failed) return current;dbg.location(6263,22);
			if ( state.backtracking==0 ) { 
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(6268,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6268:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
			int alt128=2;
			try { dbg.enterSubRule(128);
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( (LA128_0==45) ) {
				int LA128_1 = input.LA(2);
				if ( (LA128_1==RULE_ID) && (synpred38_InternalXAML())) {
					alt128=1;
				}
				else if ( (LA128_1==26) && (synpred38_InternalXAML())) {
					alt128=1;
				}
				else if ( (LA128_1==51) && (synpred38_InternalXAML())) {
					alt128=1;
				}
				else if ( (LA128_1==54) && (synpred38_InternalXAML())) {
					alt128=1;
				}
			}
			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6268:3: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
					{
					dbg.location(6268,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6268:3: ( ( '<' )=>otherlv_1= '<' )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6268:4: ( '<' )=>otherlv_1= '<'
					{
					dbg.location(6269,14);
					otherlv_1=(Token)match(input,45,FOLLOW_45_in_ruleJvmParameterizedTypeReference14482); if (state.failed) return current;dbg.location(6270,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
					    }
					}
					dbg.location(6273,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6273:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6274:3: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
					{
					dbg.location(6274,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6274:3: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6275:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
					{
					dbg.location(6275,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
						    }dbg.location(6278,19);
					pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference14504);
					lv_arguments_2_0=ruleJvmArgumentTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(6278,50);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
						        }
					       		add(
					       			current, 
					       			"arguments",
					        		lv_arguments_2_0, 
					        		"JvmArgumentTypeReference");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(6291,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6291:2: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
					try { dbg.enterSubRule(127);

					loop127:
					while (true) {
						int alt127=2;
						try { dbg.enterDecision(127, decisionCanBacktrack[127]);

						int LA127_0 = input.LA(1);
						if ( (LA127_0==33) ) {
							alt127=1;
						}

						} finally {dbg.exitDecision(127);}

						switch (alt127) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6291:4: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
							{
							dbg.location(6291,13);
							otherlv_3=(Token)match(input,33,FOLLOW_33_in_ruleJvmParameterizedTypeReference14517); if (state.failed) return current;dbg.location(6292,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
							    }dbg.location(6295,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6295:3: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6296:3: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
							{
							dbg.location(6296,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6296:3: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6297:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
							{
							dbg.location(6297,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
								    }dbg.location(6300,19);
							pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference14538);
							lv_arguments_4_0=ruleJvmArgumentTypeReference();
							state._fsp--;
							if (state.failed) return current;dbg.location(6300,50);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
								        }
							       		add(
							       			current, 
							       			"arguments",
							        		lv_arguments_4_0, 
							        		"JvmArgumentTypeReference");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

						default :
							break loop127;
						}
					}
					} finally {dbg.exitSubRule(127);}
					dbg.location(6313,14);
					otherlv_5=(Token)match(input,52,FOLLOW_52_in_ruleJvmParameterizedTypeReference14552); if (state.failed) return current;dbg.location(6314,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(128);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6318, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmParameterizedTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmParameterizedTypeReference"



	// $ANTLR start "entryRuleJvmArgumentTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6325:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] :iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
	public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmArgumentTypeReference =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmArgumentTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6325, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6326:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6327:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
			{
			dbg.location(6327,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }dbg.location(6328,34);
			pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference14590);
			iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6329,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmArgumentTypeReference; }dbg.location(6330,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference14600); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6331, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmArgumentTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmArgumentTypeReference"



	// $ANTLR start "ruleJvmArgumentTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6334:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference |this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
	public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
		EObject current = null;


		EObject this_JvmTypeReference_0 =null;
		EObject this_JvmWildcardTypeReference_1 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmArgumentTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6334, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6337:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference |this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6338:5: (this_JvmTypeReference_0= ruleJvmTypeReference |this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
			{
			dbg.location(6338,5);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6338:5: (this_JvmTypeReference_0= ruleJvmTypeReference |this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
			int alt129=2;
			try { dbg.enterSubRule(129);
			try { dbg.enterDecision(129, decisionCanBacktrack[129]);

			int LA129_0 = input.LA(1);
			if ( (LA129_0==RULE_ID||LA129_0==26||LA129_0==51) ) {
				alt129=1;
			}
			else if ( (LA129_0==54) ) {
				alt129=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 129, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(129);}

			switch (alt129) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6339:5: this_JvmTypeReference_0= ruleJvmTypeReference
					{
					dbg.location(6339,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
					    }dbg.location(6342,28);
					pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference14647);
					this_JvmTypeReference_0=ruleJvmTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(6343,5);
					if ( state.backtracking==0 ) { 
					        current = this_JvmTypeReference_0; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6349:5: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
					{
					dbg.location(6349,5);
					if ( state.backtracking==0 ) { 
					        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
					    }dbg.location(6352,36);
					pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference14674);
					this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();
					state._fsp--;
					if (state.failed) return current;dbg.location(6353,5);
					if ( state.backtracking==0 ) { 
					        current = this_JvmWildcardTypeReference_1; 
					        afterParserOrEnumRuleCall();
					    }
					}
					break;

			}
			} finally {dbg.exitSubRule(129);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6358, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmArgumentTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmArgumentTypeReference"



	// $ANTLR start "entryRuleJvmWildcardTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6365:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] :iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
	public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmWildcardTypeReference =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmWildcardTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6365, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6366:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6367:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
			{
			dbg.location(6367,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }dbg.location(6368,34);
			pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference14709);
			iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6369,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmWildcardTypeReference; }dbg.location(6370,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference14719); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6371, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmWildcardTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmWildcardTypeReference"



	// $ANTLR start "ruleJvmWildcardTypeReference"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6374:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? ) ;
	public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		EObject lv_constraints_2_0 =null;
		EObject lv_constraints_3_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmWildcardTypeReference");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6374, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6377:28: ( ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6378:2: ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? )
			{
			dbg.location(6378,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6378:2: ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6378:2: () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )?
			{
			dbg.location(6378,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6378:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6379:5: 
			{
			dbg.location(6379,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
			            current);
			    }
			}
			dbg.location(6384,12);
			otherlv_1=(Token)match(input,54,FOLLOW_54_in_ruleJvmWildcardTypeReference14765); if (state.failed) return current;dbg.location(6385,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
			    }dbg.location(6388,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6388:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )?
			int alt130=3;
			try { dbg.enterSubRule(130);
			try { dbg.enterDecision(130, decisionCanBacktrack[130]);

			int LA130_0 = input.LA(1);
			if ( (LA130_0==69) ) {
				alt130=1;
			}
			else if ( (LA130_0==84) ) {
				alt130=2;
			}
			} finally {dbg.exitDecision(130);}

			switch (alt130) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6388:2: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
					{
					dbg.location(6388,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6388:2: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6389:3: (lv_constraints_2_0= ruleJvmUpperBound )
					{
					dbg.location(6389,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6389:3: (lv_constraints_2_0= ruleJvmUpperBound )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6390:3: lv_constraints_2_0= ruleJvmUpperBound
					{
					dbg.location(6390,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
						    }dbg.location(6393,21);
					pushFollow(FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference14787);
					lv_constraints_2_0=ruleJvmUpperBound();
					state._fsp--;
					if (state.failed) return current;dbg.location(6393,41);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
						        }
					       		add(
					       			current, 
					       			"constraints",
					        		lv_constraints_2_0, 
					        		"JvmUpperBound");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6407:6: ( (lv_constraints_3_0= ruleJvmLowerBound ) )
					{
					dbg.location(6407,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6407:6: ( (lv_constraints_3_0= ruleJvmLowerBound ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6408:3: (lv_constraints_3_0= ruleJvmLowerBound )
					{
					dbg.location(6408,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6408:3: (lv_constraints_3_0= ruleJvmLowerBound )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6409:3: lv_constraints_3_0= ruleJvmLowerBound
					{
					dbg.location(6409,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
						    }dbg.location(6412,21);
					pushFollow(FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference14814);
					lv_constraints_3_0=ruleJvmLowerBound();
					state._fsp--;
					if (state.failed) return current;dbg.location(6412,41);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
						        }
					       		add(
					       			current, 
					       			"constraints",
					        		lv_constraints_3_0, 
					        		"JvmLowerBound");
						        afterParserOrEnumRuleCall();
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(130);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6426, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmWildcardTypeReference");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmWildcardTypeReference"



	// $ANTLR start "entryRuleJvmUpperBound"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6433:1: entryRuleJvmUpperBound returns [EObject current=null] :iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
	public final EObject entryRuleJvmUpperBound() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmUpperBound =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmUpperBound");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6433, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6434:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6435:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
			{
			dbg.location(6435,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }dbg.location(6436,23);
			pushFollow(FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound14852);
			iv_ruleJvmUpperBound=ruleJvmUpperBound();
			state._fsp--;
			if (state.failed) return current;dbg.location(6437,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmUpperBound; }dbg.location(6438,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBound14862); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6439, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmUpperBound");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmUpperBound"



	// $ANTLR start "ruleJvmUpperBound"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6442:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
	public final EObject ruleJvmUpperBound() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		EObject lv_typeReference_1_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmUpperBound");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6442, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6445:28: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6446:3: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
			{
			dbg.location(6446,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6446:3: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6446:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
			{
			dbg.location(6446,12);
			otherlv_0=(Token)match(input,69,FOLLOW_69_in_ruleJvmUpperBound14899); if (state.failed) return current;dbg.location(6447,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
			    }dbg.location(6450,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6450:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6451:3: (lv_typeReference_1_0= ruleJvmTypeReference )
			{
			dbg.location(6451,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6451:3: (lv_typeReference_1_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6452:3: lv_typeReference_1_0= ruleJvmTypeReference
			{
			dbg.location(6452,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
				    }dbg.location(6455,23);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound14920);
			lv_typeReference_1_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6455,46);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
				        }
			       		set(
			       			current, 
			       			"typeReference",
			        		lv_typeReference_1_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6469, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmUpperBound");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmUpperBound"



	// $ANTLR start "entryRuleJvmUpperBoundAnded"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6476:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] :iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
	public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmUpperBoundAnded =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmUpperBoundAnded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6476, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6477:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6478:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
			{
			dbg.location(6478,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }dbg.location(6479,28);
			pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded14956);
			iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();
			state._fsp--;
			if (state.failed) return current;dbg.location(6480,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmUpperBoundAnded; }dbg.location(6481,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded14966); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6482, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmUpperBoundAnded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmUpperBoundAnded"



	// $ANTLR start "ruleJvmUpperBoundAnded"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6485:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
	public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		EObject lv_typeReference_1_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmUpperBoundAnded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6485, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6488:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6489:3: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
			{
			dbg.location(6489,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6489:3: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6489:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
			{
			dbg.location(6489,12);
			otherlv_0=(Token)match(input,24,FOLLOW_24_in_ruleJvmUpperBoundAnded15003); if (state.failed) return current;dbg.location(6490,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
			    }dbg.location(6493,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6493:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6494:3: (lv_typeReference_1_0= ruleJvmTypeReference )
			{
			dbg.location(6494,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6494:3: (lv_typeReference_1_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6495:3: lv_typeReference_1_0= ruleJvmTypeReference
			{
			dbg.location(6495,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
				    }dbg.location(6498,23);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded15024);
			lv_typeReference_1_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6498,46);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
				        }
			       		set(
			       			current, 
			       			"typeReference",
			        		lv_typeReference_1_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6512, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmUpperBoundAnded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmUpperBoundAnded"



	// $ANTLR start "entryRuleJvmLowerBound"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6519:1: entryRuleJvmLowerBound returns [EObject current=null] :iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
	public final EObject entryRuleJvmLowerBound() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmLowerBound =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmLowerBound");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6519, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6520:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6521:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
			{
			dbg.location(6521,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }dbg.location(6522,23);
			pushFollow(FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound15060);
			iv_ruleJvmLowerBound=ruleJvmLowerBound();
			state._fsp--;
			if (state.failed) return current;dbg.location(6523,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmLowerBound; }dbg.location(6524,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmLowerBound15070); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6525, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmLowerBound");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmLowerBound"



	// $ANTLR start "ruleJvmLowerBound"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6528:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
	public final EObject ruleJvmLowerBound() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		EObject lv_typeReference_1_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmLowerBound");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6528, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6531:28: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6532:3: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
			{
			dbg.location(6532,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6532:3: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6532:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
			{
			dbg.location(6532,12);
			otherlv_0=(Token)match(input,84,FOLLOW_84_in_ruleJvmLowerBound15107); if (state.failed) return current;dbg.location(6533,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
			    }dbg.location(6536,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6536:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6537:3: (lv_typeReference_1_0= ruleJvmTypeReference )
			{
			dbg.location(6537,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6537:3: (lv_typeReference_1_0= ruleJvmTypeReference )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6538:3: lv_typeReference_1_0= ruleJvmTypeReference
			{
			dbg.location(6538,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
				    }dbg.location(6541,23);
			pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound15128);
			lv_typeReference_1_0=ruleJvmTypeReference();
			state._fsp--;
			if (state.failed) return current;dbg.location(6541,46);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
				        }
			       		set(
			       			current, 
			       			"typeReference",
			        		lv_typeReference_1_0, 
			        		"JvmTypeReference");
				        afterParserOrEnumRuleCall();
				    }
			}

			}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6555, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmLowerBound");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmLowerBound"



	// $ANTLR start "entryRuleJvmTypeParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6562:1: entryRuleJvmTypeParameter returns [EObject current=null] :iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF ;
	public final EObject entryRuleJvmTypeParameter() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleJvmTypeParameter =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleJvmTypeParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6562, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6563:2: (iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6564:2: iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF
			{
			dbg.location(6564,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getJvmTypeParameterRule()); }dbg.location(6565,26);
			pushFollow(FOLLOW_ruleJvmTypeParameter_in_entryRuleJvmTypeParameter15164);
			iv_ruleJvmTypeParameter=ruleJvmTypeParameter();
			state._fsp--;
			if (state.failed) return current;dbg.location(6566,3);
			if ( state.backtracking==0 ) { current =iv_ruleJvmTypeParameter; }dbg.location(6567,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleJvmTypeParameter15174); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6568, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleJvmTypeParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleJvmTypeParameter"



	// $ANTLR start "ruleJvmTypeParameter"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6571:1: ruleJvmTypeParameter returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) ;
	public final EObject ruleJvmTypeParameter() throws RecognitionException {
		EObject current = null;


		AntlrDatatypeRuleToken lv_name_0_0 =null;
		EObject lv_constraints_1_0 =null;
		EObject lv_constraints_2_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleJvmTypeParameter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6571, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6574:28: ( ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6575:2: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
			{
			dbg.location(6575,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6575:2: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6575:2: ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
			{
			dbg.location(6575,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6575:2: ( (lv_name_0_0= ruleValidID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6576:3: (lv_name_0_0= ruleValidID )
			{
			dbg.location(6576,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6576:3: (lv_name_0_0= ruleValidID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6577:3: lv_name_0_0= ruleValidID
			{
			dbg.location(6577,3);
			if ( state.backtracking==0 ) { 
				        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getNameValidIDParserRuleCall_0_0()); 
				    }dbg.location(6580,14);
			pushFollow(FOLLOW_ruleValidID_in_ruleJvmTypeParameter15220);
			lv_name_0_0=ruleValidID();
			state._fsp--;
			if (state.failed) return current;dbg.location(6580,28);
			if ( state.backtracking==0 ) {
				        if (current==null) {
				            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
				        }
			       		set(
			       			current, 
			       			"name",
			        		lv_name_0_0, 
			        		"ValidID");
				        afterParserOrEnumRuleCall();
				    }
			}

			}
			dbg.location(6593,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6593:2: ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( (LA132_0==69) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6593:3: ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
					{
					dbg.location(6593,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6593:3: ( (lv_constraints_1_0= ruleJvmUpperBound ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6594:3: (lv_constraints_1_0= ruleJvmUpperBound )
					{
					dbg.location(6594,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6594:3: (lv_constraints_1_0= ruleJvmUpperBound )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6595:3: lv_constraints_1_0= ruleJvmUpperBound
					{
					dbg.location(6595,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundParserRuleCall_1_0_0()); 
						    }dbg.location(6598,21);
					pushFollow(FOLLOW_ruleJvmUpperBound_in_ruleJvmTypeParameter15242);
					lv_constraints_1_0=ruleJvmUpperBound();
					state._fsp--;
					if (state.failed) return current;dbg.location(6598,41);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
						        }
					       		add(
					       			current, 
					       			"constraints",
					        		lv_constraints_1_0, 
					        		"JvmUpperBound");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(6611,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6611:2: ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
					try { dbg.enterSubRule(131);

					loop131:
					while (true) {
						int alt131=2;
						try { dbg.enterDecision(131, decisionCanBacktrack[131]);

						int LA131_0 = input.LA(1);
						if ( (LA131_0==24) ) {
							alt131=1;
						}

						} finally {dbg.exitDecision(131);}

						switch (alt131) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6612:3: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
							{
							dbg.location(6612,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6612:3: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6613:3: lv_constraints_2_0= ruleJvmUpperBoundAnded
							{
							dbg.location(6613,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_1_1_0()); 
								    }dbg.location(6616,21);
							pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_ruleJvmTypeParameter15263);
							lv_constraints_2_0=ruleJvmUpperBoundAnded();
							state._fsp--;
							if (state.failed) return current;dbg.location(6616,46);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
								        }
							       		add(
							       			current, 
							       			"constraints",
							        		lv_constraints_2_0, 
							        		"JvmUpperBoundAnded");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							break;

						default :
							break loop131;
						}
					}
					} finally {dbg.exitSubRule(131);}

					}
					break;

			}
			} finally {dbg.exitSubRule(132);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6630, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleJvmTypeParameter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleJvmTypeParameter"



	// $ANTLR start "entryRuleXImportSection1"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6639:1: entryRuleXImportSection1 returns [EObject current=null] :iv_ruleXImportSection1= ruleXImportSection1 EOF ;
	public final EObject entryRuleXImportSection1() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXImportSection1 =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXImportSection1");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6639, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6640:2: (iv_ruleXImportSection1= ruleXImportSection1 EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6641:2: iv_ruleXImportSection1= ruleXImportSection1 EOF
			{
			dbg.location(6641,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXImportSection1Rule()); }dbg.location(6642,25);
			pushFollow(FOLLOW_ruleXImportSection1_in_entryRuleXImportSection115304);
			iv_ruleXImportSection1=ruleXImportSection1();
			state._fsp--;
			if (state.failed) return current;dbg.location(6643,3);
			if ( state.backtracking==0 ) { current =iv_ruleXImportSection1; }dbg.location(6644,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXImportSection115314); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6645, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXImportSection1");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXImportSection1"



	// $ANTLR start "ruleXImportSection1"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6648:1: ruleXImportSection1 returns [EObject current=null] : ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration1 ) ) (otherlv_1= ';' )? )+ ;
	public final EObject ruleXImportSection1() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		EObject lv_importDeclarations_0_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXImportSection1");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6648, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6651:28: ( ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration1 ) ) (otherlv_1= ';' )? )+ )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6652:2: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration1 ) ) (otherlv_1= ';' )? )+
			{
			dbg.location(6652,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6652:2: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration1 ) ) (otherlv_1= ';' )? )+
			int cnt134=0;
			try { dbg.enterSubRule(134);

			loop134:
			while (true) {
				int alt134=2;
				try { dbg.enterDecision(134, decisionCanBacktrack[134]);

				int LA134_0 = input.LA(1);
				if ( (LA134_0==75) ) {
					alt134=1;
				}

				} finally {dbg.exitDecision(134);}

				switch (alt134) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6652:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration1 ) ) (otherlv_1= ';' )?
					{
					dbg.location(6652,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6652:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration1 ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6653:3: (lv_importDeclarations_0_0= ruleXImportDeclaration1 )
					{
					dbg.location(6653,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6653:3: (lv_importDeclarations_0_0= ruleXImportDeclaration1 )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6654:3: lv_importDeclarations_0_0= ruleXImportDeclaration1
					{
					dbg.location(6654,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXImportSection1Access().getImportDeclarationsXImportDeclaration1ParserRuleCall_0_0()); 
						    }dbg.location(6657,28);
					pushFollow(FOLLOW_ruleXImportDeclaration1_in_ruleXImportSection115360);
					lv_importDeclarations_0_0=ruleXImportDeclaration1();
					state._fsp--;
					if (state.failed) return current;dbg.location(6657,54);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXImportSection1Rule());
						        }
					       		add(
					       			current, 
					       			"importDeclarations",
					        		lv_importDeclarations_0_0, 
					        		"XImportDeclaration1");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(6670,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6670:2: (otherlv_1= ';' )?
					int alt133=2;
					try { dbg.enterSubRule(133);
					try { dbg.enterDecision(133, decisionCanBacktrack[133]);

					int LA133_0 = input.LA(1);
					if ( (LA133_0==44) ) {
						alt133=1;
					}
					} finally {dbg.exitDecision(133);}

					switch (alt133) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6670:4: otherlv_1= ';'
							{
							dbg.location(6670,13);
							otherlv_1=(Token)match(input,44,FOLLOW_44_in_ruleXImportSection115373); if (state.failed) return current;dbg.location(6671,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_1, grammarAccess.getXImportSection1Access().getSemicolonKeyword_1());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(133);}

					}
					break;

				default :
					if ( cnt134 >= 1 ) break loop134;
					if (state.backtracking>0) {state.failed=true; return current;}
					EarlyExitException eee = new EarlyExitException(134, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt134++;
			}
			} finally {dbg.exitSubRule(134);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6675, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXImportSection1");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXImportSection1"



	// $ANTLR start "entryRuleXImportDeclaration1"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6682:1: entryRuleXImportDeclaration1 returns [EObject current=null] :iv_ruleXImportDeclaration1= ruleXImportDeclaration1 EOF ;
	public final EObject entryRuleXImportDeclaration1() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXImportDeclaration1 =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXImportDeclaration1");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6682, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6683:2: (iv_ruleXImportDeclaration1= ruleXImportDeclaration1 EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6684:2: iv_ruleXImportDeclaration1= ruleXImportDeclaration1 EOF
			{
			dbg.location(6684,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXImportDeclaration1Rule()); }dbg.location(6685,29);
			pushFollow(FOLLOW_ruleXImportDeclaration1_in_entryRuleXImportDeclaration115412);
			iv_ruleXImportDeclaration1=ruleXImportDeclaration1();
			state._fsp--;
			if (state.failed) return current;dbg.location(6686,3);
			if ( state.backtracking==0 ) { current =iv_ruleXImportDeclaration1; }dbg.location(6687,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXImportDeclaration115422); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6688, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXImportDeclaration1");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXImportDeclaration1"



	// $ANTLR start "ruleXImportDeclaration1"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6691:1: ruleXImportDeclaration1 returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) ) | (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) ) ) ) ;
	public final EObject ruleXImportDeclaration1() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		Token otherlv_3=null;
		Token otherlv_5=null;
		Token otherlv_7=null;
		Token lv_importURI_8_0=null;
		Token otherlv_9=null;
		Token lv_importURI_10_0=null;
		Token otherlv_11=null;
		Token lv_alias_12_0=null;
		EObject lv_importItems_2_0 =null;
		EObject lv_importItems_4_0 =null;
		EObject lv_importItems_6_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXImportDeclaration1");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6691, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6694:28: ( (otherlv_0= 'import' ( ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) ) | (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6695:3: (otherlv_0= 'import' ( ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) ) | (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) ) ) )
			{
			dbg.location(6695,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6695:3: (otherlv_0= 'import' ( ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) ) | (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6695:3: otherlv_0= 'import' ( ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) ) | (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) ) )
			{
			dbg.location(6695,12);
			otherlv_0=(Token)match(input,75,FOLLOW_75_in_ruleXImportDeclaration115459); if (state.failed) return current;dbg.location(6696,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getXImportDeclaration1Access().getImportKeyword_0());
			    }dbg.location(6699,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:2: ( ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) ) | (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) ) )
			int alt137=2;
			try { dbg.enterSubRule(137);
			try { dbg.enterDecision(137, decisionCanBacktrack[137]);

			int LA137_0 = input.LA(1);
			if ( (LA137_0==RULE_ID||LA137_0==88) ) {
				alt137=1;
			}
			else if ( (LA137_0==71) ) {
				alt137=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 137, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(137);}

			switch (alt137) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:2: ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) )
					{
					dbg.location(6699,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:2: ( ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:3: ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) ) otherlv_7= 'from' ( (lv_importURI_8_0= RULE_STRING ) )
					{
					dbg.location(6699,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:3: ( (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' ) | ( (lv_importItems_6_0= ruleXImportItem ) ) )
					int alt136=2;
					try { dbg.enterSubRule(136);
					try { dbg.enterDecision(136, decisionCanBacktrack[136]);

					int LA136_0 = input.LA(1);
					if ( (LA136_0==88) ) {
						alt136=1;
					}
					else if ( (LA136_0==RULE_ID) ) {
						alt136=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return current;}
						NoViableAltException nvae =
							new NoViableAltException("", 136, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(136);}

					switch (alt136) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:4: (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' )
							{
							dbg.location(6699,4);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:4: (otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}' )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6699:6: otherlv_1= '{' ( (lv_importItems_2_0= ruleXImportItem ) ) (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )* otherlv_5= '}'
							{
							dbg.location(6699,15);
							otherlv_1=(Token)match(input,88,FOLLOW_88_in_ruleXImportDeclaration115475); if (state.failed) return current;dbg.location(6700,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_1, grammarAccess.getXImportDeclaration1Access().getLeftCurlyBracketKeyword_1_0_0_0_0());
							    }dbg.location(6703,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6703:3: ( (lv_importItems_2_0= ruleXImportItem ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6704:3: (lv_importItems_2_0= ruleXImportItem )
							{
							dbg.location(6704,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6704:3: (lv_importItems_2_0= ruleXImportItem )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6705:3: lv_importItems_2_0= ruleXImportItem
							{
							dbg.location(6705,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXImportDeclaration1Access().getImportItemsXImportItemParserRuleCall_1_0_0_0_1_0()); 
								    }dbg.location(6708,21);
							pushFollow(FOLLOW_ruleXImportItem_in_ruleXImportDeclaration115496);
							lv_importItems_2_0=ruleXImportItem();
							state._fsp--;
							if (state.failed) return current;dbg.location(6708,39);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXImportDeclaration1Rule());
								        }
							       		add(
							       			current, 
							       			"importItems",
							        		lv_importItems_2_0, 
							        		"XImportItem");
								        afterParserOrEnumRuleCall();
								    }
							}

							}
							dbg.location(6721,2);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6721:2: (otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) ) )*
							try { dbg.enterSubRule(135);

							loop135:
							while (true) {
								int alt135=2;
								try { dbg.enterDecision(135, decisionCanBacktrack[135]);

								int LA135_0 = input.LA(1);
								if ( (LA135_0==33) ) {
									alt135=1;
								}

								} finally {dbg.exitDecision(135);}

								switch (alt135) {
								case 1 :
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6721:4: otherlv_3= ',' ( (lv_importItems_4_0= ruleXImportItem ) )
									{
									dbg.location(6721,13);
									otherlv_3=(Token)match(input,33,FOLLOW_33_in_ruleXImportDeclaration115509); if (state.failed) return current;dbg.location(6722,5);
									if ( state.backtracking==0 ) {
									    	newLeafNode(otherlv_3, grammarAccess.getXImportDeclaration1Access().getCommaKeyword_1_0_0_0_2_0());
									    }dbg.location(6725,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6725:3: ( (lv_importItems_4_0= ruleXImportItem ) )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6726:3: (lv_importItems_4_0= ruleXImportItem )
									{
									dbg.location(6726,3);
									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6726:3: (lv_importItems_4_0= ruleXImportItem )
									dbg.enterAlt(1);

									// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6727:3: lv_importItems_4_0= ruleXImportItem
									{
									dbg.location(6727,3);
									if ( state.backtracking==0 ) { 
										        newCompositeNode(grammarAccess.getXImportDeclaration1Access().getImportItemsXImportItemParserRuleCall_1_0_0_0_2_1_0()); 
										    }dbg.location(6730,21);
									pushFollow(FOLLOW_ruleXImportItem_in_ruleXImportDeclaration115530);
									lv_importItems_4_0=ruleXImportItem();
									state._fsp--;
									if (state.failed) return current;dbg.location(6730,39);
									if ( state.backtracking==0 ) {
										        if (current==null) {
										            current = createModelElementForParent(grammarAccess.getXImportDeclaration1Rule());
										        }
									       		add(
									       			current, 
									       			"importItems",
									        		lv_importItems_4_0, 
									        		"XImportItem");
										        afterParserOrEnumRuleCall();
										    }
									}

									}

									}
									break;

								default :
									break loop135;
								}
							}
							} finally {dbg.exitSubRule(135);}
							dbg.location(6743,14);
							otherlv_5=(Token)match(input,92,FOLLOW_92_in_ruleXImportDeclaration115544); if (state.failed) return current;dbg.location(6744,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_5, grammarAccess.getXImportDeclaration1Access().getRightCurlyBracketKeyword_1_0_0_0_3());
							    }
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6748:6: ( (lv_importItems_6_0= ruleXImportItem ) )
							{
							dbg.location(6748,6);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6748:6: ( (lv_importItems_6_0= ruleXImportItem ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6749:3: (lv_importItems_6_0= ruleXImportItem )
							{
							dbg.location(6749,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6749:3: (lv_importItems_6_0= ruleXImportItem )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6750:3: lv_importItems_6_0= ruleXImportItem
							{
							dbg.location(6750,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXImportDeclaration1Access().getImportItemsXImportItemParserRuleCall_1_0_0_1_0()); 
								    }dbg.location(6753,21);
							pushFollow(FOLLOW_ruleXImportItem_in_ruleXImportDeclaration115572);
							lv_importItems_6_0=ruleXImportItem();
							state._fsp--;
							if (state.failed) return current;dbg.location(6753,39);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXImportDeclaration1Rule());
								        }
							       		add(
							       			current, 
							       			"importItems",
							        		lv_importItems_6_0, 
							        		"XImportItem");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

					}
					} finally {dbg.exitSubRule(136);}
					dbg.location(6766,13);
					otherlv_7=(Token)match(input,71,FOLLOW_71_in_ruleXImportDeclaration115585); if (state.failed) return current;dbg.location(6767,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_7, grammarAccess.getXImportDeclaration1Access().getFromKeyword_1_0_1());
					    }dbg.location(6770,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6770:3: ( (lv_importURI_8_0= RULE_STRING ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6771:3: (lv_importURI_8_0= RULE_STRING )
					{
					dbg.location(6771,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6771:3: (lv_importURI_8_0= RULE_STRING )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6772:3: lv_importURI_8_0= RULE_STRING
					{
					dbg.location(6772,19);
					lv_importURI_8_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXImportDeclaration115602); if (state.failed) return current;dbg.location(6773,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_importURI_8_0, grammarAccess.getXImportDeclaration1Access().getImportURISTRINGTerminalRuleCall_1_0_2_0()); 
							}dbg.location(6776,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXImportDeclaration1Rule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"importURI",
					        		lv_importURI_8_0, 
					        		"STRING");
						    }
					}

					}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6789:6: (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) )
					{
					dbg.location(6789,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6789:6: (otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6789:8: otherlv_9= 'from' ( (lv_importURI_10_0= RULE_STRING ) ) otherlv_11= 'as' ( (lv_alias_12_0= RULE_ID ) )
					{
					dbg.location(6789,17);
					otherlv_9=(Token)match(input,71,FOLLOW_71_in_ruleXImportDeclaration115627); if (state.failed) return current;dbg.location(6790,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_9, grammarAccess.getXImportDeclaration1Access().getFromKeyword_1_1_0());
					    }dbg.location(6793,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6793:3: ( (lv_importURI_10_0= RULE_STRING ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6794:3: (lv_importURI_10_0= RULE_STRING )
					{
					dbg.location(6794,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6794:3: (lv_importURI_10_0= RULE_STRING )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6795:3: lv_importURI_10_0= RULE_STRING
					{
					dbg.location(6795,20);
					lv_importURI_10_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXImportDeclaration115644); if (state.failed) return current;dbg.location(6796,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_importURI_10_0, grammarAccess.getXImportDeclaration1Access().getImportURISTRINGTerminalRuleCall_1_1_1_0()); 
							}dbg.location(6799,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXImportDeclaration1Rule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"importURI",
					        		lv_importURI_10_0, 
					        		"STRING");
						    }
					}

					}
					dbg.location(6811,13);
					otherlv_11=(Token)match(input,62,FOLLOW_62_in_ruleXImportDeclaration115661); if (state.failed) return current;dbg.location(6812,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_11, grammarAccess.getXImportDeclaration1Access().getAsKeyword_1_1_2());
					    }dbg.location(6815,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6815:3: ( (lv_alias_12_0= RULE_ID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6816:3: (lv_alias_12_0= RULE_ID )
					{
					dbg.location(6816,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6816:3: (lv_alias_12_0= RULE_ID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6817:3: lv_alias_12_0= RULE_ID
					{
					dbg.location(6817,16);
					lv_alias_12_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXImportDeclaration115678); if (state.failed) return current;dbg.location(6818,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_alias_12_0, grammarAccess.getXImportDeclaration1Access().getAliasIDTerminalRuleCall_1_1_3_0()); 
							}dbg.location(6821,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXImportDeclaration1Rule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"alias",
					        		lv_alias_12_0, 
					        		"ID");
						    }
					}

					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(137);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6834, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXImportDeclaration1");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXImportDeclaration1"



	// $ANTLR start "entryRuleXImportItem"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6841:1: entryRuleXImportItem returns [EObject current=null] :iv_ruleXImportItem= ruleXImportItem EOF ;
	public final EObject entryRuleXImportItem() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXImportItem =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXImportItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6841, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6842:2: (iv_ruleXImportItem= ruleXImportItem EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6843:2: iv_ruleXImportItem= ruleXImportItem EOF
			{
			dbg.location(6843,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXImportItemRule()); }dbg.location(6844,21);
			pushFollow(FOLLOW_ruleXImportItem_in_entryRuleXImportItem15721);
			iv_ruleXImportItem=ruleXImportItem();
			state._fsp--;
			if (state.failed) return current;dbg.location(6845,3);
			if ( state.backtracking==0 ) { current =iv_ruleXImportItem; }dbg.location(6846,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXImportItem15731); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6847, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXImportItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXImportItem"



	// $ANTLR start "ruleXImportItem"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6850:1: ruleXImportItem returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) (otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) ) )? ) ;
	public final EObject ruleXImportItem() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		Token otherlv_2=null;
		Token lv_alias_3_0=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXImportItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6850, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6853:28: ( ( () ( (otherlv_1= RULE_ID ) ) (otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6854:2: ( () ( (otherlv_1= RULE_ID ) ) (otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) ) )? )
			{
			dbg.location(6854,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6854:2: ( () ( (otherlv_1= RULE_ID ) ) (otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6854:2: () ( (otherlv_1= RULE_ID ) ) (otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) ) )?
			{
			dbg.location(6854,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6854:2: ()
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6855:5: 
			{
			dbg.location(6855,5);
			if ( state.backtracking==0 ) {
			        current = forceCreateModelElement(
			            grammarAccess.getXImportItemAccess().getXImportItemAction_0(),
			            current);
			    }
			}
			dbg.location(6860,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6860:2: ( (otherlv_1= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6861:3: (otherlv_1= RULE_ID )
			{
			dbg.location(6861,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6861:3: (otherlv_1= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6862:3: otherlv_1= RULE_ID
			{
			dbg.location(6862,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getXImportItemRule());
				        }
			        }dbg.location(6867,11);
			otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXImportItem15785); if (state.failed) return current;dbg.location(6868,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_1, grammarAccess.getXImportItemAccess().getImportedIdJvmIdentifiableElementCrossReference_1_0()); 
				}
			}

			}
			dbg.location(6873,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6873:2: (otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) ) )?
			int alt138=2;
			try { dbg.enterSubRule(138);
			try { dbg.enterDecision(138, decisionCanBacktrack[138]);

			int LA138_0 = input.LA(1);
			if ( (LA138_0==62) ) {
				alt138=1;
			}
			} finally {dbg.exitDecision(138);}

			switch (alt138) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6873:4: otherlv_2= 'as' ( (lv_alias_3_0= RULE_ID ) )
					{
					dbg.location(6873,13);
					otherlv_2=(Token)match(input,62,FOLLOW_62_in_ruleXImportItem15798); if (state.failed) return current;dbg.location(6874,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_2, grammarAccess.getXImportItemAccess().getAsKeyword_2_0());
					    }dbg.location(6877,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6877:3: ( (lv_alias_3_0= RULE_ID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6878:3: (lv_alias_3_0= RULE_ID )
					{
					dbg.location(6878,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6878:3: (lv_alias_3_0= RULE_ID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6879:3: lv_alias_3_0= RULE_ID
					{
					dbg.location(6879,15);
					lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXImportItem15815); if (state.failed) return current;dbg.location(6880,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_alias_3_0, grammarAccess.getXImportItemAccess().getAliasIDTerminalRuleCall_2_1_0()); 
							}dbg.location(6883,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXImportItemRule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"alias",
					        		lv_alias_3_0, 
					        		"ID");
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(138);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6896, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXImportItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXImportItem"



	// $ANTLR start "entryRuleXExportSection"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6903:1: entryRuleXExportSection returns [EObject current=null] :iv_ruleXExportSection= ruleXExportSection EOF ;
	public final EObject entryRuleXExportSection() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXExportSection =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXExportSection");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6903, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6904:2: (iv_ruleXExportSection= ruleXExportSection EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6905:2: iv_ruleXExportSection= ruleXExportSection EOF
			{
			dbg.location(6905,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXExportSectionRule()); }dbg.location(6906,24);
			pushFollow(FOLLOW_ruleXExportSection_in_entryRuleXExportSection15858);
			iv_ruleXExportSection=ruleXExportSection();
			state._fsp--;
			if (state.failed) return current;dbg.location(6907,3);
			if ( state.backtracking==0 ) { current =iv_ruleXExportSection; }dbg.location(6908,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXExportSection15868); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6909, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXExportSection");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXExportSection"



	// $ANTLR start "ruleXExportSection"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6912:1: ruleXExportSection returns [EObject current=null] : ( ( (lv_exportDeclarations_0_0= ruleXExportDeclaration ) ) (otherlv_1= ';' )? )+ ;
	public final EObject ruleXExportSection() throws RecognitionException {
		EObject current = null;


		Token otherlv_1=null;
		EObject lv_exportDeclarations_0_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXExportSection");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6912, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6915:28: ( ( ( (lv_exportDeclarations_0_0= ruleXExportDeclaration ) ) (otherlv_1= ';' )? )+ )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6916:2: ( ( (lv_exportDeclarations_0_0= ruleXExportDeclaration ) ) (otherlv_1= ';' )? )+
			{
			dbg.location(6916,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6916:2: ( ( (lv_exportDeclarations_0_0= ruleXExportDeclaration ) ) (otherlv_1= ';' )? )+
			int cnt140=0;
			try { dbg.enterSubRule(140);

			loop140:
			while (true) {
				int alt140=2;
				try { dbg.enterDecision(140, decisionCanBacktrack[140]);

				int LA140_0 = input.LA(1);
				if ( (LA140_0==68) ) {
					alt140=1;
				}

				} finally {dbg.exitDecision(140);}

				switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6916:2: ( (lv_exportDeclarations_0_0= ruleXExportDeclaration ) ) (otherlv_1= ';' )?
					{
					dbg.location(6916,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6916:2: ( (lv_exportDeclarations_0_0= ruleXExportDeclaration ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6917:3: (lv_exportDeclarations_0_0= ruleXExportDeclaration )
					{
					dbg.location(6917,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6917:3: (lv_exportDeclarations_0_0= ruleXExportDeclaration )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6918:3: lv_exportDeclarations_0_0= ruleXExportDeclaration
					{
					dbg.location(6918,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXExportSectionAccess().getExportDeclarationsXExportDeclarationParserRuleCall_0_0()); 
						    }dbg.location(6921,28);
					pushFollow(FOLLOW_ruleXExportDeclaration_in_ruleXExportSection15914);
					lv_exportDeclarations_0_0=ruleXExportDeclaration();
					state._fsp--;
					if (state.failed) return current;dbg.location(6921,53);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXExportSectionRule());
						        }
					       		add(
					       			current, 
					       			"exportDeclarations",
					        		lv_exportDeclarations_0_0, 
					        		"XExportDeclaration");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(6934,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6934:2: (otherlv_1= ';' )?
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( (LA139_0==44) ) {
						alt139=1;
					}
					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6934:4: otherlv_1= ';'
							{
							dbg.location(6934,13);
							otherlv_1=(Token)match(input,44,FOLLOW_44_in_ruleXExportSection15927); if (state.failed) return current;dbg.location(6935,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_1, grammarAccess.getXExportSectionAccess().getSemicolonKeyword_1());
							    }
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}

					}
					break;

				default :
					if ( cnt140 >= 1 ) break loop140;
					if (state.backtracking>0) {state.failed=true; return current;}
					EarlyExitException eee = new EarlyExitException(140, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt140++;
			}
			} finally {dbg.exitSubRule(140);}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6939, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXExportSection");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXExportSection"



	// $ANTLR start "entryRuleXExportDeclaration"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6946:1: entryRuleXExportDeclaration returns [EObject current=null] :iv_ruleXExportDeclaration= ruleXExportDeclaration EOF ;
	public final EObject entryRuleXExportDeclaration() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXExportDeclaration =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXExportDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6946, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6947:2: (iv_ruleXExportDeclaration= ruleXExportDeclaration EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6948:2: iv_ruleXExportDeclaration= ruleXExportDeclaration EOF
			{
			dbg.location(6948,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXExportDeclarationRule()); }dbg.location(6949,28);
			pushFollow(FOLLOW_ruleXExportDeclaration_in_entryRuleXExportDeclaration15966);
			iv_ruleXExportDeclaration=ruleXExportDeclaration();
			state._fsp--;
			if (state.failed) return current;dbg.location(6950,3);
			if ( state.backtracking==0 ) { current =iv_ruleXExportDeclaration; }dbg.location(6951,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXExportDeclaration15976); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(6952, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXExportDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXExportDeclaration"



	// $ANTLR start "ruleXExportDeclaration"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6955:1: ruleXExportDeclaration returns [EObject current=null] : (otherlv_0= 'export' ( (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? ) | (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) ) ) ) ;
	public final EObject ruleXExportDeclaration() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		Token otherlv_3=null;
		Token otherlv_5=null;
		Token otherlv_6=null;
		Token lv_importURI_7_0=null;
		Token otherlv_8=null;
		Token lv_importURI_9_0=null;
		Token otherlv_10=null;
		Token lv_alias_11_0=null;
		EObject lv_exportItems_2_0 =null;
		EObject lv_exportItems_4_0 =null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXExportDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(6955, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6958:28: ( (otherlv_0= 'export' ( (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? ) | (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6959:3: (otherlv_0= 'export' ( (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? ) | (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) ) ) )
			{
			dbg.location(6959,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6959:3: (otherlv_0= 'export' ( (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? ) | (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) ) ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6959:3: otherlv_0= 'export' ( (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? ) | (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) ) )
			{
			dbg.location(6959,12);
			otherlv_0=(Token)match(input,68,FOLLOW_68_in_ruleXExportDeclaration16013); if (state.failed) return current;dbg.location(6960,5);
			if ( state.backtracking==0 ) {
			    	newLeafNode(otherlv_0, grammarAccess.getXExportDeclarationAccess().getExportKeyword_0());
			    }dbg.location(6963,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6963:2: ( (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? ) | (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) ) )
			int alt143=2;
			try { dbg.enterSubRule(143);
			try { dbg.enterDecision(143, decisionCanBacktrack[143]);

			int LA143_0 = input.LA(1);
			if ( (LA143_0==88) ) {
				alt143=1;
			}
			else if ( (LA143_0==71) ) {
				alt143=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return current;}
				NoViableAltException nvae =
					new NoViableAltException("", 143, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(143);}

			switch (alt143) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6963:2: (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? )
					{
					dbg.location(6963,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6963:2: (otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )? )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6963:4: otherlv_1= '{' ( (lv_exportItems_2_0= ruleXExportItem ) ) (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )* otherlv_5= '}' (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )?
					{
					dbg.location(6963,13);
					otherlv_1=(Token)match(input,88,FOLLOW_88_in_ruleXExportDeclaration16027); if (state.failed) return current;dbg.location(6964,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_1, grammarAccess.getXExportDeclarationAccess().getLeftCurlyBracketKeyword_1_0_0());
					    }dbg.location(6967,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6967:3: ( (lv_exportItems_2_0= ruleXExportItem ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6968:3: (lv_exportItems_2_0= ruleXExportItem )
					{
					dbg.location(6968,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6968:3: (lv_exportItems_2_0= ruleXExportItem )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6969:3: lv_exportItems_2_0= ruleXExportItem
					{
					dbg.location(6969,3);
					if ( state.backtracking==0 ) { 
						        newCompositeNode(grammarAccess.getXExportDeclarationAccess().getExportItemsXExportItemParserRuleCall_1_0_1_0()); 
						    }dbg.location(6972,21);
					pushFollow(FOLLOW_ruleXExportItem_in_ruleXExportDeclaration16048);
					lv_exportItems_2_0=ruleXExportItem();
					state._fsp--;
					if (state.failed) return current;dbg.location(6972,39);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElementForParent(grammarAccess.getXExportDeclarationRule());
						        }
					       		add(
					       			current, 
					       			"exportItems",
					        		lv_exportItems_2_0, 
					        		"XExportItem");
						        afterParserOrEnumRuleCall();
						    }
					}

					}
					dbg.location(6985,2);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6985:2: (otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) ) )*
					try { dbg.enterSubRule(141);

					loop141:
					while (true) {
						int alt141=2;
						try { dbg.enterDecision(141, decisionCanBacktrack[141]);

						int LA141_0 = input.LA(1);
						if ( (LA141_0==33) ) {
							alt141=1;
						}

						} finally {dbg.exitDecision(141);}

						switch (alt141) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6985:4: otherlv_3= ',' ( (lv_exportItems_4_0= ruleXExportItem ) )
							{
							dbg.location(6985,13);
							otherlv_3=(Token)match(input,33,FOLLOW_33_in_ruleXExportDeclaration16061); if (state.failed) return current;dbg.location(6986,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_3, grammarAccess.getXExportDeclarationAccess().getCommaKeyword_1_0_2_0());
							    }dbg.location(6989,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6989:3: ( (lv_exportItems_4_0= ruleXExportItem ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6990:3: (lv_exportItems_4_0= ruleXExportItem )
							{
							dbg.location(6990,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6990:3: (lv_exportItems_4_0= ruleXExportItem )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6991:3: lv_exportItems_4_0= ruleXExportItem
							{
							dbg.location(6991,3);
							if ( state.backtracking==0 ) { 
								        newCompositeNode(grammarAccess.getXExportDeclarationAccess().getExportItemsXExportItemParserRuleCall_1_0_2_1_0()); 
								    }dbg.location(6994,21);
							pushFollow(FOLLOW_ruleXExportItem_in_ruleXExportDeclaration16082);
							lv_exportItems_4_0=ruleXExportItem();
							state._fsp--;
							if (state.failed) return current;dbg.location(6994,39);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElementForParent(grammarAccess.getXExportDeclarationRule());
								        }
							       		add(
							       			current, 
							       			"exportItems",
							        		lv_exportItems_4_0, 
							        		"XExportItem");
								        afterParserOrEnumRuleCall();
								    }
							}

							}

							}
							break;

						default :
							break loop141;
						}
					}
					} finally {dbg.exitSubRule(141);}
					dbg.location(7007,14);
					otherlv_5=(Token)match(input,92,FOLLOW_92_in_ruleXExportDeclaration16096); if (state.failed) return current;dbg.location(7008,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_5, grammarAccess.getXExportDeclarationAccess().getRightCurlyBracketKeyword_1_0_3());
					    }dbg.location(7011,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7011:3: (otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) ) )?
					int alt142=2;
					try { dbg.enterSubRule(142);
					try { dbg.enterDecision(142, decisionCanBacktrack[142]);

					int LA142_0 = input.LA(1);
					if ( (LA142_0==71) ) {
						alt142=1;
					}
					} finally {dbg.exitDecision(142);}

					switch (alt142) {
						case 1 :
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7011:3: otherlv_6= 'from' ( (lv_importURI_7_0= RULE_STRING ) )
							{
							dbg.location(7011,12);
							otherlv_6=(Token)match(input,71,FOLLOW_71_in_ruleXExportDeclaration16109); if (state.failed) return current;dbg.location(7012,5);
							if ( state.backtracking==0 ) {
							    	newLeafNode(otherlv_6, grammarAccess.getXExportDeclarationAccess().getFromKeyword_1_0_4_0());
							    }dbg.location(7015,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7015:3: ( (lv_importURI_7_0= RULE_STRING ) )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7016:3: (lv_importURI_7_0= RULE_STRING )
							{
							dbg.location(7016,3);
							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7016:3: (lv_importURI_7_0= RULE_STRING )
							dbg.enterAlt(1);

							// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7017:3: lv_importURI_7_0= RULE_STRING
							{
							dbg.location(7017,19);
							lv_importURI_7_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXExportDeclaration16126); if (state.failed) return current;dbg.location(7018,3);
							if ( state.backtracking==0 ) {
										newLeafNode(lv_importURI_7_0, grammarAccess.getXExportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0_4_1_0()); 
									}dbg.location(7021,3);
							if ( state.backtracking==0 ) {
								        if (current==null) {
								            current = createModelElement(grammarAccess.getXExportDeclarationRule());
								        }
							       		setWithLastConsumed(
							       			current, 
							       			"importURI",
							        		lv_importURI_7_0, 
							        		"STRING");
								    }
							}

							}

							}
							break;

					}
					} finally {dbg.exitSubRule(142);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7034:6: (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) )
					{
					dbg.location(7034,6);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7034:6: (otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7034:8: otherlv_8= 'from' ( (lv_importURI_9_0= RULE_STRING ) ) otherlv_10= 'as' ( (lv_alias_11_0= RULE_ID ) )
					{
					dbg.location(7034,17);
					otherlv_8=(Token)match(input,71,FOLLOW_71_in_ruleXExportDeclaration16153); if (state.failed) return current;dbg.location(7035,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_8, grammarAccess.getXExportDeclarationAccess().getFromKeyword_1_1_0());
					    }dbg.location(7038,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7038:3: ( (lv_importURI_9_0= RULE_STRING ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7039:3: (lv_importURI_9_0= RULE_STRING )
					{
					dbg.location(7039,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7039:3: (lv_importURI_9_0= RULE_STRING )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7040:3: lv_importURI_9_0= RULE_STRING
					{
					dbg.location(7040,19);
					lv_importURI_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXExportDeclaration16170); if (state.failed) return current;dbg.location(7041,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_importURI_9_0, grammarAccess.getXExportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_1_1_0()); 
							}dbg.location(7044,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXExportDeclarationRule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"importURI",
					        		lv_importURI_9_0, 
					        		"STRING");
						    }
					}

					}
					dbg.location(7056,13);
					otherlv_10=(Token)match(input,62,FOLLOW_62_in_ruleXExportDeclaration16187); if (state.failed) return current;dbg.location(7057,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_10, grammarAccess.getXExportDeclarationAccess().getAsKeyword_1_1_2());
					    }dbg.location(7060,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7060:3: ( (lv_alias_11_0= RULE_ID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7061:3: (lv_alias_11_0= RULE_ID )
					{
					dbg.location(7061,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7061:3: (lv_alias_11_0= RULE_ID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7062:3: lv_alias_11_0= RULE_ID
					{
					dbg.location(7062,16);
					lv_alias_11_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXExportDeclaration16204); if (state.failed) return current;dbg.location(7063,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_alias_11_0, grammarAccess.getXExportDeclarationAccess().getAliasIDTerminalRuleCall_1_1_3_0()); 
							}dbg.location(7066,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXExportDeclarationRule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"alias",
					        		lv_alias_11_0, 
					        		"ID");
						    }
					}

					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(143);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(7079, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXExportDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXExportDeclaration"



	// $ANTLR start "entryRuleXExportItem"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7086:1: entryRuleXExportItem returns [EObject current=null] :iv_ruleXExportItem= ruleXExportItem EOF ;
	public final EObject entryRuleXExportItem() throws RecognitionException {
		EObject current = null;


		EObject iv_ruleXExportItem =null;

		try { dbg.enterRule(getGrammarFileName(), "entryRuleXExportItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(7086, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7087:2: (iv_ruleXExportItem= ruleXExportItem EOF )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7088:2: iv_ruleXExportItem= ruleXExportItem EOF
			{
			dbg.location(7088,2);
			if ( state.backtracking==0 ) { newCompositeNode(grammarAccess.getXExportItemRule()); }dbg.location(7089,21);
			pushFollow(FOLLOW_ruleXExportItem_in_entryRuleXExportItem16247);
			iv_ruleXExportItem=ruleXExportItem();
			state._fsp--;
			if (state.failed) return current;dbg.location(7090,3);
			if ( state.backtracking==0 ) { current =iv_ruleXExportItem; }dbg.location(7091,3);
			match(input,EOF,FOLLOW_EOF_in_entryRuleXExportItem16257); if (state.failed) return current;
			}

		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(7092, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "entryRuleXExportItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "entryRuleXExportItem"



	// $ANTLR start "ruleXExportItem"
	// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7095:1: ruleXExportItem returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) ) )? ) ;
	public final EObject ruleXExportItem() throws RecognitionException {
		EObject current = null;


		Token otherlv_0=null;
		Token otherlv_1=null;
		Token lv_alias_2_0=null;

		 enterRule(); 
		    
		try { dbg.enterRule(getGrammarFileName(), "ruleXExportItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(7095, 0);

		try {
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7098:28: ( ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) ) )? ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7099:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) ) )? )
			{
			dbg.location(7099,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7099:2: ( ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) ) )? )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7099:2: ( (otherlv_0= RULE_ID ) ) (otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) ) )?
			{
			dbg.location(7099,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7099:2: ( (otherlv_0= RULE_ID ) )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7100:3: (otherlv_0= RULE_ID )
			{
			dbg.location(7100,3);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7100:3: (otherlv_0= RULE_ID )
			dbg.enterAlt(1);

			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7101:3: otherlv_0= RULE_ID
			{
			dbg.location(7101,3);
			if ( state.backtracking==0 ) {
						if (current==null) {
				            current = createModelElement(grammarAccess.getXExportItemRule());
				        }
			        }dbg.location(7106,11);
			otherlv_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXExportItem16302); if (state.failed) return current;dbg.location(7107,2);
			if ( state.backtracking==0 ) {
					newLeafNode(otherlv_0, grammarAccess.getXExportItemAccess().getExportedIdJvmIdentifiableElementCrossReference_0_0()); 
				}
			}

			}
			dbg.location(7112,2);
			// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7112:2: (otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) ) )?
			int alt144=2;
			try { dbg.enterSubRule(144);
			try { dbg.enterDecision(144, decisionCanBacktrack[144]);

			int LA144_0 = input.LA(1);
			if ( (LA144_0==62) ) {
				alt144=1;
			}
			} finally {dbg.exitDecision(144);}

			switch (alt144) {
				case 1 :
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7112:4: otherlv_1= 'as' ( (lv_alias_2_0= RULE_ID ) )
					{
					dbg.location(7112,13);
					otherlv_1=(Token)match(input,62,FOLLOW_62_in_ruleXExportItem16315); if (state.failed) return current;dbg.location(7113,5);
					if ( state.backtracking==0 ) {
					    	newLeafNode(otherlv_1, grammarAccess.getXExportItemAccess().getAsKeyword_1_0());
					    }dbg.location(7116,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7116:3: ( (lv_alias_2_0= RULE_ID ) )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7117:3: (lv_alias_2_0= RULE_ID )
					{
					dbg.location(7117,3);
					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7117:3: (lv_alias_2_0= RULE_ID )
					dbg.enterAlt(1);

					// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:7118:3: lv_alias_2_0= RULE_ID
					{
					dbg.location(7118,15);
					lv_alias_2_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXExportItem16332); if (state.failed) return current;dbg.location(7119,3);
					if ( state.backtracking==0 ) {
								newLeafNode(lv_alias_2_0, grammarAccess.getXExportItemAccess().getAliasIDTerminalRuleCall_1_1_0()); 
							}dbg.location(7122,3);
					if ( state.backtracking==0 ) {
						        if (current==null) {
						            current = createModelElement(grammarAccess.getXExportItemRule());
						        }
					       		setWithLastConsumed(
					       			current, 
					       			"alias",
					        		lv_alias_2_0, 
					        		"ID");
						    }
					}

					}

					}
					break;

			}
			} finally {dbg.exitSubRule(144);}

			}

			}

			if ( state.backtracking==0 ) { leaveRule(); }
		}
		 
		    catch (RecognitionException re) { 
		        recover(input,re); 
		        appendSkippedTokens();
		    } 

		finally {
			// do for sure before leaving
		}
		dbg.location(7135, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ruleXExportItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

		return current;
	}
	// $ANTLR end "ruleXExportItem"

	// $ANTLR start synpred1_InternalXAML
	public final void synpred1_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:4: ( ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:5: ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' )
		{
		dbg.location(268,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:5: ( ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' ) | '/>' )
		int alt146=2;
		try { dbg.enterSubRule(146);
		try { dbg.enterDecision(146, decisionCanBacktrack[146]);

		int LA146_0 = input.LA(1);
		if ( (LA146_0==52) ) {
			alt146=1;
		}
		else if ( (LA146_0==41) ) {
			alt146=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 146, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(146);}

		switch (alt146) {
			case 1 :
				dbg.enterAlt(1);

				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:6: ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' )
				{
				dbg.location(268,6);
				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:6: ( '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>' )
				dbg.enterAlt(1);

				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:268:8: '>' ( ( ruleElementContent ) )* '</' ( ( ruleJvmTypeReference ) ) '>'
				{
				dbg.location(268,8);
				match(input,52,FOLLOW_52_in_synpred1_InternalXAML494); if (state.failed) return;dbg.location(269,1);
				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:269:1: ( ( ruleElementContent ) )*
				try { dbg.enterSubRule(145);

				loop145:
				while (true) {
					int alt145=2;
					try { dbg.enterDecision(145, decisionCanBacktrack[145]);

					int LA145_0 = input.LA(1);
					if ( (LA145_0==45) ) {
						alt145=1;
					}

					} finally {dbg.exitDecision(145);}

					switch (alt145) {
					case 1 :
						dbg.enterAlt(1);

						// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:270:1: ( ruleElementContent )
						{
						dbg.location(270,1);
						// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:270:1: ( ruleElementContent )
						dbg.enterAlt(1);

						// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:271:1: ruleElementContent
						{
						dbg.location(271,1);
						pushFollow(FOLLOW_ruleElementContent_in_synpred1_InternalXAML501);
						ruleElementContent();
						state._fsp--;
						if (state.failed) return;
						}

						}
						break;

					default :
						break loop145;
					}
				}
				} finally {dbg.exitSubRule(145);}
				dbg.location(273,4);
				match(input,46,FOLLOW_46_in_synpred1_InternalXAML508); if (state.failed) return;dbg.location(274,1);
				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:274:1: ( ( ruleJvmTypeReference ) )
				dbg.enterAlt(1);

				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:275:1: ( ruleJvmTypeReference )
				{
				dbg.location(275,1);
				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:275:1: ( ruleJvmTypeReference )
				dbg.enterAlt(1);

				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:276:1: ruleJvmTypeReference
				{
				dbg.location(276,1);
				pushFollow(FOLLOW_ruleJvmTypeReference_in_synpred1_InternalXAML515);
				ruleJvmTypeReference();
				state._fsp--;
				if (state.failed) return;
				}

				}
				dbg.location(278,3);
				match(input,52,FOLLOW_52_in_synpred1_InternalXAML521); if (state.failed) return;
				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:280:7: '/>'
				{
				dbg.location(280,7);
				match(input,41,FOLLOW_41_in_synpred1_InternalXAML532); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(146);}

		}

	}
	// $ANTLR end synpred1_InternalXAML

	// $ANTLR start synpred3_InternalXAML
	public final void synpred3_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
		{
		dbg.location(2483,6);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:7: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
		{
		dbg.location(2483,7);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2483:7: ( ( ruleJvmTypeReference ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2484:1: ( ruleJvmTypeReference )
		{
		dbg.location(2484,1);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2484:1: ( ruleJvmTypeReference )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2485:1: ruleJvmTypeReference
		{
		dbg.location(2485,1);
		pushFollow(FOLLOW_ruleJvmTypeReference_in_synpred3_InternalXAML5176);
		ruleJvmTypeReference();
		state._fsp--;
		if (state.failed) return;
		}

		}
		dbg.location(2487,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2487:2: ( ( ruleValidID ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2488:1: ( ruleValidID )
		{
		dbg.location(2488,1);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2488:1: ( ruleValidID )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2489:1: ruleValidID
		{
		dbg.location(2489,1);
		pushFollow(FOLLOW_ruleValidID_in_synpred3_InternalXAML5185);
		ruleValidID();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred3_InternalXAML

	// $ANTLR start synpred4_InternalXAML
	public final void synpred4_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2616:4: ( '(' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2616:6: '('
		{
		dbg.location(2616,6);
		match(input,26,FOLLOW_26_in_synpred4_InternalXAML5423); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_InternalXAML

	// $ANTLR start synpred5_InternalXAML
	public final void synpred5_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:5: ( ( ( ( ruleValidID ) ) '=' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:6: ( ( ( ruleValidID ) ) '=' )
		{
		dbg.location(2621,6);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:6: ( ( ( ruleValidID ) ) '=' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:7: ( ( ruleValidID ) ) '='
		{
		dbg.location(2621,7);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2621:7: ( ( ruleValidID ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2622:3: ( ruleValidID )
		{
		dbg.location(2622,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2622:3: ( ruleValidID )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2623:3: ruleValidID
		{
		dbg.location(2623,3);
		pushFollow(FOLLOW_ruleValidID_in_synpred5_InternalXAML5452);
		ruleValidID();
		state._fsp--;
		if (state.failed) return;
		}

		}
		dbg.location(2625,3);
		match(input,48,FOLLOW_48_in_synpred5_InternalXAML5458); if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred5_InternalXAML

	// $ANTLR start synpred8_InternalXAML
	public final void synpred8_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:3: ( ( () ruleOpSingleAssign ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:4: ( () ruleOpSingleAssign )
		{
		dbg.location(2817,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:4: ( () ruleOpSingleAssign )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:5: () ruleOpSingleAssign
		{
		dbg.location(2817,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2817:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2818:5: 
		{
		}
		dbg.location(2818,3);
		pushFollow(FOLLOW_ruleOpSingleAssign_in_synpred8_InternalXAML5925);
		ruleOpSingleAssign();
		state._fsp--;
		if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred8_InternalXAML

	// $ANTLR start synpred9_InternalXAML
	public final void synpred9_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:4: ( () ( ( ruleOpMultiAssign ) ) )
		{
		dbg.location(2907,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:4: ( () ( ( ruleOpMultiAssign ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:5: () ( ( ruleOpMultiAssign ) )
		{
		dbg.location(2907,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2907:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2908:5: 
		{
		}
		dbg.location(2908,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2908:2: ( ( ruleOpMultiAssign ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2909:3: ( ruleOpMultiAssign )
		{
		dbg.location(2909,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2909:3: ( ruleOpMultiAssign )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2910:3: ruleOpMultiAssign
		{
		dbg.location(2910,3);
		pushFollow(FOLLOW_ruleOpMultiAssign_in_synpred9_InternalXAML6172);
		ruleOpMultiAssign();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred9_InternalXAML

	// $ANTLR start synpred10_InternalXAML
	public final void synpred10_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:3: ( ( () ( ( ruleOpOr ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:4: ( () ( ( ruleOpOr ) ) )
		{
		dbg.location(2981,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:4: ( () ( ( ruleOpOr ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:5: () ( ( ruleOpOr ) )
		{
		dbg.location(2981,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2981:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2982:5: 
		{
		}
		dbg.location(2982,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2982:2: ( ( ruleOpOr ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2983:3: ( ruleOpOr )
		{
		dbg.location(2983,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2983:3: ( ruleOpOr )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:2984:3: ruleOpOr
		{
		dbg.location(2984,3);
		pushFollow(FOLLOW_ruleOpOr_in_synpred10_InternalXAML6343);
		ruleOpOr();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred10_InternalXAML

	// $ANTLR start synpred11_InternalXAML
	public final void synpred11_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:3: ( ( () ( ( ruleOpAnd ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:4: ( () ( ( ruleOpAnd ) ) )
		{
		dbg.location(3082,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:4: ( () ( ( ruleOpAnd ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:5: () ( ( ruleOpAnd ) )
		{
		dbg.location(3082,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3082:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3083:5: 
		{
		}
		dbg.location(3083,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3083:2: ( ( ruleOpAnd ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3084:3: ( ruleOpAnd )
		{
		dbg.location(3084,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3084:3: ( ruleOpAnd )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3085:3: ruleOpAnd
		{
		dbg.location(3085,3);
		pushFollow(FOLLOW_ruleOpAnd_in_synpred11_InternalXAML6602);
		ruleOpAnd();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred11_InternalXAML

	// $ANTLR start synpred12_InternalXAML
	public final void synpred12_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:3: ( ( () ( ( ruleOpEquality ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:4: ( () ( ( ruleOpEquality ) ) )
		{
		dbg.location(3183,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:4: ( () ( ( ruleOpEquality ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:5: () ( ( ruleOpEquality ) )
		{
		dbg.location(3183,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3183:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3184:5: 
		{
		}
		dbg.location(3184,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3184:2: ( ( ruleOpEquality ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3185:3: ( ruleOpEquality )
		{
		dbg.location(3185,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3185:3: ( ruleOpEquality )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3186:3: ruleOpEquality
		{
		dbg.location(3186,3);
		pushFollow(FOLLOW_ruleOpEquality_in_synpred12_InternalXAML6861);
		ruleOpEquality();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred12_InternalXAML

	// $ANTLR start synpred13_InternalXAML
	public final void synpred13_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:4: ( ( () 'instanceof' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:5: ( () 'instanceof' )
		{
		dbg.location(3305,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:5: ( () 'instanceof' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:6: () 'instanceof'
		{
		dbg.location(3305,6);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3305:6: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3306:6: 
		{
		}
		dbg.location(3306,3);
		match(input,76,FOLLOW_76_in_synpred13_InternalXAML7175); if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred13_InternalXAML

	// $ANTLR start synpred14_InternalXAML
	public final void synpred14_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:8: ( ( () ( ( ruleOpCompare ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:9: ( () ( ( ruleOpCompare ) ) )
		{
		dbg.location(3336,9);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:9: ( () ( ( ruleOpCompare ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:10: () ( ( ruleOpCompare ) )
		{
		dbg.location(3336,10);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3336:10: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3337:10: 
		{
		}
		dbg.location(3337,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3337:2: ( ( ruleOpCompare ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3338:3: ( ruleOpCompare )
		{
		dbg.location(3338,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3338:3: ( ruleOpCompare )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3339:3: ruleOpCompare
		{
		dbg.location(3339,3);
		pushFollow(FOLLOW_ruleOpCompare_in_synpred14_InternalXAML7246);
		ruleOpCompare();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred14_InternalXAML

	// $ANTLR start synpred21_InternalXAML
	public final void synpred21_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:3: ( ( () ( ( ruleBinaryBitwiseOp ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:4: ( () ( ( ruleBinaryBitwiseOp ) ) )
		{
		dbg.location(3660,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:4: ( () ( ( ruleBinaryBitwiseOp ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:5: () ( ( ruleBinaryBitwiseOp ) )
		{
		dbg.location(3660,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3660:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3661:5: 
		{
		}
		dbg.location(3661,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3661:2: ( ( ruleBinaryBitwiseOp ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3662:3: ( ruleBinaryBitwiseOp )
		{
		dbg.location(3662,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3662:3: ( ruleBinaryBitwiseOp )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3663:3: ruleBinaryBitwiseOp
		{
		dbg.location(3663,3);
		pushFollow(FOLLOW_ruleBinaryBitwiseOp_in_synpred21_InternalXAML8167);
		ruleBinaryBitwiseOp();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred21_InternalXAML

	// $ANTLR start synpred22_InternalXAML
	public final void synpred22_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:3: ( ( () ( ( ruleShiftOp ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:4: ( () ( ( ruleShiftOp ) ) )
		{
		dbg.location(3775,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:4: ( () ( ( ruleShiftOp ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:5: () ( ( ruleShiftOp ) )
		{
		dbg.location(3775,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3775:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3776:5: 
		{
		}
		dbg.location(3776,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3776:2: ( ( ruleShiftOp ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3777:3: ( ruleShiftOp )
		{
		dbg.location(3777,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3777:3: ( ruleShiftOp )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3778:3: ruleShiftOp
		{
		dbg.location(3778,3);
		pushFollow(FOLLOW_ruleShiftOp_in_synpred22_InternalXAML8466);
		ruleShiftOp();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred22_InternalXAML

	// $ANTLR start synpred23_InternalXAML
	public final void synpred23_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:3: ( ( () ( ( ruleOpAdd ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:4: ( () ( ( ruleOpAdd ) ) )
		{
		dbg.location(3849,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:4: ( () ( ( ruleOpAdd ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:5: () ( ( ruleOpAdd ) )
		{
		dbg.location(3849,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3849:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3850:5: 
		{
		}
		dbg.location(3850,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3850:2: ( ( ruleOpAdd ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3851:3: ( ruleOpAdd )
		{
		dbg.location(3851,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3851:3: ( ruleOpAdd )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3852:3: ruleOpAdd
		{
		dbg.location(3852,3);
		pushFollow(FOLLOW_ruleOpAdd_in_synpred23_InternalXAML8637);
		ruleOpAdd();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred23_InternalXAML

	// $ANTLR start synpred24_InternalXAML
	public final void synpred24_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:3: ( ( () '?' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:4: ( () '?' )
		{
		dbg.location(3957,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:4: ( () '?' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:5: () '?'
		{
		dbg.location(3957,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3957:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:3958:5: 
		{
		}
		dbg.location(3958,3);
		match(input,54,FOLLOW_54_in_synpred24_InternalXAML8912); if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred24_InternalXAML

	// $ANTLR start synpred25_InternalXAML
	public final void synpred25_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:3: ( ( () ( ( ruleOpMulti ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:4: ( () ( ( ruleOpMulti ) ) )
		{
		dbg.location(4039,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:4: ( () ( ( ruleOpMulti ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:5: () ( ( ruleOpMulti ) )
		{
		dbg.location(4039,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4039:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4040:5: 
		{
		}
		dbg.location(4040,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4040:2: ( ( ruleOpMulti ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4041:3: ( ruleOpMulti )
		{
		dbg.location(4041,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4041:3: ( ruleOpMulti )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4042:3: ruleOpMulti
		{
		dbg.location(4042,3);
		pushFollow(FOLLOW_ruleOpMulti_in_synpred25_InternalXAML9103);
		ruleOpMulti();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred25_InternalXAML

	// $ANTLR start synpred26_InternalXAML
	public final void synpred26_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:2: ( ( () ( ( rulePrefixOp ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:3: ( () ( ( rulePrefixOp ) ) )
		{
		dbg.location(4154,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:3: ( () ( ( rulePrefixOp ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:4: () ( ( rulePrefixOp ) )
		{
		dbg.location(4154,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4154:4: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4155:4: 
		{
		}
		dbg.location(4155,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4155:2: ( ( rulePrefixOp ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4156:3: ( rulePrefixOp )
		{
		dbg.location(4156,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4156:3: ( rulePrefixOp )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4157:3: rulePrefixOp
		{
		dbg.location(4157,3);
		pushFollow(FOLLOW_rulePrefixOp_in_synpred26_InternalXAML9401);
		rulePrefixOp();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred26_InternalXAML

	// $ANTLR start synpred27_InternalXAML
	public final void synpred27_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:3: ( ( () 'as' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:4: ( () 'as' )
		{
		dbg.location(4376,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:4: ( () 'as' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:5: () 'as'
		{
		dbg.location(4376,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4376:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4377:5: 
		{
		}
		dbg.location(4377,3);
		match(input,62,FOLLOW_62_in_synpred27_InternalXAML9992); if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred27_InternalXAML

	// $ANTLR start synpred28_InternalXAML
	public final void synpred28_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:3: ( ( () ( ( ruleIndexOp ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:4: ( () ( ( ruleIndexOp ) ) )
		{
		dbg.location(4436,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:4: ( () ( ( ruleIndexOp ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:5: () ( ( ruleIndexOp ) )
		{
		dbg.location(4436,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4436:5: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4437:5: 
		{
		}
		dbg.location(4437,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4437:2: ( ( ruleIndexOp ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4438:3: ( ruleIndexOp )
		{
		dbg.location(4438,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4438:3: ( ruleIndexOp )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4439:3: ruleIndexOp
		{
		dbg.location(4439,3);
		pushFollow(FOLLOW_ruleIndexOp_in_synpred28_InternalXAML10150);
		ruleIndexOp();
		state._fsp--;
		if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred28_InternalXAML

	// $ANTLR start synpred29_InternalXAML
	public final void synpred29_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:4: ( ( () ( ( '(' ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:5: ( () ( ( '(' ) ) )
		{
		dbg.location(4541,5);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:5: ( () ( ( '(' ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:6: () ( ( '(' ) )
		{
		dbg.location(4541,6);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4541:6: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4542:6: 
		{
		}
		dbg.location(4542,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4542:2: ( ( '(' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4543:2: ( '(' )
		{
		dbg.location(4543,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4543:2: ( '(' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4544:2: '('
		{
		dbg.location(4544,2);
		match(input,26,FOLLOW_26_in_synpred29_InternalXAML10421); if (state.failed) return;
		}

		}

		}

		}

	}
	// $ANTLR end synpred29_InternalXAML

	// $ANTLR start synpred30_InternalXAML
	public final void synpred30_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:8: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:9: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
		{
		dbg.location(4614,9);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:9: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:10: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
		{
		dbg.location(4614,10);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4614:10: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4615:10: 
		{
		}
		dbg.location(4615,2);
		if ( input.LA(1)==37||input.LA(1)==43 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}dbg.location(4623,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4623:3: ( ( ruleFeatureCallID ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4624:3: ( ruleFeatureCallID )
		{
		dbg.location(4624,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4624:3: ( ruleFeatureCallID )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4625:3: ruleFeatureCallID
		{
		dbg.location(4625,3);
		pushFollow(FOLLOW_ruleFeatureCallID_in_synpred30_InternalXAML10594);
		ruleFeatureCallID();
		state._fsp--;
		if (state.failed) return;
		}

		}
		dbg.location(4627,3);
		pushFollow(FOLLOW_ruleOpSingleAssign_in_synpred30_InternalXAML10600);
		ruleOpSingleAssign();
		state._fsp--;
		if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred30_InternalXAML

	// $ANTLR start synpred31_InternalXAML
	public final void synpred31_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
		{
		dbg.location(4695,9);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:10: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
		{
		dbg.location(4695,10);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4695:10: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4696:10: 
		{
		}
		dbg.location(4696,2);
		if ( input.LA(1)==37||input.LA(1)==43||input.LA(1)==55 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

		}

	}
	// $ANTLR end synpred31_InternalXAML

	// $ANTLR start synpred32_InternalXAML
	public final void synpred32_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4816:4: ( ( '(' ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4817:2: ( '(' )
		{
		dbg.location(4817,2);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4817:2: ( '(' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:4818:2: '('
		{
		dbg.location(4818,2);
		match(input,26,FOLLOW_26_in_synpred32_InternalXAML11003); if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred32_InternalXAML

	// $ANTLR start synpred33_InternalXAML
	public final void synpred33_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5285:4: ( '=' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5285:6: '='
		{
		dbg.location(5285,6);
		match(input,48,FOLLOW_48_in_synpred33_InternalXAML12081); if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_InternalXAML

	// $ANTLR start synpred34_InternalXAML
	public final void synpred34_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5365:4: ( '=' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5365:6: '='
		{
		dbg.location(5365,6);
		match(input,48,FOLLOW_48_in_synpred34_InternalXAML12239); if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_InternalXAML

	// $ANTLR start synpred36_InternalXAML
	public final void synpred36_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5957:3: ( '.' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:5958:2: '.'
		{
		dbg.location(5958,2);
		match(input,37,FOLLOW_37_in_synpred36_InternalXAML13637); if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_InternalXAML

	// $ANTLR start synpred37_InternalXAML
	public final void synpred37_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:2: ( ( () ruleArrayBrackets ) )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:3: ( () ruleArrayBrackets )
		{
		dbg.location(6083,3);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:3: ( () ruleArrayBrackets )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:4: () ruleArrayBrackets
		{
		dbg.location(6083,4);
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6083:4: ()
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6084:4: 
		{
		}
		dbg.location(6084,3);
		pushFollow(FOLLOW_ruleArrayBrackets_in_synpred37_InternalXAML14022);
		ruleArrayBrackets();
		state._fsp--;
		if (state.failed) return;
		}

		}

	}
	// $ANTLR end synpred37_InternalXAML

	// $ANTLR start synpred38_InternalXAML
	public final void synpred38_InternalXAML_fragment() throws RecognitionException {
		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6268:4: ( '<' )
		dbg.enterAlt(1);

		// C:\\summertestarray\\org.summer.xaml.core\\src-gen\\org\\summer\\xaml\\core\\parser\\antlr\\internal\\InternalXAML.g:6268:6: '<'
		{
		dbg.location(6268,6);
		match(input,45,FOLLOW_45_in_synpred38_InternalXAML14474); if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_InternalXAML

	// Delegated rules

	public final boolean synpred29_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_InternalXAML() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_InternalXAML_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA32 dfa32 = new DFA32(this);
	protected DFA49 dfa49 = new DFA49(this);
	protected DFA102 dfa102 = new DFA102(this);
	static final String DFA32_eotS =
		"\11\uffff";
	static final String DFA32_eofS =
		"\11\uffff";
	static final String DFA32_minS =
		"\6\75\3\uffff";
	static final String DFA32_maxS =
		"\6\123\3\uffff";
	static final String DFA32_acceptS =
		"\6\uffff\1\1\1\2\1\3";
	static final String DFA32_specialS =
		"\11\uffff}>";
	static final String[] DFA32_transitionS = {
			"\1\10\3\uffff\1\6\1\4\1\uffff\1\1\10\uffff\1\7\2\uffff\1\5\1\2\1\uffff"+
			"\1\3",
			"\1\10\3\uffff\1\6\1\4\12\uffff\1\7\2\uffff\1\5\1\2\1\uffff\1\3",
			"\1\10\3\uffff\1\6\1\4\12\uffff\1\7\2\uffff\1\5\1\2\1\uffff\1\3",
			"\1\10\3\uffff\1\6\1\4\12\uffff\1\7\2\uffff\1\5\1\2\1\uffff\1\3",
			"\1\10\3\uffff\1\6\1\4\12\uffff\1\7\2\uffff\1\5\1\2\1\uffff\1\3",
			"\1\10\3\uffff\1\6\1\4\12\uffff\1\7\2\uffff\1\5\1\2\1\uffff\1\3",
			"",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "872:3: ( ( () ( (lv_exported_3_0= 'export' ) )? ( (lv_modifiers_4_0= ruleCommonModifier ) )* otherlv_5= 'class' ( (lv_simpleName_6_0= ruleValidID ) ) (otherlv_7= '<' ( (lv_typeParameters_8_0= ruleJvmTypeParameter ) ) (otherlv_9= ',' ( (lv_typeParameters_10_0= ruleJvmTypeParameter ) ) )* otherlv_11= '>' )? (otherlv_12= 'extends' ( (lv_extends_13_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_14= 'implements' ( (lv_implements_15_0= ruleJvmParameterizedTypeReference ) ) (otherlv_16= ',' ( (lv_implements_17_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_18= '{' ( (lv_members_19_0= ruleMember ) )* otherlv_20= '}' ) | ( () ( (lv_exported_22_0= 'export' ) )? ( (lv_modifiers_23_0= ruleCommonModifier ) )* ( (lv_interface_24_0= 'interface' ) ) ( (lv_simpleName_25_0= ruleValidID ) ) (otherlv_26= '<' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) (otherlv_28= ',' ( (lv_typeParameters_29_0= ruleJvmTypeParameter ) ) )* otherlv_30= '>' )? (otherlv_31= 'extends' ( (lv_implements_32_0= ruleJvmParameterizedTypeReference ) ) (otherlv_33= ',' ( (lv_implements_34_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_35= '{' ( (lv_members_36_0= ruleMember ) )* otherlv_37= '}' ) | ( () ( (lv_exported_39_0= 'export' ) )? ( (lv_modifiers_40_0= ruleCommonModifier ) )* otherlv_41= 'annotation' ( (lv_simpleName_42_0= ruleValidID ) ) otherlv_43= '{' ( (lv_members_44_0= ruleAnnotationField ) )* otherlv_45= '}' ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA49_eotS =
		"\10\uffff";
	static final String DFA49_eofS =
		"\10\uffff";
	static final String DFA49_minS =
		"\5\10\3\uffff";
	static final String DFA49_maxS =
		"\5\123\3\uffff";
	static final String DFA49_acceptS =
		"\5\uffff\1\1\1\2\1\3";
	static final String DFA49_specialS =
		"\10\uffff}>";
	static final String[] DFA49_transitionS = {
			"\1\5\21\uffff\1\5\30\uffff\1\5\16\uffff\1\3\1\7\1\6\3\uffff\1\6\7\uffff"+
			"\1\4\1\1\1\uffff\1\2",
			"\1\5\21\uffff\1\5\30\uffff\1\5\16\uffff\1\3\1\7\1\6\3\uffff\1\6\7\uffff"+
			"\1\4\1\1\1\uffff\1\2",
			"\1\5\21\uffff\1\5\30\uffff\1\5\16\uffff\1\3\1\7\1\6\3\uffff\1\6\7\uffff"+
			"\1\4\1\1\1\uffff\1\2",
			"\1\5\21\uffff\1\5\30\uffff\1\5\16\uffff\1\3\1\7\1\6\3\uffff\1\6\7\uffff"+
			"\1\4\1\1\1\uffff\1\2",
			"\1\5\21\uffff\1\5\30\uffff\1\5\16\uffff\1\3\1\7\1\6\3\uffff\1\6\7\uffff"+
			"\1\4\1\1\1\uffff\1\2",
			"",
			"",
			""
	};

	static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
	static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
	static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
	static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
	static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
	static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
	static final short[][] DFA49_transition;

	static {
		int numStates = DFA49_transitionS.length;
		DFA49_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
		}
	}

	protected class DFA49 extends DFA {

		public DFA49(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 49;
			this.eot = DFA49_eot;
			this.eof = DFA49_eof;
			this.min = DFA49_min;
			this.max = DFA49_max;
			this.accept = DFA49_accept;
			this.special = DFA49_special;
			this.transition = DFA49_transition;
		}
		@Override
		public String getDescription() {
			return "1516:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( (lv_type_4_0= ruleJvmTypeReference ) ) ( (lv_simpleName_5_0= ruleValidID ) ) ) ( ( (otherlv_6= '=' ( (lv_defaultValue_7_0= ruleXExpression ) ) )? (otherlv_8= ';' )? ) | (otherlv_9= '{' otherlv_10= 'get' ( (lv_get_11_0= ruleXBlockExpression ) ) (otherlv_12= 'set' ( (lv_set_13_0= ruleXBlockExpression ) ) )? otherlv_14= '}' ) ) ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_function_17_0= ruleXClosure ) ) ) | ( () ( (lv_modifiers_19_0= ruleCommonModifier ) )* otherlv_20= 'constructor' (otherlv_21= '<' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) (otherlv_23= ',' ( (lv_typeParameters_24_0= ruleJvmTypeParameter ) ) )* otherlv_25= '>' )? otherlv_26= '(' ( ( (lv_parameters_27_0= ruleParameter ) ) (otherlv_28= ',' ( (lv_parameters_29_0= ruleParameter ) ) )* )? otherlv_30= ')' ( (lv_expression_31_0= ruleXBlockExpression ) ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA102_eotS =
		"\100\uffff";
	static final String DFA102_eofS =
		"\1\2\77\uffff";
	static final String DFA102_minS =
		"\1\10\1\0\76\uffff";
	static final String DFA102_maxS =
		"\1\135\1\0\76\uffff";
	static final String DFA102_acceptS =
		"\2\uffff\1\2\74\uffff\1\1";
	static final String DFA102_specialS =
		"\1\uffff\1\0\76\uffff}>";
	static final String[] DFA102_transitionS = {
			"\1\2\6\uffff\1\2\2\uffff\10\2\1\1\13\2\1\uffff\2\2\1\uffff\4\2\1\uffff"+
			"\20\2\2\uffff\4\2\3\uffff\1\2\3\uffff\2\2\2\uffff\2\2\1\uffff\1\2\3\uffff"+
			"\7\2",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA102_eot = DFA.unpackEncodedString(DFA102_eotS);
	static final short[] DFA102_eof = DFA.unpackEncodedString(DFA102_eofS);
	static final char[] DFA102_min = DFA.unpackEncodedStringToUnsignedChars(DFA102_minS);
	static final char[] DFA102_max = DFA.unpackEncodedStringToUnsignedChars(DFA102_maxS);
	static final short[] DFA102_accept = DFA.unpackEncodedString(DFA102_acceptS);
	static final short[] DFA102_special = DFA.unpackEncodedString(DFA102_specialS);
	static final short[][] DFA102_transition;

	static {
		int numStates = DFA102_transitionS.length;
		DFA102_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA102_transition[i] = DFA.unpackEncodedString(DFA102_transitionS[i]);
		}
	}

	protected class DFA102 extends DFA {

		public DFA102(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 102;
			this.eot = DFA102_eot;
			this.eof = DFA102_eof;
			this.min = DFA102_min;
			this.max = DFA102_max;
			this.accept = DFA102_accept;
			this.special = DFA102_special;
			this.transition = DFA102_transition;
		}
		@Override
		public String getDescription() {
			return "4816:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_23_0= '(' ) ) ( ( (lv_memberCallArguments_24_0= ruleXExpression ) ) (otherlv_25= ',' ( (lv_memberCallArguments_26_0= ruleXExpression ) ) )* )? otherlv_27= ')' )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA102_1 = input.LA(1);
						 
						int index102_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_InternalXAML()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index102_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 102, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	public static final BitSet FOLLOW_ruleDocument_in_entryRuleDocument75 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleDocument85 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXImportSection1_in_ruleDocument131 = new BitSet(new long[]{0x0000200000000000L});
	public static final BitSet FOLLOW_ruleObjectElement_in_ruleDocument153 = new BitSet(new long[]{0x2100000CC0048002L,0x00000000218B2016L});
	public static final BitSet FOLLOW_ruleType_in_ruleDocument175 = new BitSet(new long[]{0x2100000CC0048002L,0x00000000218B2016L});
	public static final BitSet FOLLOW_ruleXExpressionInsideBlock_in_ruleDocument203 = new BitSet(new long[]{0x2100100CC0048002L,0x00000000218B2016L});
	public static final BitSet FOLLOW_44_in_ruleDocument216 = new BitSet(new long[]{0x2100000CC0048002L,0x00000000218B2016L});
	public static final BitSet FOLLOW_ruleElementContent_in_entryRuleElementContent263 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleElementContent273 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleObjectElement_in_ruleElementContent324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleAttributeElement_in_ruleElementContent351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleObjectElement_in_entryRuleObjectElement390 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleObjectElement400 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_45_in_ruleObjectElement437 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleObjectElement458 = new BitSet(new long[]{0x0010020004000100L});
	public static final BitSet FOLLOW_ruleAbstractProperty_in_ruleObjectElement479 = new BitSet(new long[]{0x0010020004000100L});
	public static final BitSet FOLLOW_52_in_ruleObjectElement543 = new BitSet(new long[]{0x0000600000000000L});
	public static final BitSet FOLLOW_ruleElementContent_in_ruleObjectElement564 = new BitSet(new long[]{0x0000600000000000L});
	public static final BitSet FOLLOW_46_in_ruleObjectElement577 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleObjectElement598 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_ruleObjectElement610 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_41_in_ruleObjectElement629 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleAttributeElement_in_entryRuleAttributeElement667 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleAttributeElement677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_45_in_ruleAttributeElement714 = new BitSet(new long[]{0x0000000004000000L});
	public static final BitSet FOLLOW_26_in_ruleAttributeElement726 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleAttributeElement746 = new BitSet(new long[]{0x0000002000000000L});
	public static final BitSet FOLLOW_37_in_ruleAttributeElement758 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleAttributeElement778 = new BitSet(new long[]{0x0000000008000000L});
	public static final BitSet FOLLOW_27_in_ruleAttributeElement790 = new BitSet(new long[]{0x0010020000000000L});
	public static final BitSet FOLLOW_52_in_ruleAttributeElement881 = new BitSet(new long[]{0x0000600000000000L});
	public static final BitSet FOLLOW_ruleElementContent_in_ruleAttributeElement902 = new BitSet(new long[]{0x0000600000000000L});
	public static final BitSet FOLLOW_46_in_ruleAttributeElement915 = new BitSet(new long[]{0x0000000004000000L});
	public static final BitSet FOLLOW_26_in_ruleAttributeElement927 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleAttributeElement947 = new BitSet(new long[]{0x0000002000000000L});
	public static final BitSet FOLLOW_37_in_ruleAttributeElement959 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleAttributeElement979 = new BitSet(new long[]{0x0000000008000000L});
	public static final BitSet FOLLOW_27_in_ruleAttributeElement992 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_ruleAttributeElement1004 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_41_in_ruleAttributeElement1023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleAbstractProperty_in_entryRuleAbstractProperty1061 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleAbstractProperty1071 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleGeneralProperty_in_ruleAbstractProperty1118 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleAttachProperty_in_ruleAbstractProperty1145 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleAttachProperty_in_entryRuleAttachProperty1180 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleAttachProperty1190 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_26_in_ruleAttachProperty1227 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleAttachProperty1247 = new BitSet(new long[]{0x0000002000000000L});
	public static final BitSet FOLLOW_37_in_ruleAttachProperty1259 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleAttachProperty1279 = new BitSet(new long[]{0x0000000008000000L});
	public static final BitSet FOLLOW_27_in_ruleAttachProperty1291 = new BitSet(new long[]{0x0001000000000000L});
	public static final BitSet FOLLOW_48_in_ruleAttachProperty1303 = new BitSet(new long[]{0x0000000000008000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ruleXPrimaryExpression_in_ruleAttachProperty1324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleMarkupExtenson_in_entryRuleMarkupExtenson1360 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleMarkupExtenson1370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_88_in_ruleMarkupExtenson1416 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleMarkupExtenson1437 = new BitSet(new long[]{0x0000000004000100L,0x0000000010000000L});
	public static final BitSet FOLLOW_ruleAbstractProperty_in_ruleMarkupExtenson1458 = new BitSet(new long[]{0x0000000004000100L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_ruleMarkupExtenson1471 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleGeneralProperty_in_entryRuleGeneralProperty1507 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleGeneralProperty1517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleGeneralProperty1562 = new BitSet(new long[]{0x0001000000000000L});
	public static final BitSet FOLLOW_48_in_ruleGeneralProperty1574 = new BitSet(new long[]{0x0000000000008000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ruleXPrimaryExpression_in_ruleGeneralProperty1595 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression1631 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXPrimaryExpression1641 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXStringLiteral_in_ruleXPrimaryExpression1688 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleMarkupExtenson_in_ruleXPrimaryExpression1715 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral1750 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXStringLiteral1760 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_STRING_in_ruleXStringLiteral1811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleType_in_entryRuleType1854 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleType1864 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAnnotation_in_ruleType1919 = new BitSet(new long[]{0x2100000000000000L,0x00000000000B2016L});
	public static final BitSet FOLLOW_68_in_ruleType1949 = new BitSet(new long[]{0x0000000000000000L,0x00000000000B0006L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleType1984 = new BitSet(new long[]{0x0000000000000000L,0x00000000000B0006L});
	public static final BitSet FOLLOW_65_in_ruleType1997 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleType2018 = new BitSet(new long[]{0x0000200000000000L,0x0000000001000420L});
	public static final BitSet FOLLOW_45_in_ruleType2031 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleType2052 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_33_in_ruleType2065 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleType2086 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_52_in_ruleType2100 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000420L});
	public static final BitSet FOLLOW_69_in_ruleType2115 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2136 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000400L});
	public static final BitSet FOLLOW_74_in_ruleType2151 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2172 = new BitSet(new long[]{0x0000000200000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_33_in_ruleType2185 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2206 = new BitSet(new long[]{0x0000000200000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_88_in_ruleType2222 = new BitSet(new long[]{0x0108000004000100L,0x00000000100B011CL});
	public static final BitSet FOLLOW_ruleMember_in_ruleType2243 = new BitSet(new long[]{0x0108000004000100L,0x00000000100B011CL});
	public static final BitSet FOLLOW_92_in_ruleType2256 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_ruleType2291 = new BitSet(new long[]{0x0000000000000000L,0x00000000000B2004L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleType2326 = new BitSet(new long[]{0x0000000000000000L,0x00000000000B2004L});
	public static final BitSet FOLLOW_77_in_ruleType2345 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleType2379 = new BitSet(new long[]{0x0000200000000000L,0x0000000001000020L});
	public static final BitSet FOLLOW_45_in_ruleType2392 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleType2413 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_33_in_ruleType2426 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleType2447 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_52_in_ruleType2461 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000020L});
	public static final BitSet FOLLOW_69_in_ruleType2476 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2497 = new BitSet(new long[]{0x0000000200000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_33_in_ruleType2510 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleType2531 = new BitSet(new long[]{0x0000000200000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_88_in_ruleType2547 = new BitSet(new long[]{0x0108000004000100L,0x00000000100B011CL});
	public static final BitSet FOLLOW_ruleMember_in_ruleType2568 = new BitSet(new long[]{0x0108000004000100L,0x00000000100B011CL});
	public static final BitSet FOLLOW_92_in_ruleType2581 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_ruleType2616 = new BitSet(new long[]{0x2000000000000000L,0x00000000000B0004L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleType2651 = new BitSet(new long[]{0x2000000000000000L,0x00000000000B0004L});
	public static final BitSet FOLLOW_61_in_ruleType2664 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleType2685 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_88_in_ruleType2697 = new BitSet(new long[]{0x0108000004000100L,0x00000000100B0004L});
	public static final BitSet FOLLOW_ruleAnnotationField_in_ruleType2718 = new BitSet(new long[]{0x0108000004000100L,0x00000000100B0004L});
	public static final BitSet FOLLOW_92_in_ruleType2731 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleAnnotationField_in_entryRuleAnnotationField2769 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleAnnotationField2779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAnnotation_in_ruleAnnotationField2825 = new BitSet(new long[]{0x0108000004000100L,0x00000000000B0004L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleAnnotationField2847 = new BitSet(new long[]{0x0008000004000100L,0x00000000000B0004L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleAnnotationField2870 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleAnnotationField2891 = new BitSet(new long[]{0x0001100000000002L});
	public static final BitSet FOLLOW_48_in_ruleAnnotationField2905 = new BitSet(new long[]{0x0000000000009060L,0x000000000060C150L});
	public static final BitSet FOLLOW_ruleXLiteral_in_ruleAnnotationField2926 = new BitSet(new long[]{0x0000100000000002L});
	public static final BitSet FOLLOW_44_in_ruleAnnotationField2941 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleMember_in_entryRuleMember2979 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleMember2989 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAnnotation_in_ruleMember3044 = new BitSet(new long[]{0x0108000004000100L,0x00000000000B011CL});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleMember3077 = new BitSet(new long[]{0x0008000004000100L,0x00000000000B0004L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleMember3100 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleMember3121 = new BitSet(new long[]{0x0001100000000002L,0x0000000001000000L});
	public static final BitSet FOLLOW_48_in_ruleMember3137 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleMember3158 = new BitSet(new long[]{0x0000100000000002L});
	public static final BitSet FOLLOW_44_in_ruleMember3173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_88_in_ruleMember3195 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_73_in_ruleMember3207 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleMember3228 = new BitSet(new long[]{0x0000000000000000L,0x0000000010040000L});
	public static final BitSet FOLLOW_82_in_ruleMember3241 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleMember3262 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_ruleMember3276 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleMember3316 = new BitSet(new long[]{0x0000000000000000L,0x00000000000B0114L});
	public static final BitSet FOLLOW_ruleXClosure_in_ruleMember3338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_ruleMember3376 = new BitSet(new long[]{0x0000000000000000L,0x00000000000B000CL});
	public static final BitSet FOLLOW_67_in_ruleMember3389 = new BitSet(new long[]{0x0000200004000000L});
	public static final BitSet FOLLOW_45_in_ruleMember3402 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleMember3423 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_33_in_ruleMember3436 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleMember3457 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_52_in_ruleMember3471 = new BitSet(new long[]{0x0000000004000000L});
	public static final BitSet FOLLOW_26_in_ruleMember3485 = new BitSet(new long[]{0x010800000C000100L});
	public static final BitSet FOLLOW_ruleParameter_in_ruleMember3507 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_33_in_ruleMember3520 = new BitSet(new long[]{0x0108000004000100L});
	public static final BitSet FOLLOW_ruleParameter_in_ruleMember3541 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_27_in_ruleMember3557 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleMember3578 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXClosure_in_entryRuleXClosure3616 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXClosure3626 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_ruleXClosure3678 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_72_in_ruleXClosure3704 = new BitSet(new long[]{0x1A36A19DF7FC0100L,0x000000002E000000L});
	public static final BitSet FOLLOW_45_in_ruleXClosure3717 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleXClosure3738 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_33_in_ruleXClosure3751 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_ruleXClosure3772 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_52_in_ruleXClosure3786 = new BitSet(new long[]{0x1A36A19DF7FC0100L,0x000000002E000000L});
	public static final BitSet FOLLOW_ruleFunctionID_in_ruleXClosure3809 = new BitSet(new long[]{0x0000000004000000L});
	public static final BitSet FOLLOW_26_in_ruleXClosure3822 = new BitSet(new long[]{0x000800000C000100L});
	public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure3844 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_33_in_ruleXClosure3857 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure3878 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_27_in_ruleXClosure3894 = new BitSet(new long[]{0x0000140000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_42_in_ruleXClosure3907 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXClosure3928 = new BitSet(new long[]{0x0000100000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleXClosure3952 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_44_in_ruleXClosure3970 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleFunctionID_in_entryRuleFunctionID4008 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleFunctionID4019 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleFunctionID4066 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOperators_in_ruleFunctionID4099 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOperators_in_entryRuleOperators4145 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOperators4156 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpMultiAssign_in_ruleOperators4203 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpOr_in_ruleOperators4236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpAnd_in_ruleOperators4269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpEquality_in_ruleOperators4302 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpCompare_in_ruleOperators4335 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleShiftOp_in_ruleOperators4368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleBinaryBitwiseOp_in_ruleOperators4401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpMulti_in_ruleOperators4434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpUnary_in_ruleOperators4467 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleIndexOp_in_ruleOperators4500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleCommonModifier_in_entryRuleCommonModifier4548 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleCommonModifier4559 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_ruleCommonModifier4597 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_83_in_ruleCommonModifier4616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_66_in_ruleCommonModifier4635 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_80_in_ruleCommonModifier4654 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_entryRuleValidID4695 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleValidID4706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleValidID4745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID4790 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCallID4801 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleFeatureCallID4840 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter4884 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleParameter4894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAnnotation_in_ruleParameter4940 = new BitSet(new long[]{0x0108000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleParameter4962 = new BitSet(new long[]{0x0000004000000100L});
	public static final BitSet FOLLOW_38_in_ruleParameter4980 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleParameter5015 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration5051 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXVariableDeclaration5061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_ruleXVariableDeclaration5113 = new BitSet(new long[]{0x0008000004000100L,0x0000000000000004L});
	public static final BitSet FOLLOW_66_in_ruleXVariableDeclaration5145 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration5206 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration5227 = new BitSet(new long[]{0x0001000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration5256 = new BitSet(new long[]{0x0001000000000002L});
	public static final BitSet FOLLOW_48_in_ruleXVariableDeclaration5270 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXVariableDeclaration5291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAnnotation_in_entryRuleXAnnotation5331 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXAnnotation5341 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_56_in_ruleXAnnotation5387 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXAnnotation5410 = new BitSet(new long[]{0x0000000004000002L});
	public static final BitSet FOLLOW_26_in_ruleXAnnotation5431 = new BitSet(new long[]{0x0000000008009160L,0x000000000060C150L});
	public static final BitSet FOLLOW_ruleJvmAnnotationValue_in_ruleXAnnotation5475 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_33_in_ruleXAnnotation5488 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleJvmAnnotationValue_in_ruleXAnnotation5529 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_ruleXLiteral_in_ruleXAnnotation5559 = new BitSet(new long[]{0x0000000008000000L});
	public static final BitSet FOLLOW_27_in_ruleXAnnotation5573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmAnnotationValue_in_entryRuleJvmAnnotationValue5611 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmAnnotationValue5621 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleJvmAnnotationValue5691 = new BitSet(new long[]{0x0001000000000000L});
	public static final BitSet FOLLOW_48_in_ruleJvmAnnotationValue5703 = new BitSet(new long[]{0x0000000000009060L,0x000000000060C150L});
	public static final BitSet FOLLOW_ruleXLiteral_in_ruleJvmAnnotationValue5726 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXExpression_in_entryRuleXExpression5762 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXExpression5772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAssignment_in_ruleXExpression5818 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAssignment_in_entryRuleXAssignment5852 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXAssignment5862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXMultiAssignment_in_ruleXAssignment5909 = new BitSet(new long[]{0x0001000000000002L});
	public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXAssignment5946 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXMultiAssignment_in_ruleXAssignment5968 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign6007 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpSingleAssign6018 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_48_in_ruleOpSingleAssign6055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXMultiAssignment_in_entryRuleXMultiAssignment6094 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXMultiAssignment6104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXOrExpression_in_ruleXMultiAssignment6151 = new BitSet(new long[]{0x1010211122400002L,0x0000000004000000L});
	public static final BitSet FOLLOW_ruleOpMultiAssign_in_ruleXMultiAssignment6204 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXOrExpression_in_ruleXMultiAssignment6227 = new BitSet(new long[]{0x1010211122400002L,0x0000000004000000L});
	public static final BitSet FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression6265 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXOrExpression6275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression6322 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_ruleOpOr_in_ruleXOrExpression6375 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression6398 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_ruleOpOr_in_entryRuleOpOr6437 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpOr6448 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_91_in_ruleOpOr6485 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression6524 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXAndExpression6534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression6581 = new BitSet(new long[]{0x0000000000800002L});
	public static final BitSet FOLLOW_ruleOpAnd_in_ruleXAndExpression6634 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression6657 = new BitSet(new long[]{0x0000000000800002L});
	public static final BitSet FOLLOW_ruleOpAnd_in_entryRuleOpAnd6696 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpAnd6707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_23_in_ruleOpAnd6744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression6783 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXEqualityExpression6793 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression6840 = new BitSet(new long[]{0x0006000000180002L});
	public static final BitSet FOLLOW_ruleOpEquality_in_ruleXEqualityExpression6893 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression6916 = new BitSet(new long[]{0x0006000000180002L});
	public static final BitSet FOLLOW_ruleOpEquality_in_entryRuleOpEquality6955 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpEquality6966 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_49_in_ruleOpEquality7004 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_19_in_ruleOpEquality7023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_50_in_ruleOpEquality7042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_20_in_ruleOpEquality7061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression7101 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXRelationalExpression7111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXBitwiseExpression_in_ruleXRelationalExpression7158 = new BitSet(new long[]{0x0030A00000000002L,0x0000000000001000L});
	public static final BitSet FOLLOW_76_in_ruleXRelationalExpression7194 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression7217 = new BitSet(new long[]{0x0030A00000000002L,0x0000000000001000L});
	public static final BitSet FOLLOW_ruleOpCompare_in_ruleXRelationalExpression7278 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXBitwiseExpression_in_ruleXRelationalExpression7301 = new BitSet(new long[]{0x0030A00000000002L,0x0000000000001000L});
	public static final BitSet FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign7341 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpMultiAssign7352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_29_in_ruleOpMultiAssign7390 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_40_in_ruleOpMultiAssign7409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_22_in_ruleOpMultiAssign7428 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_32_in_ruleOpMultiAssign7447 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_36_in_ruleOpMultiAssign7466 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_52_in_ruleOpMultiAssign7486 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_53_in_ruleOpMultiAssign7508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_52_in_ruleOpMultiAssign7530 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_ruleOpMultiAssign7560 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_53_in_ruleOpMultiAssign7573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_45_in_ruleOpMultiAssign7596 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_47_in_ruleOpMultiAssign7618 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_25_in_ruleOpMultiAssign7639 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_60_in_ruleOpMultiAssign7658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_90_in_ruleOpMultiAssign7677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleShiftOp_in_entryRuleShiftOp7718 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleShiftOp7729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_52_in_ruleShiftOp7768 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_ruleShiftOp7798 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_ruleShiftOp7811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_52_in_ruleShiftOp7834 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_ruleShiftOp7856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_45_in_ruleShiftOp7878 = new BitSet(new long[]{0x0000200000000000L});
	public static final BitSet FOLLOW_45_in_ruleShiftOp7900 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpCompare_in_entryRuleOpCompare7943 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpCompare7954 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_53_in_ruleOpCompare7992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_47_in_ruleOpCompare8011 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_52_in_ruleOpCompare8030 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_45_in_ruleOpCompare8049 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXBitwiseExpression_in_entryRuleXBitwiseExpression8089 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXBitwiseExpression8099 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXShiftExpression_in_ruleXBitwiseExpression8146 = new BitSet(new long[]{0x0800000001000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_ruleBinaryBitwiseOp_in_ruleXBitwiseExpression8199 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXShiftExpression_in_ruleXBitwiseExpression8222 = new BitSet(new long[]{0x0800000001000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_ruleBinaryBitwiseOp_in_entryRuleBinaryBitwiseOp8261 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleBinaryBitwiseOp8272 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_24_in_ruleBinaryBitwiseOp8310 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_89_in_ruleBinaryBitwiseOp8329 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_59_in_ruleBinaryBitwiseOp8348 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXShiftExpression_in_entryRuleXShiftExpression8388 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXShiftExpression8398 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXShiftExpression8445 = new BitSet(new long[]{0x0010200000000002L});
	public static final BitSet FOLLOW_ruleShiftOp_in_ruleXShiftExpression8498 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXShiftExpression8521 = new BitSet(new long[]{0x0010200000000002L});
	public static final BitSet FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression8559 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXAdditiveExpression8569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXTernaryOperation_in_ruleXAdditiveExpression8616 = new BitSet(new long[]{0x0000000440000002L});
	public static final BitSet FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression8669 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression8692 = new BitSet(new long[]{0x0000000440000002L});
	public static final BitSet FOLLOW_ruleOpAdd_in_entryRuleOpAdd8731 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpAdd8742 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_30_in_ruleOpAdd8780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_34_in_ruleOpAdd8799 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXTernaryOperation_in_entryRuleXTernaryOperation8839 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXTernaryOperation8849 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXTernaryOperation8896 = new BitSet(new long[]{0x0040000000000002L});
	public static final BitSet FOLLOW_54_in_ruleXTernaryOperation8931 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXTernaryOperation8954 = new BitSet(new long[]{0x0000040000000000L});
	public static final BitSet FOLLOW_42_in_ruleXTernaryOperation8966 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXTernaryOperation8987 = new BitSet(new long[]{0x0040000000000002L});
	public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression9025 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXMultiplicativeExpression9035 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXPostfixOperation_in_ruleXMultiplicativeExpression9082 = new BitSet(new long[]{0x0000008010200002L});
	public static final BitSet FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression9135 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXPostfixOperation_in_ruleXMultiplicativeExpression9158 = new BitSet(new long[]{0x0000008010200002L});
	public static final BitSet FOLLOW_ruleOpMulti_in_entryRuleOpMulti9197 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpMulti9208 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_28_in_ruleOpMulti9246 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_39_in_ruleOpMulti9265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_21_in_ruleOpMulti9284 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXPostfixOperation_in_entryRuleXPostfixOperation9324 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXPostfixOperation9334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXPostfixOperation9381 = new BitSet(new long[]{0x0000000880000002L});
	public static final BitSet FOLLOW_rulePrefixOp_in_ruleXPostfixOperation9433 = new BitSet(new long[]{0x0000000880000002L});
	public static final BitSet FOLLOW_rulePrefixOp_in_entryRulePrefixOp9473 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRulePrefixOp9484 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_31_in_rulePrefixOp9522 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_35_in_rulePrefixOp9541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation9581 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXUnaryOperation9591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpUnary_in_ruleXUnaryOperation9649 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation9670 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation9699 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpUnary_in_entryRuleOpUnary9735 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleOpUnary9746 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_18_in_ruleOpUnary9784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_34_in_ruleOpUnary9803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_30_in_ruleOpUnary9822 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_93_in_ruleOpUnary9841 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_31_in_ruleOpUnary9860 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_35_in_ruleOpUnary9879 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression9919 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXCastedExpression9929 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXIndexOperation_in_ruleXCastedExpression9976 = new BitSet(new long[]{0x4000000000000002L});
	public static final BitSet FOLLOW_62_in_ruleXCastedExpression10011 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression10034 = new BitSet(new long[]{0x4000000000000002L});
	public static final BitSet FOLLOW_ruleXIndexOperation_in_entryRuleXIndexOperation10072 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXIndexOperation10082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_ruleXIndexOperation10129 = new BitSet(new long[]{0x0200000000000002L});
	public static final BitSet FOLLOW_ruleIndexOp_in_ruleXIndexOperation10182 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXIndexOperation10205 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_58_in_ruleXIndexOperation10217 = new BitSet(new long[]{0x0200000000000002L});
	public static final BitSet FOLLOW_ruleIndexOp_in_entryRuleIndexOp10256 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleIndexOp10267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_57_in_ruleIndexOp10304 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall10343 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXMemberFeatureCall10353 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall10400 = new BitSet(new long[]{0x0080082004000002L});
	public static final BitSet FOLLOW_26_in_ruleXMemberFeatureCall10452 = new BitSet(new long[]{0x0000000CC8048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall10489 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_33_in_ruleXMemberFeatureCall10502 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall10523 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_27_in_ruleXMemberFeatureCall10539 = new BitSet(new long[]{0x0080082004000002L});
	public static final BitSet FOLLOW_37_in_ruleXMemberFeatureCall10618 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_43_in_ruleXMemberFeatureCall10642 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall10679 = new BitSet(new long[]{0x0001000000000000L});
	public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall10695 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall10717 = new BitSet(new long[]{0x0080082004000002L});
	public static final BitSet FOLLOW_37_in_ruleXMemberFeatureCall10803 = new BitSet(new long[]{0x0000200000000100L});
	public static final BitSet FOLLOW_55_in_ruleXMemberFeatureCall10827 = new BitSet(new long[]{0x0000200000000100L});
	public static final BitSet FOLLOW_43_in_ruleXMemberFeatureCall10864 = new BitSet(new long[]{0x0000200000000100L});
	public static final BitSet FOLLOW_45_in_ruleXMemberFeatureCall10893 = new BitSet(new long[]{0x0048000004000100L});
	public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall10914 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_33_in_ruleXMemberFeatureCall10927 = new BitSet(new long[]{0x0048000004000100L});
	public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall10948 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_52_in_ruleXMemberFeatureCall10962 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall10987 = new BitSet(new long[]{0x0080082004000002L});
	public static final BitSet FOLLOW_26_in_ruleXMemberFeatureCall11021 = new BitSet(new long[]{0x0000000CC8048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall11056 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_33_in_ruleXMemberFeatureCall11069 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall11090 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_27_in_ruleXMemberFeatureCall11106 = new BitSet(new long[]{0x0080082004000002L});
	public static final BitSet FOLLOW_ruleXLiteral_in_entryRuleXLiteral11147 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXLiteral11157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXObjectLiteral_in_ruleXLiteral11204 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXArrayLiteral_in_ruleXLiteral11231 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXClosure_in_ruleXLiteral11258 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral11285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXNumberLiteral_in_ruleXLiteral11312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXNullLiteral_in_ruleXLiteral11339 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXStringLiteral_in_ruleXLiteral11366 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXTypeLiteral_in_ruleXLiteral11393 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXCasePart_in_entryRuleXCasePart11434 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXCasePart11444 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_63_in_ruleXCasePart11481 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart11502 = new BitSet(new long[]{0x0000040000000000L});
	public static final BitSet FOLLOW_42_in_ruleXCasePart11514 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart11535 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression11579 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXBlockExpression11589 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_88_in_ruleXBlockExpression11635 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000031800000L});
	public static final BitSet FOLLOW_ruleXExpressionInsideBlock_in_ruleXBlockExpression11657 = new BitSet(new long[]{0x0000100CC0048000L,0x0000000031800000L});
	public static final BitSet FOLLOW_44_in_ruleXBlockExpression11670 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000031800000L});
	public static final BitSet FOLLOW_92_in_ruleXBlockExpression11686 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXExpressionInsideBlock_in_entryRuleXExpressionInsideBlock11722 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionInsideBlock11732 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXVariableDeclarationList_in_ruleXExpressionInsideBlock11779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXExpressionInsideBlock11806 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXVariableDeclarationList_in_entryRuleXVariableDeclarationList11841 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXVariableDeclarationList11851 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_87_in_ruleXVariableDeclarationList11897 = new BitSet(new long[]{0x0008000004000100L,0x0000000000000014L});
	public static final BitSet FOLLOW_ruleXVariableDeclaration_in_ruleXVariableDeclarationList11918 = new BitSet(new long[]{0x0000000200000002L});
	public static final BitSet FOLLOW_33_in_ruleXVariableDeclarationList11931 = new BitSet(new long[]{0x0008000004000100L,0x0000000000000014L});
	public static final BitSet FOLLOW_ruleXVariableDeclaration_in_ruleXVariableDeclarationList11952 = new BitSet(new long[]{0x0000000200000002L});
	public static final BitSet FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter11990 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmFormalParameter12000 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter12046 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleJvmFormalParameter12068 = new BitSet(new long[]{0x0001000000000002L});
	public static final BitSet FOLLOW_48_in_ruleJvmFormalParameter12089 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleJvmFormalParameter12111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter12149 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleFullJvmFormalParameter12159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter12205 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter12226 = new BitSet(new long[]{0x0001000000000002L});
	public static final BitSet FOLLOW_48_in_ruleFullJvmFormalParameter12247 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleFullJvmFormalParameter12269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper12310 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleIdOrSuper12321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper12368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_84_in_ruleIdOrSuper12392 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXObjectLiteral_in_entryRuleXObjectLiteral12434 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXObjectLiteral12444 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_78_in_ruleXObjectLiteral12490 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_88_in_ruleXObjectLiteral12502 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleXObjectLiteralPart_in_ruleXObjectLiteral12523 = new BitSet(new long[]{0x0000000200000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_33_in_ruleXObjectLiteral12536 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleXObjectLiteralPart_in_ruleXObjectLiteral12557 = new BitSet(new long[]{0x0000000200000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_ruleXObjectLiteral12571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXObjectLiteralPart_in_entryRuleXObjectLiteralPart12607 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXObjectLiteralPart12617 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXObjectLiteralPart12659 = new BitSet(new long[]{0x0000040000000000L});
	public static final BitSet FOLLOW_42_in_ruleXObjectLiteralPart12676 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXObjectLiteralPart12697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXArrayLiteral_in_entryRuleXArrayLiteral12733 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXArrayLiteral12743 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_78_in_ruleXArrayLiteral12789 = new BitSet(new long[]{0x0200000000000000L});
	public static final BitSet FOLLOW_57_in_ruleXArrayLiteral12801 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXArrayLiteral12822 = new BitSet(new long[]{0x0400000200000000L});
	public static final BitSet FOLLOW_33_in_ruleXArrayLiteral12835 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXArrayLiteral12856 = new BitSet(new long[]{0x0400000200000000L});
	public static final BitSet FOLLOW_58_in_ruleXArrayLiteral12870 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral12906 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXBooleanLiteral12916 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_70_in_ruleXBooleanLiteral12963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_ruleXBooleanLiteral12987 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral13037 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXNullLiteral13047 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_ruleXNullLiteral13093 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral13129 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXNumberLiteral13139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleNumber_in_ruleXNumberLiteral13194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral13230 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXTypeLiteral13240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_86_in_ruleXTypeLiteral13286 = new BitSet(new long[]{0x0000000004000000L});
	public static final BitSet FOLLOW_26_in_ruleXTypeLiteral13298 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral13321 = new BitSet(new long[]{0x0200000008000000L});
	public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral13342 = new BitSet(new long[]{0x0200000008000000L});
	public static final BitSet FOLLOW_27_in_ruleXTypeLiteral13355 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause13401 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXCatchClause13411 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_64_in_ruleXCatchClause13456 = new BitSet(new long[]{0x0000000004000000L});
	public static final BitSet FOLLOW_26_in_ruleXCatchClause13469 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause13490 = new BitSet(new long[]{0x0000000008000000L});
	public static final BitSet FOLLOW_27_in_ruleXCatchClause13502 = new BitSet(new long[]{0x0000000CC0048000L,0x0000000021000000L});
	public static final BitSet FOLLOW_ruleXExpression_in_ruleXCatchClause13523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName13560 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName13571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName13618 = new BitSet(new long[]{0x0000002000000002L});
	public static final BitSet FOLLOW_37_in_ruleQualifiedName13646 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName13669 = new BitSet(new long[]{0x0000002000000002L});
	public static final BitSet FOLLOW_ruleNumber_in_entryRuleNumber13723 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleNumber13734 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_HEX_in_ruleNumber13778 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_INT_in_ruleNumber13806 = new BitSet(new long[]{0x0000002000000002L});
	public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber13832 = new BitSet(new long[]{0x0000002000000002L});
	public static final BitSet FOLLOW_37_in_ruleNumber13852 = new BitSet(new long[]{0x0000000000001020L});
	public static final BitSet FOLLOW_RULE_INT_in_ruleNumber13868 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber13894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference13949 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmTypeReference13959 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference14007 = new BitSet(new long[]{0x0200000000000002L});
	public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference14043 = new BitSet(new long[]{0x0200000000000002L});
	public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference14074 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets14110 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleArrayBrackets14121 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_57_in_ruleArrayBrackets14159 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_58_in_ruleArrayBrackets14172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef14212 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXFunctionTypeRef14222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_26_in_ruleXFunctionTypeRef14260 = new BitSet(new long[]{0x000800000C000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef14282 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_33_in_ruleXFunctionTypeRef14295 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef14316 = new BitSet(new long[]{0x0000000208000000L});
	public static final BitSet FOLLOW_27_in_ruleXFunctionTypeRef14332 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_51_in_ruleXFunctionTypeRef14346 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef14367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference14403 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference14413 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference14461 = new BitSet(new long[]{0x0000200000000002L});
	public static final BitSet FOLLOW_45_in_ruleJvmParameterizedTypeReference14482 = new BitSet(new long[]{0x0048000004000100L});
	public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference14504 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_33_in_ruleJvmParameterizedTypeReference14517 = new BitSet(new long[]{0x0048000004000100L});
	public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference14538 = new BitSet(new long[]{0x0010000200000000L});
	public static final BitSet FOLLOW_52_in_ruleJvmParameterizedTypeReference14552 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference14590 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference14600 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference14647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference14674 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference14709 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference14719 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_54_in_ruleJvmWildcardTypeReference14765 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100020L});
	public static final BitSet FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference14787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference14814 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound14852 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBound14862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_69_in_ruleJvmUpperBound14899 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound14920 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded14956 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded14966 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_24_in_ruleJvmUpperBoundAnded15003 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded15024 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound15060 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmLowerBound15070 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_84_in_ruleJvmLowerBound15107 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound15128 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmTypeParameter_in_entryRuleJvmTypeParameter15164 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleJvmTypeParameter15174 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_ruleJvmTypeParameter15220 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_ruleJvmUpperBound_in_ruleJvmTypeParameter15242 = new BitSet(new long[]{0x0000000001000002L});
	public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_ruleJvmTypeParameter15263 = new BitSet(new long[]{0x0000000001000002L});
	public static final BitSet FOLLOW_ruleXImportSection1_in_entryRuleXImportSection115304 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXImportSection115314 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXImportDeclaration1_in_ruleXImportSection115360 = new BitSet(new long[]{0x0000100000000002L,0x0000000000000800L});
	public static final BitSet FOLLOW_44_in_ruleXImportSection115373 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
	public static final BitSet FOLLOW_ruleXImportDeclaration1_in_entryRuleXImportDeclaration115412 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXImportDeclaration115422 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_75_in_ruleXImportDeclaration115459 = new BitSet(new long[]{0x0000000000000100L,0x0000000001000080L});
	public static final BitSet FOLLOW_88_in_ruleXImportDeclaration115475 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleXImportItem_in_ruleXImportDeclaration115496 = new BitSet(new long[]{0x0000000200000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_33_in_ruleXImportDeclaration115509 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleXImportItem_in_ruleXImportDeclaration115530 = new BitSet(new long[]{0x0000000200000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_ruleXImportDeclaration115544 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_ruleXImportItem_in_ruleXImportDeclaration115572 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_71_in_ruleXImportDeclaration115585 = new BitSet(new long[]{0x0000000000008000L});
	public static final BitSet FOLLOW_RULE_STRING_in_ruleXImportDeclaration115602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_71_in_ruleXImportDeclaration115627 = new BitSet(new long[]{0x0000000000008000L});
	public static final BitSet FOLLOW_RULE_STRING_in_ruleXImportDeclaration115644 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_62_in_ruleXImportDeclaration115661 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXImportDeclaration115678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXImportItem_in_entryRuleXImportItem15721 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXImportItem15731 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXImportItem15785 = new BitSet(new long[]{0x4000000000000002L});
	public static final BitSet FOLLOW_62_in_ruleXImportItem15798 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXImportItem15815 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXExportSection_in_entryRuleXExportSection15858 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXExportSection15868 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXExportDeclaration_in_ruleXExportSection15914 = new BitSet(new long[]{0x0000100000000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_44_in_ruleXExportSection15927 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_ruleXExportDeclaration_in_entryRuleXExportDeclaration15966 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXExportDeclaration15976 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_ruleXExportDeclaration16013 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000080L});
	public static final BitSet FOLLOW_88_in_ruleXExportDeclaration16027 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleXExportItem_in_ruleXExportDeclaration16048 = new BitSet(new long[]{0x0000000200000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_33_in_ruleXExportDeclaration16061 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleXExportItem_in_ruleXExportDeclaration16082 = new BitSet(new long[]{0x0000000200000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_ruleXExportDeclaration16096 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
	public static final BitSet FOLLOW_71_in_ruleXExportDeclaration16109 = new BitSet(new long[]{0x0000000000008000L});
	public static final BitSet FOLLOW_RULE_STRING_in_ruleXExportDeclaration16126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_71_in_ruleXExportDeclaration16153 = new BitSet(new long[]{0x0000000000008000L});
	public static final BitSet FOLLOW_RULE_STRING_in_ruleXExportDeclaration16170 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_62_in_ruleXExportDeclaration16187 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXExportDeclaration16204 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleXExportItem_in_entryRuleXExportItem16247 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_entryRuleXExportItem16257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXExportItem16302 = new BitSet(new long[]{0x4000000000000002L});
	public static final BitSet FOLLOW_62_in_ruleXExportItem16315 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_RULE_ID_in_ruleXExportItem16332 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_52_in_synpred1_InternalXAML494 = new BitSet(new long[]{0x0000600000000000L});
	public static final BitSet FOLLOW_ruleElementContent_in_synpred1_InternalXAML501 = new BitSet(new long[]{0x0000600000000000L});
	public static final BitSet FOLLOW_46_in_synpred1_InternalXAML508 = new BitSet(new long[]{0x0008000004000100L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_synpred1_InternalXAML515 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_52_in_synpred1_InternalXAML521 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_41_in_synpred1_InternalXAML532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleJvmTypeReference_in_synpred3_InternalXAML5176 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleValidID_in_synpred3_InternalXAML5185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_26_in_synpred4_InternalXAML5423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleValidID_in_synpred5_InternalXAML5452 = new BitSet(new long[]{0x0001000000000000L});
	public static final BitSet FOLLOW_48_in_synpred5_InternalXAML5458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpSingleAssign_in_synpred8_InternalXAML5925 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpMultiAssign_in_synpred9_InternalXAML6172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpOr_in_synpred10_InternalXAML6343 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpAnd_in_synpred11_InternalXAML6602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpEquality_in_synpred12_InternalXAML6861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_76_in_synpred13_InternalXAML7175 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpCompare_in_synpred14_InternalXAML7246 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleBinaryBitwiseOp_in_synpred21_InternalXAML8167 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleShiftOp_in_synpred22_InternalXAML8466 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpAdd_in_synpred23_InternalXAML8637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_54_in_synpred24_InternalXAML8912 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleOpMulti_in_synpred25_InternalXAML9103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rulePrefixOp_in_synpred26_InternalXAML9401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_62_in_synpred27_InternalXAML9992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleIndexOp_in_synpred28_InternalXAML10150 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_26_in_synpred29_InternalXAML10421 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred30_InternalXAML10562 = new BitSet(new long[]{0x0000000000000100L});
	public static final BitSet FOLLOW_ruleFeatureCallID_in_synpred30_InternalXAML10594 = new BitSet(new long[]{0x0001000000000000L});
	public static final BitSet FOLLOW_ruleOpSingleAssign_in_synpred30_InternalXAML10600 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred31_InternalXAML10740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_26_in_synpred32_InternalXAML11003 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_48_in_synpred33_InternalXAML12081 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_48_in_synpred34_InternalXAML12239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_37_in_synpred36_InternalXAML13637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ruleArrayBrackets_in_synpred37_InternalXAML14022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_45_in_synpred38_InternalXAML14474 = new BitSet(new long[]{0x0000000000000002L});
}
